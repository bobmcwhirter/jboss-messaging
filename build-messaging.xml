<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY libraries SYSTEM "thirdparty/libraries.ent">
]>

<!-- =========================================================================================== -->
<!--                                                                                             -->
<!-- JBoss, Home of Professional Open Source                                                     -->
<!-- Copyright 2005, JBoss Inc., and individual contributors as indicated                        -->
<!-- by the @authors tag. See the copyright.txt in the distribution for a                        -->
<!-- full listing of individual contributors.                                                    -->
<!--                                                                                             -->
<!-- This is free software; you can redistribute it and/or modify it                             -->
<!-- under the terms of the GNU Lesser General Public License as                                 -->
<!-- published by the Free Software Foundation; either version 2.1 of                            -->
<!-- the License, or (at your option) any later version.                                         -->
<!--                                                                                             -->
<!-- This software is distributed in the hope that it will be useful,                            -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of                              -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU                            -->
<!-- Lesser General Public License for more details.                                             -->
<!--                                                                                             -->
<!-- You should have received a copy of the GNU Lesser General Public                            -->
<!-- License along with this software; if not, write to the Free                                 -->
<!-- Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA                          -->
<!-- 02110-1301 USA, or see the FSF site: http://www.fsf.org.                                    -->
<!--                                                                                             -->
<!-- =========================================================================================== -->


<!-- =========================================================================================== -->
<!--                                                                                             -->
<!-- $Id$ -->
<!--                                                                                             -->
<!-- =========================================================================================== -->


<project default="compile" name="JBoss Messaging">

   <!-- ======================================================================================== -->
   <!-- Configuration                                                                            -->
   <!-- ======================================================================================== -->

   <!--
        Module name(s) & version.
   -->

   <property name="messaging.version.major" value="2"/>
   <property name="messaging.version.minor" value="0"/>
   <property name="messaging.version.revision" value="0"/>
   <property name="messaging.version.incrementing" value="0"/>
   <property name="messaging.version.tag" value="alpha1"/>
   <property name="messaging.version.name" value="Stilton"/>
   <property name="messaging.version.cvstag" value="JBossMessaging_1_4_0_SP1"/>
   <property name="module.name" value="messaging"/>
   <property name="module.Name" value="JBoss Messaging"/>
   <property name="module.version" value="${messaging.version.major}.${messaging.version.minor}.${messaging.version.revision}.${messaging.version.tag}"/>

   <property name="jms.version.major" value="1"/>
   <property name="jms.version.minor" value="1"/>
   <property name="jms.version" value="1.1"/>

   <!--
        Jar manifest version information.
    -->

   <tstamp>
     <format property="build.number" pattern="yyyyMMddHHmm"/>
   </tstamp>

   <property name="messaging.specification.title" value="${module.Name}"/>
   <property name="messaging.specification.version" value="${module.version}"/>
   <property name="messaging.specification.vendor" value="JBoss Inc. (http://www.jboss.org/)"/>

   <property name="messaging.implementation.title" value="${module.Name}"/>
   <property name="messaging.implementation.url" value="http://www.jboss.org/"/>
   <property name="messaging.implementation.version" value="${messaging.version.major}.${messaging.version.minor}.${messaging.version.revision}.${messaging.version.tag} (build: CVSTag=${messaging.version.cvstag} date=${build.number})"/>
   <property name="messaging.implementation.vendor" value="${messaging.specification.vendor}"/>
   <property name="messaging.implementation.vendor.id" value="${messaging.implementation.url}"/>

   <property environment="ENV"/>

   <!--
        Other local properties.
   -->

   <property name="require.test.results" value="true"/>

   <!--
        Project paths.
   -->

   <property name="project.root" value="${basedir}"/>
   <property name="project.source" value="${project.root}/src"/>
   <property name="source.java" value="${project.source}/main"/>
   <property name="source.etc" value="${project.source}/etc"/>
   <property name="project.output" value="${project.root}/output"/>
   <property name="build.classes" value="${project.output}/classes"/>
   <property name="build.lib" value="${project.output}/lib"/>
   <property name="build.api" value="${project.output}/api"/>
   <property name="build.etc" value="${project.output}/etc"/>
   <property name="build.bin" value="${project.output}/bin"/>
   <property name="build.docs" value="${project.output}/docs"/>
   <property name="build.parsers" value="${project.output}/gen-parsers"/>
   <property name="build.resources" value="${project.output}/resources"/>
   <property name="build.examples" value="${project.output}/examples"/>
   <property name="build.reports" value="${project.output}/reports"/>
   <property name="build.gen" value="${project.output}/gen"/>
   <property name="build.gen-src" value="${project.output}/gen-src"/>
   <property name="build.todo" value="${project.output}/todo"/>
   <property name="build.jar" value="${project.output}/jar"/>
   <property name="build.sar" value="${project.output}/sar"/>
   <property name="build.embedded" value="${project.output}/embedded"/>
   <property name="project.thirdparty" value="${project.root}/thirdparty"/>
   <property name="release.output" value="${project.root}/release/jboss-messaging-${module.version}"/>

   <!-- ======================================================================================== -->
   <!-- Thirdparty Dependency Definitions                                                        -->
   <!-- ======================================================================================== -->

   &libraries;

   <!--
       This module is based on Java 1.5
   -->

   <property name="javac.target" value="1.5"/>
   <property name="javac.source" value="1.5"/>

   <property name="javac.debug" value="true"/>
   <property name="javac.optimize" value="false"/>
   <property name="javac.depend" value="false"/>
   <property name="javac.verbose" value="false"/>
   <property name="javac.deprecation" value="true"/>
   <property name="javac.include.ant.runtime" value="false"/>
   <property name="javac.include.java.runtime" value="true"/>
   <property name="javac.fail.onerror" value="true"/>
   
  

   <!--
        Non-JBoss dependencies.
        They must available in the repository and declared as <componentrefs> in build-thirdparty.xml.
   -->
   <path id="external.dependencies.classpath">
      <path refid="apache.logging.classpath"/>
      <path refid="oswego.concurrent.classpath"/>
      <path refid="javassist.classpath"/>
      <path refid="jgroups.jgroups.classpath"/>
      <path refid="trove.trove.classpath"/>
      <path refid="apache.logging.classpath"/>
      <!-- <pathelement path="${build.lib}/je-3.2.44.jar"/> -->
   </path>

   <!--
        JBoss dependencies.
        They must available in the repository and declared as <componentrefs> in build-thirdparty.xml.

        NOTE: If one of JBoss dependencies (jboss-remoting.jar) is locally
              present in ./lib, it will take precedence over the corresponding repository instance.
    -->
   <path id="jboss.dependencies.classpath">
      <path refid="jboss.common.classpath"/>
      <path refid="jboss.aop.classpath"/>
      <path refid="jboss.remoting.classpath"/>
      <path refid="jboss.jbossts14.classpath"/>
      <!--<path refid="jbossas.core.libs.classpath"/>-->
      <!-- some components at JBoss use JBossSerialization (JCA for instance) -->
      <path refid="jboss.serialization.classpath"/>
      <path refid="jboss.microcontainer.classpath"/>
      <path refid="jboss.jboss.security.spi.classpath"/>
      <path refid="jboss.jboss.jaspi.api.classpath"/>
      <path refid="jboss.integration.classpath"/>
      <path refid="jboss.jbosssx.client.classpath"/>
      <path refid="jboss.jboss.javaee.classpath"/>
   </path>

   <!--
        The compilation classpath.
   -->
   <path id="compilation.classpath">
      <path refid="external.dependencies.classpath"/>
      <path refid="jboss.dependencies.classpath"/>
   </path>

   <!--
        The AOPC classpath.
   -->
   <path id="aopc.classpath">
      <path refid="compilation.classpath"/>
      <pathelement path="${build.classes}"/>
   </path>

   <!-- ======================================================================================== -->
   <!-- Local Dependencies Override Tasks                                                        -->
   <!-- ======================================================================================== -->

   <!-- ======================================================================================== -->
   <!-- Compilation Tasks                                                                        -->
   <!-- ======================================================================================== -->

   <target name="compile"
           depends="compile-parsers, compile-classes, compile-etc"/>

   <target name="compile-parsers">

      <mkdir dir="${build.parsers}/org/jboss/jms/server/selector"/>
      <echo message="${sun.javacc.lib}"/>
      <javacc target="${source.java}/org/jboss/jms/server/selector/SelectorParser.jj"
              outputdirectory="${build.parsers}/org/jboss/jms/server/selector"
              javacchome="${sun.javacc.lib}"
              static="false"/>

      <mkdir dir="${build.classes}"/>
      <javac destdir="${build.classes}"
             target="${javac.target}"
             source="${javac.source}"
             debug="${javac.debug}"
             optimize="${javac.optimize}"
             depend="${javac.depend}"
             verbose="${javac.verbose}"
             deprecation="${javac.deprecation}"
             includeAntRuntime="${javac.include.ant.runtime}"
             includeJavaRuntime="${javac.include.java.runtime}"
             failonerror="${javac.fail.onerror}">
         <src path="${build.parsers}"/>
         <src path="${source.java}"/>
         <include name="org/jboss/jms/server/selector/ASCII_CharStream.java"/>
         <include name="org/jboss/jms/server/selector/ParserException.java"/>
         <include name="org/jboss/jms/server/selector/SelectorParser.java"/>
         <include name="org/jboss/jms/server/selector/SelectorParserConstants.java"/>
         <include name="org/jboss/jms/server/selector/SelectorParserTokenManager.java"/>
         <include name="org/jboss/jms/server/selector/Token.java"/>
         <include name="org/jboss/jms/server/selector/TokenMgrError.java"/>
         <include name="org/jboss/jms/server/selector/Operator.java"/>
         <include name="org/jboss/jms/server/selector/Identifier.java"/>
         <classpath refid="compilation.classpath"/>
      </javac>
   </target>

   <target name="instrument-classes">
      <taskdef name="aopc" classname="org.jboss.aop.ant.AopC" classpathref="jboss.aop.classpath"/>
      <echo message="NOTE: aopc incremental compilation might fail, if so do an ant clean first (see JBMESSAGING-271)"/>
      <aopc compilerclasspathref="aopc.classpath"
            classpathref="aopc.classpath"
            verbose="false">
         <classpath refid="aopc.classpath"/>
         <src path="${build.classes}/org/jboss/jms"/>
         <aoppath path="src/etc/prepare-aop.xml"/>
      </aopc>
   </target>

   <target name="compile-classes">

   <echo message="CLASSPATH: ${compilation.classpath}"/>
      <mkdir dir="${build.classes}"/>
      <!--<display-path path="compilation.classpath"/>-->
      <javac destdir="${build.classes}"
             target="${javac.target}"
             source="${javac.source}"
             optimize="${javac.optimize}"
             debug="${javac.debug}"
             depend="${javac.depend}"
             verbose="${javac.verbose}"
             deprecation="${javac.deprecation}"
             includeAntRuntime="${javac.include.ant.runtime}"
             includeJavaRuntime="${javac.include.java.runtime}"
             failonerror="${javac.fail.onerror}">
         <src path="${source.java}"/>
         <include name="**/*.java"/>
	 <exclude name="**/test/**"/>
	 <exclude name="**/newcore/**"/>
         <classpath refid="compilation.classpath"/>
      </javac>
      
      <antcall target="instrument-classes" />
   </target>

   <target name="compile-etc">

      <mkdir dir="${build.etc}"/>
      <copy todir="${build.etc}" filtering="yes">
         <fileset dir="${source.etc}">
            <include name="**"/>
         </fileset>
         <filterset>
            <filter token="JMS_VERSION" value="${jms.version}"/>
            <filter token="JMS_VERSION_MAJOR" value="${jms.version.major}"/>
            <filter token="JMS_VERSION_MINOR" value="${jms.version.minor}"/>
            <filter token="MODULE_VERSION" value="${module.version}"/>
            <filter token="MESSAGING_VERSION_MAJOR" value="${messaging.version.major}"/>
            <filter token="MESSAGING_VERSION_MINOR" value="${messaging.version.minor}"/>
            <filter token="MESSAGING_VERSION_INCREMENTING" value="${messaging.version.incrementing}"/>
            <filter token="MODULE_NAME" value="${module.Name}"/>
            <filter token="MODULE_VENDOR" value="${messaging.specification.vendor}"/>
            <filter token="MODULE_URL" value="${messaging.implementation.url}"/>
            <filter token="MODULE_IMPLEMENTATION_VERSION" value="${messaging.implementation.version}"/>
            <filter token="JAVA_VM_VERSION" value="${java.vm.version}"/>
            <filter token="JAVA_VM_VENDOR" value="${java.vm.vendor}"/>
         </filterset>
      </copy>
      <move file="${build.etc}/VERSION-PRE-SUBSTITUTE" toFile="${build.etc}/VERSION"/>
   </target>

   <!-- ======================================================================================== -->
   <!-- Javadoc                                                                                  -->
   <!-- ======================================================================================== -->

   <target name="javadoc" depends="compile">

      <javadoc destdir="${build.api}" author="true" version="true" use="true" windowtitle="JBoss Messaging ${module.version}">

         <packageset dir="${source.java}" defaultexcludes="yes">
            <include name="org/jboss/**"/>
         </packageset>

         <doctitle><![CDATA[<h2>JBoss Messaging  ${module.version}</h2>]]></doctitle>
         <bottom><![CDATA[<i>Copyright &#169; 2006 JBoss Inc. All Rights Reserved.</i>]]></bottom>
         <tag name="todo" scope="all" description="To do:"/>
         <group title="JMS Facade" packages="org.jboss.jms.*"/>
         <group title="Messaging Core" packages="org.jboss.messaging.*"/>
      </javadoc>
   </target>

   <property name="jboss.home" value="${ENV.JBOSS_HOME}"/>
    <property name="jboss.config" value="messaging"/>
    <target name="deploy" depends="jar, sar">
        <copy file="${build.lib}/jboss-${module.name}.jar"
            todir="${jboss.home}/server/${jboss.config}/lib"/>
       <!--<copy file="${build.lib}/jboss-${module.name}.sar"
            todir="${jboss.home}/server/${jboss.config}/deploy"/>-->
       <copy
            todir="${jboss.home}/server/${jboss.config}/deploy/messaging.sar">
          <fileset dir="${build.sar}"/>
            </copy>
    </target>
   <!-- ======================================================================================== -->
   <!-- Archival Tasks                                                                           -->
   <!-- ======================================================================================== -->

   <target name="jar" depends="compile, jar-structure">

      <mkdir dir="${build.lib}"/>
      <jar jarfile="${build.lib}/jboss-${module.name}.jar" manifest="${build.etc}/default.mf">
         <fileset dir="${build.classes}" includes="**"/>
         <fileset dir="${build.jar}">
            <exclude name="*-service.xml"/>
            <exclude name="*-ds.xml"/>
            <exclude name="messaging-*.properties"/>
         </fileset>
      </jar>

   </target>

   <!-- Note that the sar doesn't contain jboss-messaging.jar - this is because jboss-messaging.jar actually needs
        to go in server/<config_name>/lib directory, since other components e.g. the JTA recovery manager need to access it
        and won't be able to if it is in the sar -->
   <target name="sar" depends="compile, jar, sar-structure">
      <mkdir dir="${build.lib}"/>
      <jar jarfile="${build.lib}/jboss-${module.name}.sar" manifest="${build.etc}/default.mf">
         <fileset dir="${build.sar}" includes="**"/>
         <fileset dir="${build.jar}">
            <exclude name="aop-messaging-*.xml"/>
            <exclude name="VERSION"/>
            <exclude name="xmdesc/**"/>
         </fileset>
      </jar>
   </target>

   <target name="embedded" depends="compile, jar, embedded-structure"/>
   
   <target name="jar-structure">

      <mkdir dir="${build.jar}/META-INF"/>
      <mkdir dir="${build.jar}/xmdesc"/>
      <copy file="${build.etc}/VERSION" toFile="${build.jar}/VERSION"/>
      <copy todir="${build.jar}" file="${source.etc}/aop-messaging-server.xml"/>
      <copy todir="${build.jar}" file="${source.etc}/aop-messaging-client.xml"/>
   </target>

   <target name="sar-structure" depends="jar-structure">
      <copy todir="${build.sar}/META-INF" file="${source.etc}/server/default/deploy/jbm-beans.xml"/>
      <copy todir="${build.sar}" file="${source.etc}/server/default/deploy/jbm-configuration.xml"/>
   </target>

   <target name="embedded-structure" depends="jar-structure">
      <mkdir dir="${build.embedded}"/>
      <mkdir dir="${build.embedded}/lib"/>
      <copy todir="${build.embedded}">
         <fileset dir="${source.etc}/server/standalone/">
            <include name="**/*"/>
         </fileset>
      </copy>
      <copy todir="${build.embedded}/config" file="${source.etc}/server/default/deploy/jbm-beans.xml"/>
      <copy todir="${build.embedded}/config" file="${source.etc}/server/default/deploy/multiplexer-stacks.xml"/>
      <copy todir="${build.embedded}/config" file="${source.etc}/server/default/deploy/jbm-configuration.xml"/>
      <chmod file="${build.embedded}/run.sh" perm="755"/>
      <jar jarfile="${build.embedded}/lib/jboss-${module.name}.jar" manifest="${build.etc}/embedded.mf">
         <fileset dir="${build.classes}" includes="**"/>
         <fileset dir="${build.jar}">
            <exclude name="*-service.xml"/>
            <exclude name="*-ds.xml"/>
            <exclude name="messaging-*.properties"/>
         </fileset>
      </jar>
      <copy todir="${build.embedded}/lib">
         <fileset dir="${jboss.microcontainer.lib}">
            <include name="jboss-container.jar"/>
            <include name="jboss-kernel.jar"/>
            <include name="jboss-dependency.jar"/>
         </fileset>
         <fileset dir="${jboss.jboss.javaee.lib}">
            <include name="jboss-javaee.jar"/>
         </fileset>
         <fileset dir="${jboss.jboss.common.logging.spi.lib}">
            <include name="jboss-common-logging-spi.jar"/>
         </fileset>
         <fileset dir="${jboss.jbossxb.lib}">
            <include name="jboss-xml-binding.jar"/>
         </fileset>
         <fileset dir="${jboss.integration.lib}">
            <include name="jboss-transaction-spi.jar"/>
         </fileset>
         <fileset dir="${jboss.jboss.security.spi.lib}">
            <include name="jboss-security-spi.jar"/>
         </fileset>
         <fileset dir="${jboss.jboss.jaspi.api.lib}">
            <include name="jboss-jaspi-api.jar"/>
         </fileset>
         <fileset dir="${jboss.jbosssx.client.lib}">
            <include name="jbosssx-client.jar"/>
         </fileset>
         <!--<fileset dir="${jbossas.core.libs.lib}">
            <include name="jboss-j2ee.jar"/>
            <include name="jboss-common.jar"/>
            <include name="jboss-xml-binding.jar"/>
            <include name="jbosssx-client.jar"/>
            <include name="jboss-system.jar"/>
            <include name="jboss-jmx.jar"/>
         </fileset>-->
         <fileset dir="${jboss.common.core.lib}">
            <include name="jboss-common-core.jar"/>
         </fileset>
         <fileset dir="${oswego.concurrent.lib}">
            <include name="concurrent.jar"/>
         </fileset>
         <fileset dir="${apache.xerces.lib}">
            <include name="xercesImpl.jar"/>
         </fileset>
         <fileset dir="${jgroups.jgroups.lib}">
            <include name="jgroups.jar"/>
         </fileset>
         <fileset dir="${jboss.remoting.lib}">
            <include name="jboss-remoting.jar"/>
         </fileset>
         <fileset dir="${apache.logging.lib}">
            <include name="commons-logging.jar"/>
         </fileset>
         <fileset dir="${apache.log4j.lib}">
            <include name="log4j.jar"/>
         </fileset>
         <fileset dir="${hsqldb.hsqldb.lib}">
            <include name="hsqldb.jar"/>
         </fileset>
         <fileset dir="${jboss.jbossts14.lib}">
            <include name="jbossjta.jar"/>
            <include name="jbossts-common.jar"/>
            <include name="jbossjta-integration.jar"/>
         </fileset>
         <fileset dir="${jboss.aop.lib}">
            <include name="jboss-aop-jdk50.jar"/>
         </fileset>
         <fileset dir="${trove.lib}">
            <include name="trove.jar"/>
         </fileset>
         <fileset dir="${javassist.lib}">
            <include name="javassist.jar"/>
         </fileset>
         <fileset dir="${jboss.jnpserver.lib}">
            <include name="jnpserver.jar"/>
         </fileset>
      </copy>
   </target>

   <target name="artifacts" depends="jar, sar, embedded, client-jar"/>

   <target name="client-jar" depends="compile">
      <mkdir dir="${build.lib}"/>

      <jar jarfile="${build.lib}/jboss-messaging-client.jar">

         <manifest>
            <attribute name="Class-path"
                       value="jboss-aop.jar jboss-remoting.jar javassist.jar trove.jar jboss-common-core.jar jboss-j2ee.jar jboss-j2se.jar jnp-client.jar concurrent.jar log4j.jar commons-logging.jar"/>
         </manifest>
         <fileset dir="${build.classes}">
            <!-- TODO This structure is temporary until we partition the classes
                 properly between client and server -->
            <include name="org/jboss/jms/client/**/*.class"/>
            <include name="org/jboss/jms/delegate/**/*.class"/>
            <include name="org/jboss/jms/destination/**/*.class"/>
            <include name="org/jboss/jms/message/**/*.class"/>
            <include name="org/jboss/jms/tx/**/*.class"/>
            <include name="org/jboss/jms/referenceable/*.class"/>
	    <include name="org/jboss/jms/exception/*.class"/>
            <include name="org/jboss/jms/wireformat/*.class"/>
            <include name="org/jboss/messaging/util/**/*.class"/>
	    <include name="org/jboss/messaging/core/impl/message/**/*.class"/>
            <include name="org/jboss/messaging/core/contract/**/*.class"/>
            <include name="org/jboss/jms/server/remoting/**/*.class"/>
         </fileset>
         <fileset dir="${build.etc}">
            <include name="VERSION"/>
         </fileset>

      </jar>
   </target>

   <!-- ======================================================================================== -->
   <!-- Release Tasks                                                                            -->
   <!-- ======================================================================================== -->

   <target name="archive-functional" depends="release-structure">

      <mkdir dir="./tests/output/jboss-messaging-functional-test-results-${module.version}"/>
      <copy todir="./tests/output/jboss-messaging-functional-test-results-${module.version}">
         <fileset dir="./tests/output/reports/html">
            <include name="**"/>
         </fileset>
      </copy>
      <zip destfile="${release.output}/test-results/jboss-messaging-functional-test-results-${module.version}.zip"
           basedir="./tests/output" includes="jboss-messaging-functional-test-results-${module.version}/**"/>
      <delete dir="./tests/output/jboss-messaging-functional-test-results-${module.version}"/>
   </target>

   <target name="archive-stress" depends="release-structure">

      <mkdir dir="./tests/output/jboss-messaging-stress-test-results-${module.version}"/>
      <copy todir="./tests/output/jboss-messaging-stress-test-results-${module.version}">
         <fileset dir="./tests/output/reports/html">
            <include name="**"/>
         </fileset>
      </copy>
      <zip destfile="${release.output}/test-results/jboss-messaging-stress-test-results-${module.version}.zip"
           basedir="./tests/output" includes="jboss-messaging-stress-test-results-${module.version}/**"/>
      <delete dir="./tests/output/jboss-messaging-stress-test-results-${module.version}"/>
   </target>

   <target name="archive-smoke" depends="release-structure">

      <copy todir="${release.output}/test-results">
         <fileset dir="./tests/smoke/output">
            <include name="*.html"/>
         </fileset>
      </copy>
   </target>

   <target name="release-bundle" depends="artifacts, release-structure, examples, userdoc, bundle-source, javadoc">

      <copy todir="${release.output}" file="${build.lib}/jboss-${module.name}.sar"/>
      <copy todir="${release.output}" file="${build.lib}/jboss-${module.name}.jar"/>
      <copy todir="${release.output}" file="${build.lib}/jboss-${module.name}-client.jar"/>
      <copy todir="${release.output}" file="./docs/README.html"/>
      <copy todir="${release.output}" file="./JBossORG-EULA.txt"/>
      <mkdir dir="${release.output}/jboss-${module.name}"/>
      <copy todir="${release.output}/jboss-${module.name}">
         <fileset dir="${build.embedded}" includes="**/*"/>
      </copy>
      <copy todir="${release.output}/api">
         <fileset dir="${build.api}" includes="**"/>
      </copy>
      <copy todir="${release.output}/util">
         <fileset dir="./util" excludes="release-admin.properties">
            <include name="**"/>
         </fileset>
      </copy>
      <zip destfile="${build.lib}/jboss-messaging-${module.version}.zip">
         <zipfileset dir="${release.output}" prefix="jboss-messaging-${module.version}/"/>
         <zipfileset dir="./src/etc/server/default/config" prefix="jboss-messaging-${module.version}/src/etc/server/default/config/"/>
      </zip>
      <echo message="Release bundle jboss-messaging-${module.version}.zip done"/>
   </target>

   <target name="release-structure">

      <mkdir dir="${release.output}/util"/>
      <mkdir dir="${release.output}/examples"/>
      <mkdir dir="${release.output}/docs/userguide"/>
      <mkdir dir="${release.output}/src"/>
      <mkdir dir="${release.output}/test-results"/>
   </target>

   <!-- Note: This target must be ran after the smoke test -->
   <target name="examples" depends="release-structure">

      <copy todir="${release.output}/examples">
         <fileset dir="./docs/examples" excludes="examples.properties">
            <exclude name="programmatic-deployment"/>
         </fileset>
      </copy>
      <copy todir="${release.output}/examples/config">
         <fileset dir="./src/etc/server/default/deploy">
            <include name="*-persistence-service.xml"/>
            <include name="*-ds.xml"/>
         </fileset>
         <fileset dir="./src/etc/remoting">
            <include name="*-service.xml"/>
         </fileset>
      </copy>
   </target>

   <target name="userdoc" depends="release-structure">

      <ant dir="./docs/userguide" antfile="build.xml" target="all"/>
      <copy todir="${release.output}/docs/userguide">
         <fileset dir="${project.output}/docs/userguide/en">
            <include name="**"/>
         </fileset>
      </copy>
   </target>

   <target name="bundle-source" depends="release-structure">

      <zip destfile="${release.output}/src/jboss-messaging-${module.version}-src.zip"
           basedir="${source.java}" excludes="**/CVS,*.iml"/>
      <zip destfile="${release.output}/src/jboss-messaging-tests-${module.version}-src.zip"
           basedir="${project.root}/tests/src" includes="org/jboss/test/**" excludes="**/CVS,*.iml"/>
   </target>

   <target name="bundle-test-results" depends="release-structure" if="require.test.results">

      <available file="${release.output}/test-results/jboss-messaging-functional-test-results-${module.version}.zip"
                 property="functional.test.results.present" value="true"/>
      <fail message="Functional test results ${release.output}/test-results/jboss-messaging-functional-test-results-${module.version}.zip not available!"
            unless="functional.test.results.present"/>

<!--
      <available file="${release.output}/test-results/jboss-messaging-functional-test-results-Linux-${module.version}.zip"
                 property="linux.functional.test.results.present" value="true"/>
      <fail message="Linux functional test results ${release.output}/test-results/jboss-messaging-functional-test-results-Linux-${module.version}.zip not available!"
            unless="linux.functional.test.results.present"/>
-->

      <available file="${release.output}/test-results/jboss-messaging-stress-test-results-${module.version}.zip"
                 property="stress.test.results.present" value="true"/>
      <fail message="Stress test results ${release.output}/test-results/jboss-messaging-stress-test-results-${module.version}.zip not available!"
            unless="stress.test.results.present"/>

<!--
      <available file="${release.output}/test-results/jboss-messaging-stress-test-results-Linux-${module.version}.zip"
                 property="linux.stress.test.results.present" value="true"/>
      <fail message="Linux stress test results ${release.output}/test-results/jboss-messaging-stress-test-results-Linux-${module.version}.zip not available!"
            unless="linux.stress.test.results.present"/>
-->

   </target>

   <target name="deploydefault" depends="jar">
      <copy file="${build.lib}/jboss-${module.name}.sar"
            todir="${ENV.JBOSS_HOME}/server/default/deploy"/>
   </target>

   <target name="undeploydefault">
      <delete file="${ENV.JBOSS_HOME}/server/default/deploy/jboss-${module.name}.sar"/>
   </target>

   <target name="source-bundle">
      <mkdir dir="${build.lib}"/>
      <zip destfile="${build.lib}/jboss-messaging-${module.version}-src.zip">
         <zipfileset dir="${project.root}" prefix="jboss-messaging-${module.version}-src">
            <exclude name="**/.svn"/>
            <exclude name="*.iml"/>
            <exclude name="*.ipr"/>
            <exclude name="*.iws"/>
            <exclude name="**/output/**"/>
            <exclude name="release/**"/>
         </zipfileset>
      </zip>
   </target>

   <!-- ======================================================================================== -->
   <!-- TCK Tasks                                                                                -->
   <!-- ======================================================================================== -->

   <target name="cts-deploy" depends="jar">
      <copy file="${build.lib}/jboss-${module.name}.sar"
         todir="${ENV.JBOSS_HOME}/server/cts-messaging/deploy"/>
   </target>

   <target name="cts-undeploy">
      <delete file="${ENV.JBOSS_HOME}/server/cts-messaging/deploy/jboss-${module.name}.sar"/>
   </target>

   <!-- ======================================================================================== -->
   <!-- Cleaning Tasks                                                                           -->
   <!-- ======================================================================================== -->

   <target name="clean">

      <delete dir="${project.output}" quiet="true"/>

      <ant dir="./docs/examples/queue" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/topic" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/mdb" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/mdb-failure" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/stateless" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/ejb3mdb" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/secure-socket" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/distributed-queue" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/distributed-topic" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/queue-failover" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/http" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/web-service" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./docs/examples/stateless-clustered" antfile="build.xml" inheritAll="false" target="clean"/>
      <ant dir="./tests" antfile="build.xml" inheritAll="false" target="clean"/>
   </target>

   <!-- ======================================================================================== -->
   <!-- Macros                                                                                   -->
   <!-- ======================================================================================== -->

   <macrodef name="display-path">
      <attribute name="path"/>
      <sequential>
         <pathconvert refid="@{path}" targetos="unix" property="@{path}.representation"/>
         <echo message="@{path}: ${@{path}.representation}"/>
      </sequential>
   </macrodef>

</project>
