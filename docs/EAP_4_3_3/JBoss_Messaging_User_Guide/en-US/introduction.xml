<?xml version="1.0" encoding="UTF-8"?>
<chapter id="introduction">
   <title>Introduction</title>

   <para>JBoss Messaging provides an open source and standards-based messaging
   platform that brings enterprise-class messaging to the mass market.</para>

   <para>JBoss Messaging implements a high performance, robust messaging core
   that is designed to support the largest and most heavily utilized SOAs,
   enterprise service buses (ESBs) and other integration needs ranging from
   the simplest to the highest demand networks.</para>

   <para>It will allow you to smoothly distribute your application load across
   your cluster, intelligently balancing and utilizing each nodes CPU cycles,
   with no single point of failure, providing a highly scalable and performant
   clustering implementation.</para>

   <para>JBoss Messaging includes a JMS front-end to deliver messaging in a
   standards-based format as well as being designed to be able to support
   other messaging protocols in the future.</para>

	<note>
		<para>JBoss Messaging 1.4 is the default JMS provider in JBoss Enterprise Application Platform 4.3.</para>
	</note>

   <section id="features">
      <title>JBoss Messaging Features</title>

      <para>JBoss Messaging provides:</para>

      <itemizedlist>
         <listitem>
            <para>A fully compatible and Sun certified JMS 1.1 implementation,
            that currently works with a standard 4.3 or later JBoss
            Application Platform installation.</para>
         </listitem>

         <listitem>
            <para>A strong focus on performance, reliability and scalability
            with high throughput and low latency.</para>
         </listitem>

         <listitem>
            <para>A foundation for JBoss ESB for SOA initiatives; JBoss ESB
            uses JBoss Messaging as its default JMS provider.</para>
         </listitem>
      </itemizedlist>

      <para>Other JBoss Messaging features include:</para>

      <itemizedlist>
         <listitem>
            <para>Publish-subscribe and point-to-point messaging models</para>
         </listitem>

         <listitem>
            <para>Persistent and non-persistent messages</para>
         </listitem>

         <listitem>
            <para>Guaranteed message delivery that ensures that messages
            arrive once and only once where required</para>
         </listitem>

         <listitem>
            <para>Transactional and reliable - supporting ACID
            semantics</para>
         </listitem>

         <listitem>
            <para>Customizable security framework based on JAAS</para>
         </listitem>

         <listitem>
            <para>Fully integrated with JBoss Transactions (formerly known as
            Arjuna JTA) for full transaction recoverability.</para>
         </listitem>

         <listitem>
            <para>Extensive JMX management interface</para>
         </listitem>

         <listitem>
            <para>Support for most major databases including Oracle, Sybase,
            MS SQL Server, PostgreSQL and MySQL</para>
         </listitem>

         <listitem>
            <para>HTTP transport to allow use through firewalls that only
            allow HTTP traffic</para>
         </listitem>

         <listitem>
            <para>SSL transport</para>
         </listitem>

         <listitem>
            <para>Configurable DLQs (Dead Letter Queues) and Expiry
            Queues</para>
         </listitem>

         <listitem>
            <para>Message statistics. Gives you a rolling historical view of
            what messages were delivered to what queues and
            subscriptions</para>
         </listitem>

         <listitem>
            <para>Automatic paging of messages to storage. Allows the use of
            very large queues - too large to fit in memory at once</para>
         </listitem>
      </itemizedlist>

      <para>Clustering features:</para>

      <itemizedlist>
         <listitem>
            <para>Fully clustered queues and topics. "Logical" queues and
            topics are distributed across the cluster. You can send to a queue
            or a topic from any node, and receive from any other.</para>
         </listitem>

         <listitem>
            <para>Fully clustered durable subscriptions. A particular durable
            subscription can be accessed from any node of the cluster -
            allowing you to spread processing load from that subscription
            across the cluster.</para>
         </listitem>

         <listitem>
            <para>Fully clustered temporary queues. Send a message with a
            replyTo of a temp queue and it can be sent back on any node of the
            cluster.</para>
         </listitem>

         <listitem>
            <para>Intelligent message redistribution. Messages are
            automatically moved between different nodes of the cluster if
            consumers are faster on one node than another. This can help
            prevent starvation or build up of messages on particular
            nodes.</para>
         </listitem>

         <listitem>
            <para>Message order protection. If you want to ensure that the
            order of messages produced by a producer is the same as is
            consumed by a consumer then you can set this to true. This works
            even in the presence of message redistribution.</para>
         </listitem>

         <listitem>
            <para>Fully transparent failover. When a server fails, your
            sessions continue without exceptions on a new node as if nothing
            happened. (Fully configurable - If you don't want this you can
            fall back to exceptions being thrown and manually recreation of
            connections on another node)</para>
         </listitem>

         <listitem>
            <para>High availability and seamless fail-over. If the node you
            are connected to fails, you will automatically fail over to
            another node and will not lose any persistent messages. You can
            carry on with your session seamlessly where you left off. Once and
            only once delivery of persistent messages is respected at all
            times.</para>
         </listitem>

         <listitem>
            <para>Message bridge. JBoss Messaging contains a message bridge
            component which enables you to bridge messages between any two
            JMS1.1 destinations on the same or physical separate locations.
            (E.g. separated by a WAN). This allows you to connect
            geographically separate clusters, forming huge globally
            distributed logical queues and topics.</para>
         </listitem>
      </itemizedlist>
   </section>

   <section id="compatibility">
      <title>Compatibility with JBossMQ</title>

      <para>JBoss MQ is the JMS implementation currently shipped within JBoss
      EAP 4.2. Since JBoss Messaging is JMS 1.1 and JMS 1.0.2b compatible, the JMS
      code written against JBossMQ will run with JBoss Messaging without any
      changes.</para>

      <para>JBoss Messaging does not have wire format compatibility with JBoss
      MQ so it would be necessary to upgrade JBoss MQ clients with JBoss
      Messaging client jars</para>

      <important>
<para>
             Even if JBoss Messaging deployment descriptors are very similar to JBoss MQ deployment descriptors, they are 

            <emphasis>not</emphasis>

             identical, so they will require some simple adjustments to get them to work with JBoss Messaging. Also, the database data model is completely different, so don't attempt to use JBoss Messaging with a JBoss MQ data schema and vice-versa. 
</para>
         </important>
   </section>
<section id="introduction-Feedback">
		<title>Feedback</title>
		<para>
			If you spot a typo in this guide, or if you have thought of a way to make this manual better, we would love to hear from you! Submit a report in <ulink url="http://jira.jboss.com/jira/browse/JBPAPP">JIRA</ulink> against the Product: JBoss Enterprise Application Platform, Version: <replaceable>&lt;version&gt;</replaceable>, Component: <emphasis>Doc</emphasis>. If you have a suggestion for improving the documentation, try to be as specific as possible. If you have found an error, include the section number and some of the surrounding text so we can find it easily.
		</para>
	</section>
	
	<section id="introduction-Other_Manuals">
		<title>Other Manuals</title>
		<para>
			If you are looking for detailed product information refer to the manuals available online at <ulink url="http://www.redhat.com/docs/en-US/JBoss_Enterprise_Application_Platform/"></ulink>.
		</para>
	</section>
</chapter>
