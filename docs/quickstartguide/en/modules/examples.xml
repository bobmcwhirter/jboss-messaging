<?xml version="1.0" encoding="UTF-8"?>
<chapter id="examples">
   <title>Running the Examples</title>
   <para>In the directory <literal>examples</literal> there are 2 sets of examples, these are </para>
   <itemizedlist>
      <listitem>
         <para>JMS Examples</para>
      </listitem>
      <listitem>
         <para>Java EE Examples</para>
      </listitem>
   </itemizedlist>
   <para>All the examples are run using Ant.</para>
   <section id="examples.jms">
      <title>The JMS examples</title>
      <para>The JMS Examples all follow the same format. Each examples is contained in its own
         directory which contains the following.</para>
      <itemizedlist>
         <listitem>
            <para>build.xml</para>
            <para>This is the ant build file used to run the example</para>
         </listitem>
         <listitem>
            <para>src directory</para>
            <para>This contains the source code for the example</para>
         </listitem>
         <listitem>
            <para>server0 config dir</para>
            <para>This contains the configuration files needed to run the server for the example.
               There may be multiple config directories server0, server1 etc for clustered examples
               etc.</para>
         </listitem>
      </itemizedlist>
      <para>Each example will start 1 or more standalone servers and stop them after the example has
         completed.</para>
      <para>As a quick start we'll run the queue example. For all other examples refer to the main
         User Manual.</para>
      <para>Firstly open a Shell or a Command prompt and navigate to the <literal
            >examples/jms/queue</literal> directory.</para>
      <para>Type the command <literal>ant</literal> and you should see the following output:</para>
      <programlisting>Buildfile: build.xml

run:

init:

compile:
     [echo] src.example.dir=/home/andy/projects/JBMTrunk/examples/jms/queue/src
    [javac] Compiling 5 source files to /home/andy/projects/JBMTrunk/examples/jms/queue
/build/classes

runExample:
     [java] 10:41:04,149 INFO  @main [JMSExample] jbm.example.runServer is true
     [java] 10:41:04,149 INFO  @main [JMSExample] starting server with config 'server0'
 logServerOutput true
     [java] 10:41:04,149 INFO  @main [JMSExample] and vm args: -Xms512M,-Xmx512M,-XX:+U
seParallelGC,-XX:+AggressiveOpts,-XX:+UseFastAccessorMethods,-Djava.util.logging.config.
file=/home/andy/projects/JBMTrunk/examples/jms/common/../../../src/config/stand-alone/no
n-clustered/logging.properties
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:08,437 INFO  @main [Journal
StorageManager] AIO journal selected
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:08,437 WARN  @main [Journal
StorageManager] AIO wasn't located on this platform, it will fall back to using pure Jav
a NIO. If your platform is Linux, install LibAIO to enable the AIO journal
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:08,437 WARN  @main [Securit
yStoreImpl] It has been detected that the cluster admin password which is used to replic
ate management operation from one node to the other has not had its password changed fro
m the installation default. Please see the JBoss Messaging user guide for instructions o
n how to do this.
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:10,941 INFO  @main [JBossCo
nnectionFactory] read only is false
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:10,941 INFO  @main [JBossCo
nnectionFactory] read only is false
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:10,941 INFO  @main [JBossCo
nnectionFactory] read only is false
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:10,991 WARN  @main [JMSServ
erManagerImpl] Binding for java:/ConnectionFactory already exists
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:10,991 WARN  @main [JMSServ
erManagerImpl] Binding for java:/XAConnectionFactory already exists
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:11,241 INFO  @main [Messagi
ngServerImpl] JBoss Messaging Server version 2.0.0.BETA1-SNAPSHOT (Stilton, 101) started
     [java] org.jboss.jms.example.SpawnedJMSServer out:10:41:11,241 INFO  @main [JBMBoot
strapServer] JBoss Messaging server started
     [java] org.jboss.jms.example.SpawnedJMSServer out:STARTED::
     [java] 10:41:11,276 INFO  @main [JMSExample] using server0/client-jndi.properties f
or jndi
     [java] Sent message: This is a text message
     [java] Received message: This is a text message
     [java] 
     [java] #####################
     [java] ###    SUCCESS!   ###
     [java] #####################

BUILD SUCCESSFUL
Total time: 13 seconds
</programlisting>
      <para>Congratulations! You have succesfully run your first Jboss Messaging example. Try some
         of the others.</para>
   </section>
   <section id="examples.messaging">
      <title>The Java EE Examples</title>
      <para>The Java EE Examples are examples that require an Application Server to run. They
         include MDB, Servlet, EJB examples etc. For this you will need The JBoss Application Server
         installed. How to do this is explained in the previous chapters.</para>
      <para>We'll use the MDB example for the purposes of this guide. For the other examples refer
         to the user guide. Before going any further ensure that the Jboss Application Server is
         running.</para>
      <para>Like the other Java EE examples the MDB example is a J2EE Application which first needs
         deploying in the JBoss Application Server. The first thing we need to do is set the
            <literal>JBOSS_HOME</literal> environment property to the location of the JBoss
         Application Server, in a Linux shell this would be something like:</para>
      <programlisting>export JBOSS_HOME=/home/jbossas5.1/build/output/jboss-5.1.0.GA</programlisting>
      <para>Once set we can then deploy the application, from inside the <literal
            >examples/javaee/mdb</literal> directory run the command:</para>
      <programlisting>ant deploy</programlisting>
      <para>In the shell window you should see something like the following output:</para>
      <programlisting>Buildfile: build.xml

validate-jboss:

deploy:

deploy-resources:
     [copy] Copying 1 file to /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
     /server/default-with-jbm2/deploy/messaging.sar
     [copy] Copying 1 file to /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
     /server/default-with-jbm2/deploy/messaging.sar

init:

compile:

jar:
      [jar] Building jar: /home/andy/projects/JBMTrunk/examples/javaee/mdb/build/mdb-exa
      mple.jar

ear:
      [jar] Building jar: /home/andy/projects/JBMTrunk/examples/javaee/mdb/build/mdb-exa
      mple.ear

deploy-ear:
     [copy] Copying 1 file to /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
     /server/default-with-jbm2/deploy

deploy-misc:

BUILD SUCCESSFUL
Total time: 6 seconds
</programlisting>
      <para>You can then confirm that the application has been succesfully deployed by checking the
         output from the JBoss Application Server, you should see something like:</para>
      <programlisting>
16:26:31,584 INFO  [Ejb3DependenciesDeployer] Encountered deployment AbstractVFSDeploymen
tContext@1992739{vfszip:/home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA/server
/default-with-jbm2/deploy/mdb-example.ear/mdb-example.jar/}
16:26:31,584 INFO  [Ejb3DependenciesDeployer] Encountered deployment AbstractVFSDeploymen
tContext@1992739{vfszip:/home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA/server
/default-with-jbm2/deploy/mdb-example.ear/mdb-example.jar/}
16:26:31,621 INFO  [JBossASKernel] Created KernelDeployment for: mdb-example.jar
16:26:31,622 INFO  [JBossASKernel] installing bean: jboss.j2ee:ear=mdb-example.ear,jar=md
b-example.jar,name=Mes
sageMDBExample,service=EJB3
16:26:31,622 INFO  [JBossASKernel]   with dependencies:
16:26:31,622 INFO  [JBossASKernel]   and demands:
16:26:31,622 INFO  [JBossASKernel] 	jboss.ejb:service=EJBTimerService
16:26:31,622 INFO  [JBossASKernel]   and supplies:
16:26:31,622 INFO  [JBossASKernel] 	jndi:null
16:26:31,622 INFO  [JBossASKernel] 	Class:javax.jms.MessageListener
16:26:31,622 INFO  [JBossASKernel] Added bean(jboss.j2ee:ear=mdb-example.ear,jar=mdb-examp
le.jar,name=MessageMD
BExample,service=EJB3) to KernelDeployment of: mdb-example.jar
16:26:31,651 INFO  [EJBContainer] STARTED EJB: org.jboss.javaee.example.server.MDBExample 
ejbName: MessageMDBEx
ample
</programlisting>
      <para>We can now run the example, do this by running the follwing command from within the
            <literal>mdb</literal> directory.</para>
      <programlisting>ant</programlisting>
      <para>You should see some output similar to the following:</para>
      <programlisting>Buildfile: build.xml

run:

init:

compile:

runExample:
     [java] Sent message: This is a text message

BUILD SUCCESSFUL
Total time: 7 seconds</programlisting>
      <para>You may also see some output from the JBoss Application Server, in this instance it
         is:</para>
      <programlisting>16:27:54,703 INFO  [STDOUT] message This is a text message received</programlisting>
      <para>The application can then be undeployed by running the following command from within the
            <literal>mdb</literal> directory.</para>
      <programlisting>ant undeploy</programlisting>
      <para>This should so some output similar to the following:</para>
      <programlisting>Buildfile: build.xml

validate-jboss:

undeploy:

undeploy-misc:
   [delete] Deleting: /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
   /server/default-with-jbm2/deploy/mdb-example.ear
   [delete] Deleting: /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
   /server/default-with-jbm2/deploy/messaging.sar/jbm-queues.xml
   [delete] Deleting: /home/andy/projects/jbossas5.1/build/output/jboss-5.1.0.GA
   /server/default-with-jbm2/deploy/messaging.sar/jbm-jms.xml

BUILD SUCCESSFUL
Total time: 1 second
</programlisting>
      <para>You can verify that the application has been undeployed by checking the output from the
         JBoss Application Server, in this isntance it will be something like:</para>
      <programlisting>16:36:45,277 INFO  [EJBContainer] STOPPED EJB: org.jboss.javaee.example.server.MDBExample 
         ejbName: MessageMDBExample
</programlisting>
      <para>Congratulations! you have sucessfully deployed and run a Java EE example.</para>
   </section>
</chapter>
