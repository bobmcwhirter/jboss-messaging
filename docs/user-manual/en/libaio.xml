<?xml version="1.0" encoding="UTF-8"?>
<chapter id="libaio">
    <title>Libaio Native Libraries</title>
    <para>JBoss Messaging distributes a native library, used as a bridge between JBoss Messaging and
        linux libaio.</para>
    <para><literal>libaio</literal> is a library, developed as part of the linux kernel project.
        With <literal>libaio</literal> we submit writes to the operating system where they are
        processed asynchronously. Some time later the OS will call our code back when they have been
        processed.</para>
    <para>These are the native libraries distributed by JBoss Messaging:</para>
    <itemizedlist>
        <listitem>
            <para>libJBMLibAIO32.so - x86 32 bits</para>
        </listitem>
        <listitem>
            <para>libJBMLibAIO64.so - x86 64 bits</para>
        </listitem>
        <listitem>
            <para>libJBMLibAIO_ia64.so - Itanium 64 bits</para>
        </listitem>
    </itemizedlist>
    <para>When using libaio, JBoss Messaging will aways try loading these files as long as they are
        on the <link linkend="using-server.library.path">library path</link>.</para>
    <section>
        <title>Compiling the native libraries</title>
        <para>Case you are using Linux on a platform other than x86_32, x86_64 or IA64 (Itanium),
            (for example IBM POWER) you may need to compile the native library, since we do not
            distribute binaries for those platforms with the release.</para>
        <section>
            <title>Install requirements</title>
            <note>
                <para>At the moment the native layer is only available on Linux. If you are in a
                    platform other then Linux the native compilation will not work</para>
            </note>
            <para>The native library uses <ulink url="http://en.wikipedia.org/wiki/Autoconf"
                    >autoconf</ulink> what makes the compilation process easy, however you need to
                install extra packages as a requirement for compilation:</para>
            <itemizedlist>
                <listitem>
                    <para>gcc - C Compiler</para>
                </listitem>
                <listitem>
                    <para>gcc-c++ or g++ - Extension to gcc with support for C++</para>
                </listitem>
                <listitem>
                    <para>autoconf - Tool for automating native build process</para>
                </listitem>
                <listitem>
                    <para>make - Plain old make</para>
                </listitem>
                <listitem>
                    <para>automake - Tool for automating make generation</para>
                </listitem>
                <listitem>
                    <para>libtool - Tool for link editing native libraries</para>
                </listitem>
                <listitem>
                    <para>libaio - library to disk asynchronous IO kernel functions</para>
                </listitem>
                <listitem>
                    <para>libaio-dev - Compilation support for libaio</para>
                </listitem>
                <listitem>
                    <para>A full JDK installed with the environment variable JAVA_HOME set to its
                        location</para>
                </listitem>
            </itemizedlist>
            <para>To perform this installation on RHEL or Fedora, you can simply type this at a
                command line:</para>
            <programlisting>sudo yum install automake libtool autoconf gcc-g++ gcc libaio libaio-dev make</programlisting>
            <para>Or on debian systems:</para>
            <programlisting>sudo apt-get install automake libtool autoconf gcc-g++ gcc libaio libaio-dev make</programlisting>
            <note>
                <para>You could find a slight variation of the package names depending on the
                    version and linux distribution. (for example gcc-c++ on Fedora versus g++ on
                    Debian systems)</para>
            </note>
        </section>
        <section>
            <title>Invoking the compilation</title>
            <para>In the distribution, in the <literal>native-src</literal> directory, execute the
                shell script <literal>bootstrap</literal>. This script will invoke <literal
                    >automake</literal> and <literal>make</literal> what will create all the make
                files and the native library.</para>
            <programlisting>someUser@someBox:/messaging-distribution/native-src$ ./bootstrap 
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /bin/mkdir -p

...

configure: creating ./config.status
config.status: creating Makefile
config.status: creating ./src/Makefile
config.status: creating config.h
config.status: config.h is unchanged
config.status: executing depfiles commands
config.status: executing libtool commands

...</programlisting>
            <para>The produced library will be at <literal
                    >./native-src/src/.libs/libJBMLibAIO.so</literal>. Simply move that file over
                    <literal>bin</literal> on the distribution or the place you have chosen on the
                    <link linkend="using-server.library.path">library path</link>.</para>
            <para>If you want to perform changes on the JBoss Messaging libaio code, you could just
                call make directly at the <literal>native-src</literal> directory.</para>
        </section>
    </section>
</chapter>
