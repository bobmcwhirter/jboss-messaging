<?xml version="1.0" encoding="UTF-8"?>
<chapter id="embedding-jbm">
    <title>Embedding JBoss Messaging</title>
    <para>JBoss Messaging was designed as a simple set of POJOs, and it was designed to be
        embeddable.</para>
    <para>Embedding JBM can be done in very few easy steps. Instantiate the configuration object,
        instantiate the server, start it, and you have a JBoss Messaging running in your virtual
        machine. Easy and simple like that.</para>
    <section>
        <title>POJO instantiation</title>
        <para>You can follow this step-by-step guide:</para>
        <para>Create the configuration object. If you need a configuration file, use
            FileConfigurationImpl</para>
        <programlisting>import org.jboss.messaging.core.config.Configuration;
import org.jboss.messaging.core.config.impl.FileConfiguration;

...


Configuration config = new FileConfiguration();
config.setConfigurationUrl(urlToYourconfigfile);
config.start();</programlisting>
        <para>If you don't need to support a configuration file, just use <literal
                >ConfigurationImpl</literal> and change the config parameters accordingly, such as
            adding acceptors. </para>
        <para>The acceptors are configured through <literal>ConfigurationImpl</literal>. Just add
            the NettyAcceptorFactory on the transports the same way you would thorugh the main
            configuration file.</para>
        <programlisting>import org.jboss.messaging.core.config.Configuration;
import org.jboss.messaging.core.config.impl.ConfigurationImpl;

...

Configuration config = new ConfigurationImpl();
HashSet&lt;TransportConfiguration> transports = new HashSet&lt;TransportConfiguration>();
      
transports.add(new TransportConfiguration(NettyAcceptorFactory.class.getName()));
transports.add(new TransportConfiguration(InVMAcceptorFactory.class.getName()));

config.setAcceptorConfigurations(transports);</programlisting>
        <para>You need to instantiate and start JBoss Messaging server. The class <literal
                >Messaging</literal> on package <literal>org.jboss.messaging.core.server</literal>
            has a few static methods helpful on instantiating the server, which is aways our
            preferable way of instantiating the server.</para>
        <programlisting>import org.jboss.messaging.core.server.Messaging;
import org.jboss.messaging.core.server.MessagingServer;

...

MessagingServer server = Messaging.newMessagingServer(config);

server.start();</programlisting>
        <para>You also have the option of instantiating <literal>MessagingServerImpl</literal>
            directly:</para>
        <programlisting>MessagingServer server = new MessagingServerImpl(config,
                                                 ManagementFactory.getPlatformMBeanServer(),
                                                 new JBMSecurityManagerImpl());
server.start();
        </programlisting>
    </section>
    <section>
        <title>Dependency Frameworks</title>
        <para>You may also choose to use a dependency injection framework such as JBoss Micro
            Container or Spring.</para>
        <para>TODO</para>
    </section>
</chapter>
