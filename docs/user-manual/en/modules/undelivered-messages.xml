<?xml version="1.0" encoding="UTF-8"?>
<chapter id="undelivered-messages">
    <title>Undelivered Messages</title>
    <para>Messages can be delivered unsuccessfully (e.g. if the transacted session used to consume them is rolled back).
        Such a message goes back to its queue ready to be redelivered.
        However, this means it is possible for a message to be delivered 
        again and again without any success and remain in the queue, clogging the system.</para>
    <para>There are 2 ways to deal with these undelivered messages:</para>
    <itemizedlist>
      <listitem>
         <para><literal>delayed redelivery</literal></para>
         <para>It is possible to delay messages redelivery to let the client some time to recover
            from transient failures and not overload its network or CPU resources</para>
      </listitem>
      <listitem>
         <para><literal>dead letter address</literal></para>
         <para>It is also possible to configure a dead letter address so that after a specified
            number of unsuccessful deliveries, messages are removed from the queue and will not
            be delivered again</para>
      </listitem>
    </itemizedlist>
    <para>Both options can be combined for maximum flexibility.</para>

    <section>
        <title>Delayed Redelivery</title>
        <para>Delaying redelivery can often be useful in the case that clients regularly fail or rollback.
            Without a delayed redelivery, the system can get into a "thrashing" state, with delivery being
            attempted, the client rolling back, and delivery being re-attempted ad infinitum in quick 
            succession, consuming valuable CPU and network resources.</para>
        <section>
           <title>Configuring Delayed Redelivery</title>
           <para>Delayed redelivery is defined in the address-setting configuration:</para>
           <programlisting>
     &lt;!-- delay redelivery of messages for 5s --&gt;
     &lt;address-setting match="jms.queue.exampleQueue"&gt;
        &lt;redelivery-delay&gt;5000&lt;/redelivery-delay&gt;
     &lt;/address-setting&gt;
             </programlisting>
           <para>If a <literal>redelivery-delay</literal> is specified, JBoss Messaging will wait this delay
           before redelivering the messages</para>
           <para>By default, there is no redelivery delay (<literal>redelivery-delay</literal>is set to 0).</para>
        </section>
        <section>
            <title>Example</title>
            <para>The <ulink url="../../../../examples/jms/delayed-redelivery/readme.html"><literal>delayed-redelivery</literal> example</ulink> shows
            how delayed redelivery is configured and used with JMS.</para>
        </section>     
    </section>
    
    <section>
        <title>Dead Letter Addresses</title>
        <para>To prevent a client to receive infinitely the same undelivered message (regardless of what is causing
           the unsuccessful deliveries), messaging systems define dead letter messages: after a specified unsuccessful delivery attempts, the message is removed from the queue and send instead to a dead letter address.
           </para>
        <para>JBoss Messaging's addresses can be assigned a dead letter address. Once the messages have
           be unsuccessfully delivered for a given number of attempts, they are removed from the queue 
           and sent to the dead letter address. These <emphasis>dead letter</emphasis> messages can later 
           be consumed for further inspection.</para>

        <section>
           <title>Configuring Dead Letter Addresses</title>
           <para>Dead letter address is defined in the address-setting configuration:</para>
           <programlisting>
     &lt;!-- undelivered messages in exampleQueue will be sent to the dead letter address deadLetterQueue
             after 3 unsuccessful delivery attempts
      --&gt;
     &lt;address-setting match="jms.queue.exampleQueue"&gt;
        &lt;dead-letter-address&gt;jms.queue.deadLetterQueue&lt;/dead-letter-address&gt;
        &lt;max-delivery-attempts&gt;3&lt;/max-delivery-attempts&gt;
     &lt;/address-setting&gt;
             </programlisting>
           <para>If a <literal>dead-letter-address</literal> is not specified, messages will removed after <literal>max-delivery-attempts</literal> unsuccessful attempts.</para>
           <para>By default, messages are redelivered 10 times at the maximum. Set <literal>max-delivery-attempts</literal> to -1 for infinite redeliveries.</para>
           <para>For example, a dead letter can be set globally for a set of matching addresses and you can set <literal>max-delivery-attempts</literal>
             to -1 for a specific address setting to allow infinite redeliveries only for this address.</para>
        </section>
        <section>
           <title>Dead Letter Properties</title>
           <para>Dead letter messages which are consumed from a dead letter address have the following property:</para>
           <itemizedlist>
            <listitem>
               <para><literal>_JBM_ORIG_DESTINATION</literal></para>
               <para>a String property containing the <emphasis>original destination</emphasis> of the
               dead letter message </para>
            </listitem>
           </itemizedlist>
        </section>
        <section>
            <title>Example</title>
            <para>The <ulink url="../../../../examples/jms/dead-letter/readme.html"><literal>dead-letter</literal> example</ulink> shows
            how dead letter is configured and used with JMS.</para>
        </section>
    </section>
   
</chapter>
