<chapter id="UG2_installation">
  <title>JBoss Messaging Non-Clustered Installation</title>

   <para>
      This section describes the procedure to perfom a non-clustered installation. At the
      end of this procedure, you will create a JBoss Messaging configuration that will
      start a non-clustered messaging server. To find out how you can install JBoss Messaging
      in a clustered configuration, please proceed to <xref linkend="CLUST_installation"/>.
   </para>

   <para>
      By default, a JBoss AS 4.0.x and 4.2.0 instance ships with JBossMQ as default JMS provider.
      In order to use the JBoss AS instance with JBoss Messaging, you need to perform the
      installation procedure described below.
   </para>

   <para>
      <warning>
         A JBossMQ and a JBoss Messaging instance cannot coexist, at least not unless special
         precautions are taken. Do not simply attempt to copy the Messaging release artifact
         <filename>jboss-messaging-scoped.sar</filename> over to the JBoss instance
         <filename>deploy</filename> directory. Follow one of the alternate installation procedures
         outlined below instead.
      </warning>
   </para>


  <section id="install4">
     <title>Installing JBoss Messaging with JBoss AS 4.0.x and 4.2.1</title>

      <note>
          You need Apache ant 1.7.0 or newer pre-installed on your system and available in
          you path in order to be able to perform the installation process described below.
      </note>

    <section id="install4.automated">
     <title>Installation procedure</title>

      <para>
         Set up the <literal>JBOSS_HOME</literal> environment variable to point to
         the JBoss 4.x installation you want to use JBoss Messaging with. Run the installation
         script, available in the  <filename>util</filename> directory of the release bundle.
      </para>

       <programlisting>
cd util
ant -f release-admin.xml
       </programlisting>

        <para>
            The installation script will create a <filename>$JBOSS_HOME/server/messaging</filename>
            configuration.
        </para>

       <note>
          If you want to create a JBoss Messaging configuration with a different name, modify
          the <literal>messaging.config.name</literal> system property declared at the beginning of
           the installation script accordingly.
       </note>
    </section>

  </section>

  <section id="startingtheservice">
     <title>Starting the Server</title>


     <para>
        To run the server, execute the <filename>run.bat</filename> or <filename>run.sh</filename>
        script as appropriate for your operating system, in the <filename>$JBOSS_HOME/bin</filename>
        directory.
     </para>

   <programlisting>
cd $JBOSS_HOME/bin
./run.sh -c messaging
   </programlisting>

     <para>
        A successful JBoss Messaging deployment generates logging output similar to:
     </para>

   <programlisting>
....
01:44:48,317 WARN  [JDBCPersistenceManager]

JBoss Messaging Warning: DataSource connection transaction isolation should be
       READ_COMMITTED, but it is currently NONE.
       Using an isolation level less strict than READ_COMMITTED may lead to data
       consistency problems.
       Using an isolation level more strict than READ_COMMITTED may lead to deadlock.

01:44:50,450 INFO  [ServerPeer] JBoss Messaging 1.2.0.GA server [0] started
01:44:51,311 INFO  [ConnectionFactory] Connector bisocket://192.168.1.104:4457 has
leasing enabled, lease period 10000 milliseconds
01:44:51,311 INFO  [ConnectionFactory] [/ConnectionFactory, /XAConnectionFactory,
java:/ConnectionFactory, java:/XAConnectionFactory] started
01:44:51,441 INFO  [ConnectionFactory] Connector bisocket://192.168.1.104:4457 has
leasing enabled, lease period 10000 milliseconds
01:44:51,441 INFO  [ConnectionFactory] [/NonClusteredConnectionFactory,
/NonClusteredXAConnectionFactory, java:/NonClusteredConnectionFactory,
java:/NonClusteredXAConnectionFactory] started
01:44:51,681 INFO  [QueueService] Queue[/queue/DLQ] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,681 INFO  [QueueService] Queue[/queue/ExpiryQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,732 INFO  [TopicService] Topic[/topic/testTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,732 INFO  [TopicService] Topic[/topic/securedTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,732 INFO  [TopicService] Topic[/topic/testDurableTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,752 INFO  [QueueService] Queue[/queue/testQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,752 INFO  [QueueService] Queue[/queue/A] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,762 INFO  [QueueService] Queue[/queue/B] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,762 INFO  [QueueService] Queue[/queue/C] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,882 INFO  [QueueService] Queue[/queue/D] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,882 INFO  [QueueService] Queue[/queue/ex] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,882 INFO  [QueueService] Queue[/queue/PrivateDLQ] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,892 INFO  [QueueService] Queue[/queue/PrivateExpiryQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,892 INFO  [QueueService] Queue[/queue/QueueWithOwnDLQAndExpiryQueue] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,892 INFO  [TopicService] Topic[/topic/TopicWithOwnDLQAndExpiryQueue] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,942 INFO  [QueueService] Queue[/queue/QueueWithOwnRedeliveryDelay] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,942 INFO  [TopicService] Topic[/topic/TopicWithOwnRedeliveryDelay] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,952 INFO  [QueueService] Queue[/queue/testDistributedQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,952 INFO  [TopicService] Topic[/topic/testDistributedTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:52,372 INFO  [ConnectionFactoryBindingService] Bound ConnectionManager
'jboss.jca:name=JmsXA,service=ConnectionFactoryBinding' to JNDI name 'java:JmsXA'
....
   </programlisting>

     <note>
        The warning message <literal>DataSource connection transaction isolation should be READ_COMMITTED,
        but it is currently NONE</literal>
        is there to remind you that by default JBossAS ships with Hypersonic, an in-memory
        Java-based database engine, which is apropriate for demo purposes, but not for heavy load
        production environments. The
        <ulink url="http://wiki.jboss.org/wiki/Wiki.jsp?page=ConfigJBossMQDB">Critique of Hypersonic</ulink>
        wiki page outlines some of the well-known issues occuring when using this database.
     </note>

     <warning>
        Before using Messaging in production, you <emphasis>must</emphasis> configure
        the Messaging instance to use an enterprise-class database backend such as MySQL or Oracle,
        otherwise you risk losing your data.
        See <xref linkend="conf.changingds"/> for details about replacing Hypersonic.
     </warning>
  </section>


  <section id="inst.validation">
     <title>Installation Validation</title>

     <para>
        The release bundle contains a series of examples that should run "out of the box" and
        could be used to validate a new installation. Such an example sends a persistent JMS message
        to a queue called <literal>queue/testQueue</literal>.
     </para>


    <para>
       To run the example and validate the installation,
       open an new command line window and set the <literal>JBOSS_HOME</literal>
       environment variable to point to the JBoss AS 4.x installation you've just installed
       Messaging on. Navigate to the folder where
       you extracted the release bundle and drill down to <filename>/examples/queue</filename>.
       Apache Ant must pe present in your path in order to be able to run the example.
    </para>

   <programlisting>

setenv JBOSS_HOME=&lt;your_JBoss_installation&gt;
cd .../examples/queue
$ant

   </programlisting>

     <para>
        A successfull execution log output looks similar to:
     </para>


        <programlisting>
$ ant
Buildfile: build.xml

identify:
[echo] ###########################################################################
[echo] #                       Running the QUEUE example                         #
[echo] ###########################################################################
[echo] The queue:      testQueue
[echo] The client jar: ../../../output/lib/jboss-messaging-client.jar

sanity-check:

init:
[mkdir] Created dir: c:\work\src\svn\messaging\docs\examples\queue\output
[mkdir] Created dir: c:\work\src\svn\messaging\docs\examples\common\output

compile:
[javac] Compiling 5 source files to c:\work\src\svn\messaging\docs\examples\common\output
[javac] Compiling 1 source file to c:\work\src\svn\messaging\docs\examples\queue\output

run:
   [java] Queue /queue/testQueue exists
   [java] The message was successfully sent to the testQueue queue
   [java] Received message: Hello!
   [java] The example connected to JBoss Messaging version 1.2.0.GA (1.2)
   [java]
   [java] #####################
   [java] ###    SUCCESS!   ###
   [java] #####################

BUILD SUCCESSFUL
Total time: 9 seconds
</programlisting>


     <para>
        It is recommended to run <literal>all</literal> validation examples available in the
        <filename>example</filename> directory (<filename>queue</filename>,
        <filename>topic</filename>, <filename>mdb</filename>, <filename>stateless</filename>, etc.).
         In <xref linkend="UG2_examples"/>, we will have a look at each of those examples.
     </para>


  </section>

</chapter>
