<?xml version="1.0" encoding="UTF-8"?>
<chapter id="configuration">
   <title>Configuration</title>
   <para>The JMS API specifies how a messaging client interacts with a
      messaging server. The exact definition and implementation of messaging
      services, such as message destinations, connection factories and security, are
      specific to JMS providers. JBoss Messaging has its own configuration files
      to configure these.
   </para>
   <para>In this chapter, we discuss how to configure JBoss Messaging, which work together to provide JMS API level
      services to client applications.
   </para>
   <para>JBoss Messaging configuration is spread among several
      configuration files.
      <itemizedlist>
         <listitem>
            <filename>jbm-configuration.xml</filename>
         </listitem>
         <listitem>
            <filename>jbm-security.xml</filename>
         </listitem>
         <listitem>
            <filename>queues.xml</filename>
         </listitem>
         <listitem>
            <filename>jbm-jndi.xml</filename>
         </listitem>
         <listitem>
            <filename>jbm-standalone-beans.xml</filename>
            or
            <filename>jbm-beans.xml</filename>
         </listitem>
      </itemizedlist>
   </para>
   <para>The next sections explain each configuration file in detail</para>

   <section id="configuration.main">
      <title>jbm-configuration.xml</title>
      <para>This configuration file is the core configuration for the JBM server. The following is an example of a
         typical configuration
      </para>
      <programlisting>
         <![CDATA[
   <deployment>
      <configuration>

         <!-- TODO!! Should specify all available properties in here -->

         <strict-tck>true</strict-tck>

         <clustered>false</clustered>

         <scheduled-executor-max-pool-size>30</scheduled-executor-max-pool-size>

         <require-destinations>true</require-destinations>

         <!-- Remoting configuration -->

         <!-- one of: TCP, INVM -->
         <!-- INVM: the server is accessible only by clients in the same VM
         (no sockets are opened) -->
         <remoting-transport>TCP</remoting-transport>

         <remoting-bind-address>5400</remoting-bind-address>

         <remoting-host>localhost</remoting-host>

         <!--  timeout in seconds -->
         <remoting-timeout>5</remoting-timeout>

         <!-- true to disable invm communication when the client and the server are in the
         same JVM.     -->
         <!-- it is not allowed to disable invm communication when the remoting-transport
         is set to INVM -->
         <remoting-disable-invm>false</remoting-disable-invm>

         <!-- Enable/Disable Nagle's Algorithm (resp. true/false) -->
         <!-- This setting is taken into account only when remoting-transport is set to
         TCP -->
         <remoting-tcp-nodelay>false</remoting-tcp-nodelay>

         <!-- Set the TCP Receive Buffer size (SO_RCVBUF). -->
         <!-- Set it to -1 if you want to use the value hinted by the Operating System -->
         <!-- This setting is taken into account only when remoting-transport is set to
         TCP -->
         <remoting-tcp-receive-buffer-size>-1</remoting-tcp-receive-buffer-size>

         <!-- Set the TCP Send Buffer size (SO_SNDBUF).-->
         <!-- Set it to -1 if you want to use the value hinted by the Operating System-->
         <!-- This setting is taken into account only when remoting-transport is set to
         TCP -->
         <remoting-tcp-send-buffer-size>-1</remoting-tcp-send-buffer-size>

         <!--  if ssl is enabled, all remoting-ssl-* properties must be set -->
         <remoting-enable-ssl>false</remoting-enable-ssl>

         <remoting-ssl-keystore-path>messaging.keystore</remoting-ssl-keystore-path>

         <remoting-ssl-keystore-password>secureexample</remoting-ssl-keystore-password>

         <remoting-ssl-truststore-path>messaging.truststore</remoting-ssl-truststore-path>

         <remoting-ssl-truststore-password>secureexample</remoting-ssl-truststore-password>

         <!-- Storage configuration -->

         <bindings-directory>${user.home}/jbm-test/data/bindings</bindings-directory>

         <create-bindings-dir>true</create-bindings-dir>

         <journal-directory>${user.home}/jbm-test/data/journal</journal-directory>

         <create-journal-dir>true</create-journal-dir>

         <journal-type>asyncio</journal-type>

         <journal-sync>true</journal-sync>

         <journal-file-size>10485760</journal-file-size>

         <journal-min-files>10</journal-min-files>

         <journal-task-period>5000</journal-task-period>

      </configuration>

   </deployment>
]]>
      </programlisting>
      <para>The available configuration attributes are:</para>
      <itemizedlist>
         <listitem>
            <para>strict-tck</para>
         </listitem>
         <listitem>
            <para>clustered</para>
         </listitem>
         <listitem>
            <para>scheduled-executor-max-pool-size</para>
         </listitem>
         <listitem>
            <para>require-destinations</para>
         </listitem>
         <listitem>
            <para>remoting-transport</para>
         </listitem>
         <listitem>
            <para>remoting-bind-address</para>
         </listitem>
         <listitem>
            <para>remoting-host</para>
         </listitem>
         <listitem>
            <para>remoting-timeout</para>
         </listitem>
         <listitem>
            <para>remoting-disable-invm</para>
         </listitem>
         <listitem>
            <para>remoting-tcp-nodelay</para>
         </listitem>
         <listitem>
            <para>remoting-tcp-receive-buffer-size</para>
         </listitem>
         <listitem>
            <para>remoting-tcp-send-buffer-size</para>
         </listitem>
         <listitem>
            <para>remoting-ssl-keystore-path>messaging.keystore</para>
         </listitem>
         <listitem>
            <para>remoting-ssl-keystore-password</para>
         </listitem>
         <listitem>
            <para>remoting-ssl-truststore-path</para>
         </listitem>
         <listitem>
            <para>remoting-ssl-truststore-password</para>
         </listitem>
         <listitem>
            <para>bindings-directory</para>
         </listitem>
         <listitem>
            <para>create-bindings-dir</para>
         </listitem>
         <listitem>
            <para>journal-type</para>
         </listitem>
         <listitem>
            <para>journal-sync</para>
         </listitem>
         <listitem>
            <para>journal-file-size</para>
         </listitem>
         <listitem>
            <para>journal-min-files</para>
         </listitem>
         <listitem>
            <para>journal-task-period</para>
         </listitem>
      </itemizedlist>
   </section>
   <section id="configuration.security">
      <title>jbm-security.xml</title>
      <para>This configuration file is used to configure users and roles when JBM is running in standalone mode using
         the JBM Security Manager. The Security manager used is a pluggable component whose implementation can be
         changed by
         configuring the appropriate beans configuration file. Refer to the beans configuration section on how to do
         this.
         A typical jbm-security.xml config looks like:
      </para>
      <programlisting>
         <![CDATA[
   <deployment>
      <user name="guest" password="guest">
         <role name="guest"/>
      </user>
   </deployment>
       ]]>
      </programlisting>
      <para>The available configuration attributes are:</para>
      <itemizedlist>
         <listitem>
            <para>user</para>
            <para>The user to add to the security manager. This must have the attribute 'name' and 'password' set.
            </para>
            <itemizedlist>
               <listitem>
                  <para>role</para>
                  <para>A role that the user has, a user may have multiple roles configured.</para>
               </listitem>
            </itemizedlist>
         </listitem>
      </itemizedlist>
   </section>
   <section id="configuration.queues">
      <title>queues.xml</title>
      <para>This configuration file is used to configure the security and settings for destinations. These are matched
         against a destination using an hierarchical style match that supports both wild cards ('*') and word
         replacement ('^')
      </para>
      <para>For instance a destination withname 'queuejms.aqueue.myQueue' would match against 'queuejms.*',
         'queuejms.aqueue.^', 'queuejms.^.myQueue' and obviously 'queuejms.aqueue.myQueue'. If a destination has
         multiple
         matches then the most precise match is used
      </para>
      <programlisting>
         <![CDATA[
   <deployment>

      <security match="topicjms.testTopic">
         <permission type="create" roles="durpublisher"/>
         <permission type="read" roles="guest,publisher,durpublisher"/>
         <permission type="write" roles="guest,publisher,durpublisher"/>
      </security>

      <security match="topicjms.securedTopic">
         <permission type="write" roles="publisher"/>
         <permission type="read" roles="publisher"/>
      </security>

      <security match="topicjms.testDurableTopic">
         <permission type="create" roles="durpublisher"/>
         <permission type="read" roles="guest,publisher,durpublisher"/>
         <permission type="write" roles="guest,publisher,durpublisher"/>
      </security>

      <security match="queuejms.testQueue">
         <permission type="read" roles="guest,publisher"/>
         <permission type="write" roles="guest,publisher"/>
      </security>

      <security match="queuejms.NoSuchQueue">
         <permission type="read" roles="guest,publisher"/>
         <permission type="write" roles="guest,publisher"/>
      </security>

      <security match="topicjms.NoSuchTopic">
         <permission type="read" roles="guest,publisher"/>
         <permission type="write" roles="guest,publisher"/>
      </security>

      <security match="queuetempjms.*">
         <permission type="create" roles="guest,def"/>
         <permission type="read" roles="guest,def"/>
         <permission type="write" roles="guest,def"/>
      </security>

      <security match="topictempjms.*">
         <permission type="create" roles="guest,def"/>
         <permission type="read" roles="guest,def"/>
         <permission type="write" roles="guest,def"/>
      </security>

      <!--this will catch any word i.e. queuejms.anything-->
      <!--<security match="queuejms.^">
         <permission type="read" roles="guest,publisher"/>
         <permission type="write" roles="guest,publisher"/>
      </security>-->

      <!--this will catch any word i.e. queuejms.anything-->
      <!--<security match="topicjms.^">
         <permission type="read" roles="guest,publisher"/>
         <permission type="write" roles="guest,publisher"/>
      </security>-->

      <!--default security to catch all-->
      <security match="*">
         <permission type="create" roles="guest,def"/>
         <permission type="read" roles="guest,def"/>
         <permission type="write" roles="guest,def"/>
      </security>

      <queue-settings match="queuejms.QueueWithOwnDLQAndExpiryQueue">
         <dlq>PrivateDLQ</dlq>
         <expiry-queue>queuejms.PrivateExpiryQueue</expiry-queue>
      </queue-settings>

      <queue-settings match="topicjms.TopicWithOwnDLQAndExpiryQueue">
         <dlq>PrivateDLQ</dlq>
         <expiry-queue>queuejms.PrivateExpiryQueue</expiry-queue>
      </queue-settings>

      <queue-settings match="queuejms.QueueWithOwnRedeliveryDelay">
         <redelivery-delay>5000</redelivery-delay>
      </queue-settings>

      <queue-settings match="topicjms.TopicWithOwnRedeliveryDelay">
         <redelivery-delay>5000</redelivery-delay>
      </queue-settings>

      <queue-settings match="queuejms.testDistributedQueue">
         <clustered>true</clustered>
      </queue-settings>

      <queue-settings match="topicjms.testDistributedTopic">
         <clustered>true</clustered>
      </queue-settings>

      <queue-settings match="queuejms.testPerfQueue">
         <clustered>false</clustered>
      </queue-settings>

      <!--default for catch all-->
      <queue-settings match="*">
         <clustered>false</clustered>
         <dlq>DLQ</dlq>
         <expiry-queue>queuejms.ExpiryQueue</expiry-queue>
         <redelivery-delay>0</redelivery-delay>
         <max-size>-1</max-size>
         <distribution-policy-class>
            org.jboss.messaging.core.server.impl.RoundRobinDistributionPolicy
         </distribution-policy-class>
         <message-counter-history-day-limit>10</message-counter-history-day-limit>
      </queue-settings>

   </deployment>
       ]]>
      </programlisting>
      <para>The available configuration attributes are:</para>
      <itemizedlist>
         <listitem>
            <para>security</para>
            <para>The securitysettings to use when clients access a destination.</para>
            <itemizedlist>
               <listitem>
                  <para>permission</para>
                  <para>This describes the permissions a user must have to perform certain tasks. The permission type
                     can be 'create','write' or 'read' and the roles are a comma seperated list of roles.
                  </para>
               </listitem>
            </itemizedlist>
         </listitem>
         <listitem>
            <para>queue-settings</para>
            <para>These are the settings applied to a queue its creation.</para>
            <itemizedlist>
               <listitem>
                  <para>clustered</para>
                  <para>Whether or not this queue is clustered</para>
               </listitem>
               <listitem>
                  <para>dlq</para>
                  <para>The name of the Dead Letter Queue to use for this queue</para>
               </listitem>
               <listitem>
                  <para>expiry-queue</para>
                  <para>The name of the Expiry Queue to use for this queue</para>
               </listitem>
               <listitem>
                  <para>redelivery-delay</para>
                  <para>How long to wait, in milliseconds, before trying to redeliver a message.</para>
               </listitem>
               <listitem>
                  <para>max-size</para>
                  <para>The maximum number of messages a queue can hold before rejecting. -1 means unlimited which is
                     the default
                  </para>
               </listitem>
               <listitem>
                  <para>distribution-policy-class</para>
                  <para>The distribution policy class to use when multiple consumers are registered with a single queue.
                     A round robin policy is used by default.
                  </para>
               </listitem>
            </itemizedlist>
         </listitem>
      </itemizedlist>
   </section>
   <section id="configuration.jms">
      <title>jbm-jndi.xml</title>
      <para>This configuration file is used to create destinations and Connection Factories and make them available in
         JNDI. Note that this is the only configuration file that exposes JMS functionality.
      </para>
      <para>
         A typical jbm-jndi.xml config looks like:
      </para>
      <programlisting>
         <![CDATA[
   <deployment>

   <connection-factory name="testConnectionFactory">
      <entry name="testConnectionFactory"/>
   </connection-factory>

   <connection-factory name="ConnectionFactory">
      <entry name="/ConnectionFactory"/>
      <entry name="/XAConnectionFactory"/>
      <entry name="java:/ConnectionFactory"/>
      <entry name="java:/XAConnectionFactory"/>
   </connection-factory>

   <connection-factory name="ClusteredConnectionFactory">
      <entry name="/ClusteredConnectionFactory"/>
      <entry name="/ClusteredXAConnectionFactory"/>
      <entry name="java:/ClusteredConnectionFactory"/>
      <entry name="java:/ClusteredXAConnectionFactory"/>
      <supports-failover>true</supports-failover>
      <supports-load-balancing>true</supports-load-balancing>
   </connection-factory>

   <connection-factory name="MyExampleConnectionFactory">
      <entry name="/MyExampleConnectionFactory"/>
      <entry name="/acme/MyExampleConnectionFactoryDupe"/>
      <entry name="java:/xyz/CF1"/>
      <entry name="java:/connectionfactories/acme/connection_factory"/>
      <!-- You can specify the default Client ID to use for connections created
      using this factory -->
      <client-id>MyClientID</client-id>
      <!-- PrefetchSize determines the maximum number of messages the client consumer
      will buffer locally -->
      <prefetch-size>150</prefetch-size>
      <!-- The batch size to use when using the DUPS_OK_ACKNOWLEDGE acknowledgement mode -->
      <dups-ok-batch-size>5000</dups-ok-batch-size>
      <!-- Does this connection factory support automatic failover? -->
      <supports-failover>false</supports-failover>
      <!-- Does this connection factory support automatic client side load balancing? -->
      <supports-load-balancing>false</supports-load-balancing>
      <!-- The class name of the factory used to create the load balancing policy to
      use on the client side -->
      <load-balancing-factory>
         org.jboss.messaging.jms.client.plugin.RoundRobinLoadBalancingFactory
      </load-balancing-factory>
      <!-- Whether we should be strict TCK compliant, i.e. how we deal with foreign messages,
      defaults to false-->
      <strict-tck>true</strict-tck>

      <!-- This is the window size in number of messages to use when using producer
      window based flow control -->
      <producer-window-size>1000</producer-window-size>

      <!-- This is the maximum producer send rate that will be applied when using
      rate based producer flow control -->
      <producer-max-rate>100</producer-max-rate>

   </connection-factory>

   <queue name="DLQ">
      <entry name="/queue/DLQ"/>
   </queue>
   <queue name="ExpiryQueue">
      <entry name="/queue/ExpiryQueue"/>
   </queue>
   <topic name="testTopic">
      <entry name="/topic/testTopic"/>
   </topic>
   <topic name="securedTopic">
      <entry name="/topic/securedTopic"/>
   </topic>
   <topic name="testDurableTopic">
      <entry name="/topic/testDurableTopic"/>
   </topic>
   <queue name="testQueue">
      <entry name="/queue/testQueue"/>
   </queue>
   <queue name="testPerfQueue">
      <entry name="/queue/testPerfQueue"/>
   </queue>
   <queue name="A">
      <entry name="/queue/A"/>
   </queue>
   <queue name="B">
      <entry name="/queue/B"/>
   </queue>
   <queue name="C">
      <entry name="/queue/C"/>
   </queue>
   <queue name="D">
      <entry name="/queue/D"/>
   </queue>
   <queue name="ex">
      <entry name="/queue/ex"/>
   </queue>
   <queue name="PrivateDLQ">
      <entry name="/queue/PrivateDLQ"/>
   </queue>
   <queue name="PrivateExpiryQueue">
      <entry name="/queue/PrivateExpiryQueue"/>
   </queue>
   <queue name="QueueWithOwnDLQAndExpiryQueue">
      <entry name="/queue/QueueWithOwnDLQAndExpiryQueue"/>
   </queue>
   <topic name="TopicWithOwnDLQAndExpiryQueue">
      <entry name="/topic/QueueWithOwnDLQAndExpiryQueue"/>
   </topic>
   <queue name="QueueWithOwnRedeliveryDelay">
      <entry name="/queue/QueueWithOwnRedeliveryDelay"/>
   </queue>
   <topic name="TopicWithOwnRedeliveryDelay">
      <entry name="/queue/TopicWithOwnRedeliveryDelay"/>
   </topic>
   <queue name="testDistributedQueue">
      <entry name="/topic/testDistributedQueue"/>
   </queue>
   <topic name="testDistributedTopic">
      <entry name="/topic/testDistributedTopic"/>
   </topic>

</deployment>
       ]]>
      </programlisting>
      <para>The available configuration attributes are:</para>
      <itemizedlist>
         <listitem>
            <para>connection-factory</para>
            <para>The connection factory to create with a unique name</para>
            <itemizedlist>
               <listitem>
                  <para>entry</para>
                  <para>The name to store the Connection Factory object in JNDI with.
                     Multiple JNDI entries can be added.</para>
               </listitem>
               <listitem>
                  <para>client-id</para>
                  <para>The client id for connections created using this Connection Factory</para>
               </listitem>
               <listitem>
                  <para>prefetch-size</para>
                  <para>The maximum number of messages a consumer can buffer locally</para>
               </listitem>
               <listitem>
                  <para>dups-ok-batch-size</para>
                  <para>The number of acks to batch up when DUPS_OK_ACKNOWLEDGE acknowledgement mode is used</para>
               </listitem>
               <listitem>
                  <para>supports-failover</para>
                  <para>Does the Connection Factory support failover, currently disabled.</para>
               </listitem>
               <listitem>
                  <para>supports-load-balancing</para>
                  <para>Does the Connection Factory support load balancing, currently disabled</para>
               </listitem>
               <listitem>
                  <para>load-balancing-factory</para>
                  <para>The class to use for creating the load balancing class, currently not used.</para>
               </listitem>
               <listitem>
                  <para>strict-tck</para>
                  <para>Whether strict tck shoul dbe adhered to</para>
               </listitem>
               <listitem>
                  <para>producer-window-size</para>
                  <para>The window size when producer window based flow control is enabled.</para>
               </listitem>
               <listitem>
                  <para>producer-max-rate</para>
                  <para>The max rate when producer rate based flow control is enabled.</para>
               </listitem>
            </itemizedlist>
         </listitem>
         <listitem>
            <para>queue</para>
            <para>The queue to create with a unique name.</para>
            <itemizedlist>
               <listitem>
                  <para>entry</para>
                  <para>The name to store the Connection Factory object in JNDI with.
                     Multiple JNDI entries can be added.</para>
               </listitem>
            </itemizedlist>
         </listitem>
         <listitem>
            <para>topic</para>
            <para>The queue to create with a unique name.</para>
            <itemizedlist>
               <listitem>
                  <para>entry</para>
                  <para>The name to store the Connection Factory object in JNDI with.
                     Multiple JNDI entries can be added.</para>
               </listitem>
            </itemizedlist>
         </listitem>
      </itemizedlist>
   </section>
</chapter>