<?xml version="1.0" encoding="UTF-8"?>
<chapter id="installation">
  <title>JBoss Messaging Installation</title>

  <para>This section describes procedures on how to install JBoss Messaging
  into JBoss AS. At the end of this procedure, you will create a JBoss
  Messaging configuration that will start a clustered or non-clustered
  messaging server.</para>

  <para>By default, a JBoss AS 4.0.x and 4.2.0 instance ships with JBossMQ as
  default JMS provider. In order to use the JBoss AS instance with JBoss
  Messaging, you need to perform the installation procedure described
  below.</para>

  <para><warning>
       A JBossMQ and a JBoss Messaging instance cannot coexist, at least not unless special precautions are taken. Do not simply attempt to copy the Messaging release artifact 

      <filename>jboss-messaging-scoped.sar</filename>

       over to the JBoss instance 

      <filename>deploy</filename>

       directory. Follow one of the alternate installation procedures outlined below instead. 
    </warning></para>

  <section id="install4">
    <title>Installing JBoss Messaging on JBoss AS 4.2.0.GA</title>

    <section id="install4.automated">
      <title>Automated Non Clustered Installation</title>

      <para>Set up the <literal>JBOSS_HOME</literal> environment variable to
      point to the JBoss 4.x installation you want to use JBoss Messaging
      with. Run the installation script, available in the
      <filename>util</filename> directory of the release bundle.</para>

      <programlisting>
 cd util
 ant -f release-admin.xml
        </programlisting>

      <para>The installation script will create a
      <filename>$JBOSS_HOME/server/messaging</filename> configuration.</para>

      <para>There are few extra steps at <xref
      linkend="install.extra-steps" /></para>

      <note>
        <para>If you want to create a JBoss Messaging configuration with a
        different name, modify the <literal>messaging.config.name</literal>
        system property declared at the beginning of the installation script
        accordingly.</para>

        <para>If you want to use all as the source configuration (for
        clustered configs), modify the
        <literal>messaging.config.source</literal> variable at the beginning
        of the script also.</para>

        <para>Or if you prefer you could use
        <literal>-Dmessaging.config.name=YourConfig
        -Dmessaging.config.source=all</literal></para>
      </note>
    </section>

    <section id="install.manual">
      <title>Manual Non Clustered Installation</title>

      <para>For this procedure we suppose you have a standard configuration
      such as default or all. Consider
      JBOSS_CONFIG=$JBOSS_HOME/server/&lt;YourConfiguration&gt;:</para>

      <itemizedlist>
        <listitem>
          <para>Move JBOSS_CONFIG/deploy/jms/jms-ds.xml and
          JBOSS_CONFIG/deploy/jms/jms-ra.rar to JBOSS_CONFIG/deploy</para>
        </listitem>

        <listitem>
          <para>Remove the old JBoss MQ by removing
          JBOSS_CONFIG/deploy/jms.</para>

          <para>Case you are working with a configuration similar to all, make
          sure you don't have any JBossMQ files under /deploy-hasingleton. For
          that just remove /deploy-hasingleton/jms</para>
        </listitem>

        <listitem>
          <para>Add a security policy called "messaging" on
          JBOSS_CONFIG/config/login-config.xml. You could use this as an
          example, or create one according to JBoss Security
          Documentation:</para>

          <programlisting>
&lt;application-policy name = "messaging"&gt;
&lt;authentication&gt;
&lt;login-module code = "org.jboss.security.auth.spi.UsersRolesLoginModule" flag = "required" &gt;
   &lt;module-option name = "unauthenticatedIdentity"&gt;guest&lt;/module-option&gt;
   &lt;module-option name = "usersProperties"&gt;props/messaging-users.properties&lt;/module-option&gt;
   &lt;module-option name = "rolesProperties"&gt;props/messaging-roles.properties&lt;/module-option&gt;
&lt;/login-module&gt;
&lt;/authentication&gt;
&lt;/application-policy&gt;
          </programlisting>

          <para>Case you are using this provided policy you should also create
          messaging-users.properties and messaging-roles.properties to
          JBOSS_CONFIG/config/props/</para>

          <programlisting>
# messaging-roles.properties
# Add roles as you like
# user=role1,role2,...
#
guest=guest
          </programlisting>

          <programlisting>
# messaging-users.properties

# Add users as you like
# user=password
#
guest=guest
          </programlisting>
        </listitem>

        <listitem>
          <para>Unzip jboss-messaging.sar from your download package into
          JBOSS_CONFIG/deploy/jboss-messaging.sar</para>
        </listitem>

        <listitem>
          <para>For use in production it is highly recommended to use a
          different database other than HSQLDB.</para>

          <itemizedlist>
            <listitem>
              <para>Replace
              JBOSS_CONFIG/deploy/jboss-messaging.sar/hsqldb-persistence-service.xml
              by the persistence-service of from
              &lt;downloadPackage&gt;/examples/config.</para>
            </listitem>

            <listitem>
              <para>Configure a JCA datasource using an example from
              $JBOSS_HOME/docs/examples/jca</para>
            </listitem>

            <listitem>
              <para>Remove hsqldb-ds.xml from JBOSS_CONFIG/deploy</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para>There are few extra steps at <xref
      linkend="install.extra-steps" /></para>
    </section>

    <section id="install.clustered">
      <title>Clustered Installation</title>

      <itemizedlist>
        <listitem>
          <para>Install JBoss Messaging as described in <xref
          linkend="install.manual" /> or <xref linkend="install4.automated" />
          using the "all" (clustered) configuration as your source</para>
        </listitem>

        <listitem>
          <para>Ensure the server id in messaging-service.xml is unique for
          each node on the cluster</para>
        </listitem>

        <listitem>
          <para>replace hsqldb-persistence-service.xml with
          YourDatabase-clustered-persistence-service.xml from
          downloadPackage/examples/config</para>
        </listitem>

        <listitem>
          <para>Deploy a JCA datasource as in
          $JBOSS_SERVER/docs/examples/jca</para>

          <para>Make sure is bound to /DefaultDS and remove
          hsqldb-ds.xml.</para>

          <para>It's required to use a shared database in clustered
          environment. HSQLDB won't work for a clustered config.</para>
        </listitem>

        <listitem>
          <para>Install your database driver jar into
          $JBOSS_SERVER/&lt;YourServer&gt;/lib</para>
        </listitem>

        <listitem>
          <para>If you want to run multiple instances bound to the same IP you
          could use the Binding Manager</para>

          <itemizedlist>
            <listitem>
              <para>Uncomment binding manager service from
              $JBOSS_HOME/yourServer/conf/jboss-service.xml</para>
            </listitem>

            <listitem>
              <para>Specify the desired port rage (e.g. ports-01, ports-02...
              etc)</para>
            </listitem>

            <listitem>
              <para>Look at
              $JBOSS_HOME/docs/examples/binding-manager/sample-bindings.xml.
              On each port range, JBoss Remoting configuration should look
              like:</para>

              <programlisting>&lt;!-- ********************* jboss messaging ********************** --&gt;

&lt;service-config name="jboss.messaging:service=Connector,transport=bisocket"
                delegateClass="org.jboss.services.binding.AttributeMappingDelegate"&gt;
&lt;delegate-config&gt;
&lt;attribute name="Configuration"&gt;&lt;![CDATA[
&lt;config&gt;
&lt;invoker transport="bisocket"&gt;
   &lt;attribute name="marshaller" isParam="true"&gt;
                 org.jboss.jms.wireformat.JMSWireFormat&lt;/attribute&gt;
   &lt;attribute name="unmarshaller" isParam="true"&gt;
                 org.jboss.jms.wireformat.JMSWireFormat&lt;/attribute&gt;
   &lt;attribute name="serializationtype" isParam="true"&gt;jms&lt;/attribute&gt;
   &lt;attribute name="dataType" isParam="true"&gt;jms&lt;/attribute&gt;
   &lt;attribute name="socket.check_connection" isParam="true"&gt;false&lt;/attribute&gt;
   &lt;attribute name="timeout" isParam="true"&gt;0&lt;/attribute&gt;
   &lt;attribute name="serverBindAddress"&gt;${jboss.bind.address}&lt;/attribute&gt;
   &lt;attribute name="serverBindPort"&gt;4457&lt;/attribute&gt;
   &lt;attribute name="leasePeriod"&gt;10000&lt;/attribute&gt;
   &lt;attribute name="callbackStore"&gt;org.jboss.remoting.callback.CallbackStore&lt;/attribute&gt;
   &lt;attribute name="clientSocketClass" isParam="true"&gt;
                 org.jboss.jms.client.remoting.ClientSocketWrapper&lt;/attribute&gt;
   &lt;attribute name="serverSocketClass"&gt;
                 org.jboss.jms.server.remoting.ServerSocketWrapper&lt;/attribute&gt;
   &lt;attribute name="callbackErrorsAllowed"&gt;1&lt;/attribute&gt;
   &lt;attribute name="numberOfRetries" isParam="true"&gt;1&lt;/attribute&gt;
   &lt;attribute name="NumberOfCallRetries" isParam="true"&gt;2&lt;/attribute&gt;
   &lt;attribute name="clientMaxPoolSize" isParam="true"&gt;50&lt;/attribute&gt;
&lt;/invoker&gt;
&lt;handlers&gt;
   &lt;handler subsystem="JMS"&gt;org.jboss.jms.server.remoting.JMSServerInvocationHandler&lt;/handler&gt;
&lt;/handlers&gt;
&lt;/config&gt;
   ]]&gt;&lt;/attribute&gt;
   &lt;/delegate-config&gt;
   &lt;binding port="4457"/&gt;
&lt;/service-config&gt;</programlisting>

              <para>For ports-default you could use port 4457, ports-01 4557,
              ports-02 4657 and ports-03 4757.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>

      <para>There are few extra steps at <xref
      linkend="install.extra-steps" /></para>
    </section>

    <section id="install.extra-steps">
      <title>Extra steps after your instalation is complete</title>

      <para>You should also make these changes on any configuration you
      choose, to prevent references to the old JBossMQ:</para>

      <itemizedlist>
        <listitem>
          <para>Edit $JBOSS_SERVER/server/YourConfig/jms-ds.xml and replace
          jboss.mq by jboss.messaging on every occurrence</para>
        </listitem>

        <listitem>
          <para>Edit $JBOSS_SERVER/server/YourConfig/config/standardjboss.xml
          and set CreateJBossMQDestination to false on every occurrence</para>

          <para>Make sure it looks like this:</para>

          <para>&lt;CreateJBossMQDestination&gt;false&lt;/CreateJBossMQDestination&gt;</para>

          <para>Those Proxies will try to create a Destination on JBossMQ if
          they can't find it on JNDI, what would cause some errors related to
          JBoss MQ.</para>
        </listitem>

        <listitem>
          <para>Edit $JBOSS_SERVER/server/YourConfig/config/jboss-service.xml
          and remove the reference to JBoss MQ on JSR-77 Management
          Bean</para>

          <programlisting>
 &lt;!-- ==================================================================== --&gt;
 &lt;!-- JSR-77 Single JBoss Server Management Domain                         --&gt;
 &lt;!-- ==================================================================== --&gt;
 &lt;mbean code="org.jboss.management.j2ee.LocalJBossServerDomain"

  ... Remove this line ...
 &lt;attribute name="JMSService"&gt;jboss.mq:service=DestinationManager&lt;/attribute&gt;
             </programlisting>
        </listitem>

        <listitem>
          <para>Change $JBOSS_SERVICE/server/YourConfig/conf/login-config.xml
          and remove jboss-mq security policies</para>

          <programlisting>
### Remove these lines:

&lt;!-- Security domain for JBossMQ --&gt;
&lt;application-policy name = "jbossmq"&gt;
 &lt;authentication&gt;
    &lt;login-module code = "org.jboss.security.auth.spi.DatabaseServerLoginModule"
       flag = "required"&gt;
       &lt;module-option name = "unauthenticatedIdentity"&gt;guest&lt;/module-option&gt;
       &lt;module-option name = "dsJndiName"&gt;java:/DefaultDS&lt;/module-option&gt;
       &lt;module-option name = "principalsQuery"&gt;
             SELECT PASSWD FROM JMS_USERS WHERE USERID=?&lt;/module-option&gt;
       &lt;module-option name = "rolesQuery"&gt;
             SELECT ROLEID, 'Roles' FROM JMS_ROLES WHERE USERID=?&lt;/module-option&gt;
    &lt;/login-module&gt;
 &lt;/authentication&gt;
&lt;/application-policy&gt;

&lt;!-- Security domain for JBossMQ when using file-state-service.xml
&lt;application-policy name = "jbossmq"&gt;
 &lt;authentication&gt;
    &lt;login-module code = "org.jboss.mq.sm.file.DynamicLoginModule"
       flag = "required"&gt;
       &lt;module-option name = "unauthenticatedIdentity"&gt;guest&lt;/module-option&gt;
       &lt;module-option name = "sm.objectname"&gt;jboss.mq:service=StateManager&lt;/module-option&gt;
    &lt;/login-module&gt;
 &lt;/authentication&gt;
&lt;/application-policy&gt;
--&gt;
             
            </programlisting>
        </listitem>
      </itemizedlist>
    </section>
  </section>

  <section id="install.old.installation">
    <title>JBoss Messaging on JBoss 4.0.4.GA and JBoss 4.0.5.GA</title>

    <warning>
       You should avoid using JBossMessaging on any version prior to JBoss 4.2.0.GA, such as 4.0.5.GA and 4.0.4.GA. JBoss Messaging uses newer versions of JBoss AOP, JBoss Remoting and JGroups compared to JBoss 4.0.X. If you really need to install JBoss Messaging on those versions you will have to update those jars as described on this section but this might cause problems with other components such as JBoss Web Services and EJB3. 
    </warning>

    <itemizedlist>
      <listitem>
        <para>Install JBoss Messaging using the most convenient way described
        on the <link linkend="installation">previous section</link> using the
        default configuration as your base (even for a clustered JBoss
        Messaging)</para>
      </listitem>

      <listitem>
        <para>Replace the jars on this following list. You could download
        these jars from www.jboss.org or use the repository links provided
        bellow:</para>

        <itemizedlist>
          <listitem>
            <para>$JBOSS_HOME/server/&lt;SERVER_NAME&gt;/deploy/jboss-aop.deployer/jboss-aop.jar</para>

            <para>JBoss AOP 1.5.5.GA+</para>

            <para><ulink
            url="http://repository.jboss.com/jboss/aop/1.5.5.GA/lib/">http://repository.jboss.com/jboss/aop/1.5.5.GA/lib/</ulink></para>

            <para>(For AOP, sometimes you have to use a specific JAR according
            to your JVM of choice. Use the most convenient for you)</para>
          </listitem>

          <listitem>
            <para>$JBOSS_HOME/server/&lt;SERVER_NAME&gt;/lib/javassist.jar</para>

            <para>Javassist 3.5.0.GA-brew+</para>

            <para><ulink
            url="http://repository.jboss.com/javassist/3.5.0.GA-brew/lib/">http://repository.jboss.com/javassist/3.5.0.GA-brew/lib/</ulink></para>
          </listitem>

          <listitem>
            <para>$JBOSS_HOME/server/&lt;SERVER_NAME&gt;/lib/jboss-remoting.jar</para>

            <para>JBoss Remoting 2.2.0.SP4+</para>

            <para><ulink
            url="http://repository.jboss.com/jboss/remoting/2.2.0.SP4/lib/">http://repository.jboss.com/jboss/remoting/2.2.0.SP4/lib/</ulink></para>
          </listitem>

          <listitem>
            <para>$JBOSS_HOME/server/&lt;SERVER_NAME&gt;/lib/jgroups.jar (if
            using a clustered configuration)</para>

            <para>JGroups 2.4.1.SP3-brew+</para>

            <para><ulink
            url="http://repository.jboss.com/jgroups/2.4.1.SP3-brew/lib/">http://repository.jboss.com/jgroups/2.4.1.SP3-brew/lib/</ulink></para>
          </listitem>
        </itemizedlist>
      </listitem>

      <listitem>
        <para>Make sure you use jboss-messaging-fat-client.jar on any client
        VM. This file should have precedence on jboss-all-client.jar on the
        ClassPath</para>
      </listitem>
    </itemizedlist>
  </section>

  <section id="startingtheservice">
    <title>Starting the Server</title>

    <para>To run the server, execute the <filename>run.bat</filename> or
    <filename>run.sh</filename> script as appropriate for your operating
    system, in the <filename>$JBOSS_HOME/bin</filename> directory.</para>

    <programlisting>
cd $JBOSS_HOME/bin
./run.sh -c messaging
   </programlisting>

    <para>A successful JBoss Messaging deployment generates logging output
    similar to:</para>

    <programlisting>
....
01:44:48,317 WARN  [JDBCPersistenceManager]

JBoss Messaging Warning: DataSource connection transaction isolation should be
       READ_COMMITTED, but it is currently NONE.
       Using an isolation level less strict than READ_COMMITTED may lead to data
       consistency problems.
       Using an isolation level more strict than READ_COMMITTED may lead to deadlock.

01:44:50,450 INFO  [ServerPeer] JBoss Messaging 1.2.0.GA server [0] started
01:44:51,311 INFO  [ConnectionFactory] Connector bisocket://192.168.1.104:4457 has
leasing enabled, lease period 10000 milliseconds
01:44:51,311 INFO  [ConnectionFactory] [/ConnectionFactory, /XAConnectionFactory,
java:/ConnectionFactory, java:/XAConnectionFactory] started
01:44:51,441 INFO  [ConnectionFactory] Connector bisocket://192.168.1.104:4457 has
leasing enabled, lease period 10000 milliseconds
01:44:51,441 INFO  [ConnectionFactory] [/NonClusteredConnectionFactory,
/NonClusteredXAConnectionFactory, java:/NonClusteredConnectionFactory,
java:/NonClusteredXAConnectionFactory] started
01:44:51,681 INFO  [QueueService] Queue[/queue/DLQ] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,681 INFO  [QueueService] Queue[/queue/ExpiryQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,732 INFO  [TopicService] Topic[/topic/testTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,732 INFO  [TopicService] Topic[/topic/securedTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,732 INFO  [TopicService] Topic[/topic/testDurableTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,752 INFO  [QueueService] Queue[/queue/testQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,752 INFO  [QueueService] Queue[/queue/A] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,762 INFO  [QueueService] Queue[/queue/B] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,762 INFO  [QueueService] Queue[/queue/C] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,882 INFO  [QueueService] Queue[/queue/D] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,882 INFO  [QueueService] Queue[/queue/ex] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,882 INFO  [QueueService] Queue[/queue/PrivateDLQ] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,892 INFO  [QueueService] Queue[/queue/PrivateExpiryQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,892 INFO  [QueueService] Queue[/queue/QueueWithOwnDLQAndExpiryQueue] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,892 INFO  [TopicService] Topic[/topic/TopicWithOwnDLQAndExpiryQueue] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,942 INFO  [QueueService] Queue[/queue/QueueWithOwnRedeliveryDelay] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,942 INFO  [TopicService] Topic[/topic/TopicWithOwnRedeliveryDelay] started,
fullSize=200000, pageSize=2000, downCacheSize=2000
01:44:51,952 INFO  [QueueService] Queue[/queue/testDistributedQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:51,952 INFO  [TopicService] Topic[/topic/testDistributedTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
01:44:52,372 INFO  [ConnectionFactoryBindingService] Bound ConnectionManager
'jboss.jca:name=JmsXA,service=ConnectionFactoryBinding' to JNDI name 'java:JmsXA'
....
   </programlisting>

    <note>
       The warning message 

      <literal>DataSource connection transaction isolation should be
      READ_COMMITTED, but it is currently NONE</literal>

       is there to remind you that by default JBossAS ships with Hypersonic, an in-memory Java-based database engine, which is apropriate for demo purposes, but not for heavy load production environments. The 

      <ulink
      url="http://wiki.jboss.org/wiki/Wiki.jsp?page=ConfigJBossMQDB">Critique
      of Hypersonic</ulink>

       wiki page outlines some of the well-known issues occuring when using this database. 
    </note>

    <warning>
       Before using Messaging in production, you 

      <emphasis>must</emphasis>

       configure the Messaging instance to use an enterprise-class database backend such as MySQL or Oracle, otherwise you risk losing your data. See 

      <xref linkend="conf.changingds" />

       for details about replacing Hypersonic. 
    </warning>
  </section>

  <section id="inst.validation">
    <title>Installation Validation</title>

    <para>The release bundle contains a series of examples that should run
    "out of the box" and could be used to validate a new installation. Such an
    example sends a persistent JMS message to a queue called
    <literal>queue/testQueue</literal>.</para>

    <para>To run the example and validate the installation, open an new
    command line window and set the <literal>JBOSS_HOME</literal> environment
    variable to point to the JBoss AS 4.x installation you've just installed
    Messaging on. Navigate to the folder where you extracted the release
    bundle and drill down to <filename>/examples/queue</filename>. Apache Ant
    must pe present in your path in order to be able to run the
    example.</para>

    <programlisting>

setenv JBOSS_HOME=&lt;your_JBoss_installation&gt;
cd .../examples/queue
$ant

   </programlisting>

    <para>A successfull execution log output looks similar to:</para>

    <programlisting>
$ ant
Buildfile: build.xml

identify:
[echo] ###########################################################################
[echo] #                       Running the QUEUE example                         #
[echo] ###########################################################################
[echo] The queue:      testQueue
[echo] The client jar: ../../../output/lib/jboss-messaging-client.jar

sanity-check:

init:
[mkdir] Created dir: c:\work\src\svn\messaging\docs\examples\queue\output
[mkdir] Created dir: c:\work\src\svn\messaging\docs\examples\common\output

compile:
[javac] Compiling 5 source files to c:\work\src\svn\messaging\docs\examples\common\output
[javac] Compiling 1 source file to c:\work\src\svn\messaging\docs\examples\queue\output

run:
   [java] Queue /queue/testQueue exists
   [java] The message was successfully sent to the testQueue queue
   [java] Received message: Hello!
   [java] The example connected to JBoss Messaging version 1.2.0.GA (1.2)
   [java]
   [java] #####################
   [java] ###    SUCCESS!   ###
   [java] #####################

BUILD SUCCESSFUL
Total time: 9 seconds
</programlisting>

    <para>It is recommended to run <literal>all</literal> validation examples
    available in the <filename>example</filename> directory
    (<filename>queue</filename>, <filename>topic</filename>,
    <filename>mdb</filename>, <filename>stateless</filename>, etc.). In <xref
    linkend="examples" />, we will have a look at each of those
    examples.</para>
  </section>
</chapter>