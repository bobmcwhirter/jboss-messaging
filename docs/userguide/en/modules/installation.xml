<?xml version="1.0" encoding="UTF-8"?>
<chapter id="installation">
   <title>JBoss Messaging Installation</title>
   <para>This section describes procedures on how to install JBoss Messaging
   into JBoss AS. At the end of this procedure, you will create a JBoss
   Messaging configuration that will start a clustered or non-clustered
   messaging server.</para>
   <para>By default, JBoss AS 4 ships with JBossMQ as default JMS provider. In
   order to use the JBoss AS instance with JBoss Messaging, you need to
   perform the installation procedure described below.</para>
   <para><note>
          A JBossMQ and a JBoss Messaging instance cannot coexist, at least not unless special precautions are taken. Do not simply attempt to copy the Messaging release artifact 
         <filename>jboss-messaging.sar</filename>
          over to the JBoss instance w 
         <filename>deploy</filename>
          directory. Follow one of the alternate installation procedures outlined below instead. 
      </note></para>
   <para><note>
          We only recommend and support installing JBoss Messaging in JBoss AS 4.2 or later. You should avoid using JBoss Messaging on any version of JBoss AS prior to JBoss 4.2.0.GA, such as 4.0.5.GA and 4.0.4.GA. 
      </note><note>
          JBoss Messaging is built against the JBoss AS 4.2 libraries which are built using Java 5. Therefore JBoss Messaging only runs with Java 5 or later. 
      </note></para>
   <section id="install">
      <title>Installing JBoss Messaging on JBoss AS 4.2</title>
      <para>In this section we present two different methods of installing
      JBoss Messaging in JBoss AS 4.2</para>
      <itemizedlist>
         <listitem>
             If you have a completely clean JBoss AS 4.2.0 installation then you can do an 
            <xref linkend="install.automated">automatic install</xref>
             . 
         </listitem>
         <listitem>
             If you have a JBoss 4.2.0 that you have changed in some way from a clean JBoss AS 4.2.0 installation then you will need to do a 
            <xref linkend="install.manual">manual install</xref>
             . 
         </listitem>
      </itemizedlist>
      <section id="install.automated">
         <title>Automated Installation</title>
         <para><note>
                This procedure should only be performed from a clean JBoss AS 4.2 installation. If you have modifed the JBoss AS 4.2 installation at all since installation then you will need to perform a manual clustered JBoss Messaging installation 
            </note></para>
         <itemizedlist>
            <listitem>
               <para>Set up the <literal>JBOSS_HOME</literal> environment
               variable to point to the JBoss 4.2 installation you want to use
               JBoss Messaging with.</para>
               <para>Run the installation script, available in the
               <filename>util</filename> directory of the release bundle as
               follows:</para>
               <para>If you want to create a simple non clustered installion
               based on the default configuration:</para>
               <programlisting>
         cd util
         ant -f release-admin.aml
         </programlisting>
               <para>If you want to create a clustered installation based on
               the all configuration or change the configuration name:</para>
               <programlisting>
 cd util
 ant -f release-admin.xml -Dmessaging.config.source=all -Dmessaging.config.name=messaging-node0
         </programlisting>
               <para>In the above you would substitute
               <literal>messaging-node0</literal> with whatever is the name
               you want to give the configuration. If you want several cluster
               nodes on the same machine, e.g. for development purposes then a
               good convention is to name them <literal>messaging-node0,
               messaging-node1</literal> to match
               <literal>messaging-node&lt;ServerPeerID&gt;</literal></para>
               <para>The messaging.config.source variable determines which
               JBoss AS configuration (e.g. default or all) to base the
               installation on</para>
               <para>The installation script will create a
               <filename>$JBOSS_HOME/server/messaging-node0</filename>
               configuration. (If you have chosen
               <literal>messaging-node0</literal>)</para>
            </listitem>
            <para>For the rest of the procedure we assume JBOSS_CONFIG refers
            to your new messaging configuration (e.g. messaging-node0 or
            messaging)</para>
            <para>You don't actually have to create an environment variable
            <literal>JBOSS_CONFIG</literal>, this is just used in the
            installation instructions to describe the steps</para>
            <listitem>
               <para>
                  <warning>For a clustered installation it is mandatory that a
                  shared database is available to all nodes in the cluster.
                  The default JBoss AS uses HSQLDB for its database which is a
                  local shared database. Therefore in order to use clustering
                  you must replace this with a different shared database. If
                  the database is not replaced then clustering will not
                  work.</warning>
               </para>
               <itemizedlist>
                  <listitem>
                     <para>Replace
                     <literal>$JBOSS_CONFIG/deploy/jboss-messaging.sar/hsqldb-persistence-service.xml</literal>
                     by the
                     <literal>databasename&gt;-persistence-service</literal>
                     from
                     <literal>&lt;downloadPackage&gt;/examples/config.</literal>.
                     For instance
                     <literal>mysql-persistence-service.xml</literal></para>
                  </listitem>
                  <listitem><para>Configure a JCA datasource using an example
                  from <literal>$JBOSS_HOME/docs/examples/jca</literal></para>
                  and copying to <literal>$JBOSS_CONFIG/deploy</literal>
                  <para>JBoss Messaging uses <literal>DefaultDS</literal> by
                  default so you should configure your datasource to bind to
                  that</para></listitem>
                  <listitem>
                     <para>Remove hsqldb-ds.xml from
                     <literal>$JBOSS_CONFIG/deploy</literal></para>
                  </listitem>
                  <listitem>
                     <para>Copy your database driver to
                     <literal>$JBOSS_CONFIG/lib</literal></para>
                     <para>Your database driver can probably be downloaded
                     from your database provider's web site</para>
                  </listitem>
               </itemizedlist>
            </listitem>
            <listitem>
               <para>Ensure the <literal>ServerPeerID</literal> MBean
               attribute value in messaging-service.xml is unique for each
               node. The <literal>ServerPeerID</literal> value must be a valid
               integer. Every node MUST have a unique id, including those just
               connected by message bridges.</para>
               <para>
                  <warning>Each node must have a unique
                  <literal>ServerPeerID</literal> for clustering to
                  work!</warning>
               </para>
            </listitem>
            <listitem>
               <para>If you want to run multiple JBoss Messaging nodes on the
               same box using the same IP address, e.g. for development
               purposes, then you can use the ServiceBindingManager to do this
               as follows:</para>
               <itemizedlist>
                  <listitem>
                     <para>Uncomment binding manager service from
                     $JBOSS_CONFIG/conf/jboss-service.xml</para>
                  </listitem>
                  <listitem>
                     <para>Specify the desired port rage (e.g. ports-01,
                     ports-02... etc)</para>
                  </listitem>
                  <listitem>
                     <para>Look at
                     $JBOSS_HOME/docs/examples/binding-manager/sample-bindings.xml.
                     On each port range, JBoss Remoting configuration should
                     look like:</para>
                     <programlisting>
      &lt;service-config name="jboss.messaging:service=Connector,transport=bisocket"
                      delegateClass="org.jboss.services.binding.AttributeMappingDelegate"&gt;
         &lt;delegate-config&gt;
            &lt;attribute name="Configuration"&gt;&lt;![CDATA[
	   &lt;config&gt;
            &lt;invoker transport="bisocket"&gt;
               &lt;attribute name="marshaller" isParam="true"&gt;
                  org.jboss.jms.wireformat.JMSWireFormat
               &lt;/attribute&gt;
               &lt;attribute name="unmarshaller" isParam="true"&gt;
                  org.jboss.jms.wireformat.JMSWireFormat
               &lt;/attribute&gt;
               &lt;attribute name="dataType" isParam="true"&gt;jms&lt;/attribute&gt;
               &lt;attribute name="socket.check_connection" isParam="true"&gt;false&lt;/attribute&gt;
               &lt;attribute name="timeout" isParam="true"&gt;0&lt;/attribute&gt;
               &lt;attribute name="serverBindAddress"&gt;${jboss.bind.address}&lt;/attribute&gt;
               &lt;attribute name="serverBindPort"&gt;4657&lt;/attribute&gt;
               &lt;attribute name="leasePeriod"&gt;10000&lt;/attribute&gt;
               &lt;attribute name="clientSocketClass" isParam="true"&gt;
                  org.jboss.jms.client.remoting.ClientSocketWrapper
               &lt;/attribute&gt;
               &lt;attribute name="serverSocketClass"&gt;
                  org.jboss.jms.server.remoting.ServerSocketWrapper
               &lt;/attribute&gt;
               &lt;attribute name="numberOfRetries" isParam="true"&gt;1&lt;/attribute&gt;
               &lt;attribute name="numberOfCallRetries" isParam="true"&gt;1&lt;/attribute&gt;
               &lt;attribute name="clientMaxPoolSize" isParam="true"&gt;50&lt;/attribute&gt;
            &lt;/invoker&gt;
            &lt;handlers&gt;
               &lt;handler subsystem="JMS"&gt;
                  org.jboss.jms.server.remoting.JMSServerInvocationHandler
               &lt;/handler&gt;
            &lt;/handlers&gt;
         &lt;/config&gt;
            ]]&gt;&lt;/attribute&gt;
         &lt;/delegate-config&gt;
         &lt;binding port="4657"/&gt;
      &lt;/service-config&gt;
              
              </programlisting>
                     <warning>You must ensure that the config (like above) is
                     identical to that in
                     <literal>remoting-bisocket-service.xml</literal> With the
                     exception of the actual serverBindPort which clearly must
                     be different for each ports range. Please note that the
                     default JBoss Messaging service binding manager bindings
                     in <literal>sample-bindings.xml</literal> shipped with
                     JBAS 4.2.0 is out of date and you will need to copy the
                     config from
                     <literal>remoting-bisocket-service.xml</literal></warning>
                     <para>You should ensure that each node is configured to
                     use a different ports range.</para>
                  </listitem>
               </itemizedlist>
            </listitem>
            <listitem>
               <para>There are few extra steps at <xref
               linkend="install.extra-steps" /></para>
            </listitem>
            <listitem>That's it</listitem>
         </itemizedlist>
      </section>
      <section id="install.manual">
         <title>Manual Installation</title>
         <para><note>
                This installation procedure should be performed if you are installing into a JBoss AS configuration that you have changed in some way from the default JBoss AS distribution. If you are just using the standard, untouched JBoss AS 4.2 distribution you can use the automated procedure above 
            </note></para>
         <para>For this procedure we assume you already have your custom
         configuration located at
         <literal>JBOSS_CONFIG=$JBOSS_HOME/server/&lt;myconfiguration&gt;</literal>,
         and that it contains a JBoss MQ installation.</para>
         <para>You don't actually have to create an environment variable
         <literal>JBOSS_CONFIG</literal>, this is just used in the
         installation instructions to describe the steps</para>
         <itemizedlist>
            <listitem>
               <para>Move
               <literal>$JBOSS_CONFIG/deploy/jms/hajndi-jms-ds.xml</literal>
               and <literal>$JBOSS_CONFIG/deploy/jms/jms-ra.rar</literal> to
               <literal>$JBOSS_CONFIG/deploy</literal></para>
            </listitem>
            <listitem>
                
               <para>Remove the old JBoss MQ by removing the directory
               <literal>$JBOSS_CONFIG/deploy/jms.</literal></para>
                . 
               <para>Remove the old JBoss MQ jar file:
               <literal>$JBOSS_CONFIG/lib/jbossmq.jar</literal></para>
                
               <para>Make sure you don't have any JBossMQ files under
               <literal>$JBOSS_CONFIG/deploy-hasingleton</literal>. For that
               just remove
               <literal>$JBOSS_CONFIG/deploy-hasingleton/jms</literal></para>
                
            </listitem>
            <listitem>
                
               <para>Add a security policy called "messaging" on
               $JBOSS_CONFIG/config/login-config.xml. You could use this as an
               example, or create one according to JBoss Security
               Documentation:</para>
                
               <programlisting>
&lt;application-policy name = "messaging"&gt;
&lt;authentication&gt;
&lt;login-module code = "org.jboss.security.auth.spi.UsersRolesLoginModule" flag = "required" &gt;
   &lt;module-option name = "unauthenticatedIdentity"&gt;guest&lt;/module-option&gt;
   &lt;module-option name = "usersProperties"&gt;props/messaging-users.properties&lt;/module-option&gt;
   &lt;module-option name = "rolesProperties"&gt;props/messaging-roles.properties&lt;/module-option&gt;
&lt;/login-module&gt;
&lt;/authentication&gt;
&lt;/application-policy&gt;
          </programlisting>
                
               <para>In case you are using the above policy you should also
               create files <literal>messaging-users.properties</literal> and
               <literal>messaging-roles.properties</literal> in the
               <literal>$JBOSS_CONFIG/config/props/</literal> directory</para>
                . 
               <para>
                  <note>You can find an example
                  <literal>messaging-users.properties</literal> and
                  <literal>messaging-roles.properties</literal> in the JBoss
                  Messaging distribution in the
                  <literal>&lt;downloadPackage&gt;src/etc/server/default/config</literal>
                  directory.</note>
               </para>
                
               <programlisting>
# messaging-roles.properties
# Add roles as you like
# user=role1,role2,...
#
guest=guest
          </programlisting>
                
               <programlisting>
# messaging-users.properties

# Add users as you like
# user=password
#
guest=guest
          </programlisting>
                
            </listitem>
            <listitem>
               <para>Unzip jboss-messaging.sar from your download package into
               the directory
               <literal>JBOSS_CONFIG/deploy/jboss-messaging.sar</literal></para>
               <para>JBoss Messaging should be deployed unzipped (exploded) so
               you have easy access to its config files which are stored
               there.</para>
            </listitem>
            <listitem>
               <para>Copy jboss-messaging.jar from your download package into
               the directory <literal>JBOSS_CONFIG/lib</literal></para>
               <para>jboss-messaging.jar needs to go in the lib directory so
               it is accessible to other services e.g. the JBoss Transactions
               Recovery Manager</para>
            </listitem>
            <listitem>
               <para><warning>
                      For a clustered installation it is mandatory that a shared database is available to all nodes in the cluster. The default JBoss AS uses HSQLDB for its database which is a local shared database. Therefore in order to use clustering you must replace this with a different shared database. If the database is not replaced then clustering will not work. 
                  </warning></para>
               <itemizedlist>
                  <listitem>
                     <para>Replace
                     <literal>$JBOSS_CONFIG/deploy/jboss-messaging.sar/hsqldb-persistence-service.xml</literal>
                     by the
                     <literal>databasename&gt;-persistence-service</literal>
                     from
                     <literal>&lt;downloadPackage&gt;/examples/config.</literal>.
                     For instance
                     <literal>mysql-persistence-service.xml</literal></para>
                  </listitem>
                  <listitem>
                      
                     <para>Configure a JCA datasource using an example from
                     <literal>$JBOSS_HOME/docs/examples/jca</literal></para>
                      and copying to 
                     <literal>$JBOSS_CONFIG/deploy</literal>
                      
                     <para>JBoss Messaging uses <literal>DefaultDS</literal>
                     by default so you should configure your datasource to
                     bind to that</para>
                      
                  </listitem>
                  <listitem>
                     <para>Remove hsqldb-ds.xml from
                     <literal>$JBOSS_CONFIG/deploy</literal></para>
                  </listitem>
                  <listitem>
                     <para>Copy your database driver to
                     <literal>$JBOSS_CONFIG/lib</literal></para>
                     <para>Your database driver can probably be downloaded
                     from your database provider's web site</para>
                  </listitem>
               </itemizedlist>
            </listitem>
            <listitem>
               <para>Ensure the <literal>ServerPeerID</literal> MBean
               attribute value in messaging-service.xml is unique for each
               node on the cluster. The <literal>ServerPeerID</literal> value
               must be a valid integer.</para>
               <para><warning>
                      Each node must have a unique 
                     <literal>ServerPeerID</literal>
                      for clustering to work! 
                  </warning></para>
            </listitem>
            <listitem>
               <para>If you want to run multiple JBoss Messaging nodes on the
               same box using the same IP address, e.g. for development
               purposes, then you can use the ServiceBindingManager to do this
               as follows:</para>
               <itemizedlist>
                  <listitem>
                     <para>Uncomment binding manager service from
                     $JBOSS_CONFIG/conf/jboss-service.xml</para>
                  </listitem>
                  <listitem>
                     <para>Specify the desired port rage (e.g. ports-01,
                     ports-02... etc)</para>
                  </listitem>
                  <listitem>
                     <para>Look at
                     $JBOSS_HOME/docs/examples/binding-manager/sample-bindings.xml.
                     On each port range, JBoss Remoting configuration should
                     look like:</para>
                     <programlisting>
      &lt;service-config name="jboss.messaging:service=Connector,transport=bisocket"
                      delegateClass="org.jboss.services.binding.AttributeMappingDelegate"&gt;
         &lt;delegate-config&gt;
            &lt;attribute name="Configuration"&gt;&lt;![CDATA[
	   &lt;config&gt;
            &lt;invoker transport="bisocket"&gt;
               &lt;attribute name="marshaller" isParam="true"&gt;
                  org.jboss.jms.wireformat.JMSWireFormat
               &lt;/attribute&gt;
               &lt;attribute name="unmarshaller" isParam="true"&gt;
                  org.jboss.jms.wireformat.JMSWireFormat
               &lt;/attribute&gt;
               &lt;attribute name="dataType" isParam="true"&gt;jms&lt;/attribute&gt;
               &lt;attribute name="socket.check_connection" isParam="true"&gt;false&lt;/attribute&gt;
               &lt;attribute name="timeout" isParam="true"&gt;0&lt;/attribute&gt;
               &lt;attribute name="serverBindAddress"&gt;${jboss.bind.address}&lt;/attribute&gt;
               &lt;attribute name="serverBindPort"&gt;4657&lt;/attribute&gt;
               &lt;attribute name="leasePeriod"&gt;10000&lt;/attribute&gt;
               &lt;attribute name="clientSocketClass" isParam="true"&gt;
                  org.jboss.jms.client.remoting.ClientSocketWrapper
               &lt;/attribute&gt;
               &lt;attribute name="serverSocketClass"&gt;
                  org.jboss.jms.server.remoting.ServerSocketWrapper
               &lt;/attribute&gt;
               &lt;attribute name="numberOfRetries" isParam="true"&gt;1&lt;/attribute&gt;
               &lt;attribute name="numberOfCallRetries" isParam="true"&gt;1&lt;/attribute&gt;
               &lt;attribute name="clientMaxPoolSize" isParam="true"&gt;50&lt;/attribute&gt;
            &lt;/invoker&gt;
            &lt;handlers&gt;
               &lt;handler subsystem="JMS"&gt;
                  org.jboss.jms.server.remoting.JMSServerInvocationHandler
               &lt;/handler&gt;
            &lt;/handlers&gt;
         &lt;/config&gt;
            ]]&gt;&lt;/attribute&gt;
         &lt;/delegate-config&gt;
         &lt;binding port="4657"/&gt;
      &lt;/service-config&gt;
              
              </programlisting>
                     <warning>
                         You must ensure that the config (like above) is identical to that in 
                        <literal>remoting-bisocket-service.xml</literal>
                         With the exception of the actual serverBindPort which clearly must be different for each ports range. Please note that the default JBoss Messaging service binding manager bindings in 
                        <literal>sample-bindings.xml</literal>
                         shipped with JBAS 4.2.0 is out of date and you will need to copy the config from 
                        <literal>remoting-bisocket-service.xml</literal>
                         
                     </warning>
                     <para>You should ensure that each node is configured to
                     use a different ports range.</para>
                  </listitem>
               </itemizedlist>
            </listitem>
            <listitem>
               <para>There are few extra steps at <xref
               linkend="install.extra-steps" /></para>
            </listitem>
            <listitem>
                That's it 
            </listitem>
         </itemizedlist>
      </section>
      <section id="install.extra-steps">
         <title>Extra steps to complete your installation</title>
         <itemizedlist>
            <listitem>
               <para>
                  <warning>SECURITY RISK! To avoid a security risk, you MUST
                  specify the value of the attribute SuckerPassword in the
                  Server Peer config (messaging-service.xml). If you do not
                  specify a value, the default value will be used. Any person
                  that knows the default value will be able to access to all
                  destinations on the server. The password chosen should only
                  be exposed to administrators</warning>
               </para>
            </listitem>
            <listitem>
               <para>
                  <note>JBoss Messaging 1.4.0 requires a patched version of
                  jboss-remoting.jar. This version is not available in the
                  JBoss AS 4.2.0 or JBoss AS 4.2.1 distributions. The patched
                  jar can be found <ulink
                  url="http://repository.jboss.com/jboss/remoting/2.2.2.SP1-brew/lib/">here</ulink>.
                  Please download it and copy it into the
                  <literal>$JBOSS_HOME/server/&lt;your server name&gt;/lib
                  directory</literal> of any server profiles that use JBoss
                  Messaging 1.4.0. If you are using JBoss Messaging from a
                  standalone client also make sure this jar is on your
                  classpath *before* jbossall-client.jar.</note>
               </para>
            </listitem>
            <para>You should also make these changes on any configuration you
            choose, to remove all references to the old JBossMQ:</para>
            <listitem>
               <para>Edit <literal>$JBOSS_CONFIG/deploy/jms-ds.xml</literal>
               and replace jboss.mq by jboss.messaging on every
               occurrence</para>
               <para>If you are in a clustered installation, then do the above
               with the file
               <literal>$JBOSS_CONFIG/deploy/hajndi-jms-ds.xml</literal></para>
            </listitem>
            <listitem>
               <para>Edit
               <literal>$JBOSS_CONFIG/conf/standardjboss.xml</literal> and set
               <literal>CreateJBossMQDestination</literal> to false on every
               occurrence</para>
               <para>Make sure it looks like this:</para>
               <para>
                  <literal>&lt;CreateJBossMQDestination&gt;false&lt;/CreateJBossMQDestination&gt;</literal>
               </para>
               <para>Those Proxies will try to create a Destination on JBossMQ
               if they can't find it on JNDI, what would cause some errors
               related to JBoss MQ.</para>
            </listitem>
            <listitem>
               <para>Edit $JBOSS_CONFIG/conf/jboss-service.xml and remove the
               reference to JBoss MQ on JSR-77 Management Bean:</para>
               <programlisting>
 &lt;!-- ==================================================================== --&gt;
 &lt;!-- JSR-77 Single JBoss Server Management Domain                         --&gt;
 &lt;!-- ==================================================================== --&gt;
 &lt;mbean code="org.jboss.management.j2ee.LocalJBossServerDomain"

  ... Remove this line ...
 &lt;attribute name="JMSService"&gt;jboss.mq:service=DestinationManager&lt;/attribute&gt;
             </programlisting>
            </listitem>
            <listitem>
               <para>Change
               <literal>$JBOSS_CONFIG/conf/login-config.xml</literal> and
               remove jboss-mq security policies</para>
               <programlisting>
### Remove these lines:

&lt;!-- Security domain for JBossMQ --&gt;
&lt;application-policy name = "jbossmq"&gt;
 &lt;authentication&gt;
    &lt;login-module code = "org.jboss.security.auth.spi.DatabaseServerLoginModule"
       flag = "required"&gt;
       &lt;module-option name = "unauthenticatedIdentity"&gt;guest&lt;/module-option&gt;
       &lt;module-option name = "dsJndiName"&gt;java:/DefaultDS&lt;/module-option&gt;
       &lt;module-option name = "principalsQuery"&gt;
             SELECT PASSWD FROM JMS_USERS WHERE USERID=?&lt;/module-option&gt;
       &lt;module-option name = "rolesQuery"&gt;
             SELECT ROLEID, 'Roles' FROM JMS_ROLES WHERE USERID=?&lt;/module-option&gt;
    &lt;/login-module&gt;
 &lt;/authentication&gt;
&lt;/application-policy&gt;

&lt;!-- Security domain for JBossMQ when using file-state-service.xml
&lt;application-policy name = "jbossmq"&gt;
 &lt;authentication&gt;
    &lt;login-module code = "org.jboss.mq.sm.file.DynamicLoginModule"
       flag = "required"&gt;
       &lt;module-option name = "unauthenticatedIdentity"&gt;guest&lt;/module-option&gt;
       &lt;module-option name = "sm.objectname"&gt;jboss.mq:service=StateManager&lt;/module-option&gt;
    &lt;/login-module&gt;
 &lt;/authentication&gt;
&lt;/application-policy&gt;
--&gt;
             
            </programlisting>
            </listitem>
         </itemizedlist>
      </section>
   </section>
   <section id="startingtheservice">
      <title>Starting the Server</title>
      <para>To run the server, execute the <filename>run.bat</filename> or
      <filename>run.sh</filename> script as appropriate for your operating
      system, in the <filename>$JBOSS_HOME/bin</filename> directory.</para>
      <programlisting>
cd $JBOSS_HOME/bin
./run.sh -c &lt;config name&gt;
   </programlisting>
      <para>Where config_name is the name of the JBoss AS configuration where
      you have installed messaging. (The default is 'messaging')</para>
      <para>A successful JBoss Messaging deployment generates logging output
      similar to for a non clustered installation (for a clustered
      installation you will also see extra cluster related output)</para>
      <programlisting>
....
13:19:14,914 WARN  [JDBCPersistenceManager] 

JBoss Messaging Warning: DataSource connection transaction isolation should be READ_COMMITTED,
but it is currently NONE.
                         Using an isolation level less strict than READ_COMMITTED may lead to
data consistency problems.
                         Using an isolation level more strict than READ_COMMITTED may lead to
deadlock.

13:19:15,166 INFO  [ServerPeer] JBoss Messaging 1.4.0.GA server [0] started
13:19:15,411 INFO  [ConnectionFactory] Connector bisocket://127.0.0.1:4457 has leasing enabled
, lease period 10000 milliseconds
13:19:15,412 INFO  [ConnectionFactory] [/ConnectionFactory, /XAConnectionFactory, java:/Connec
tionFactory, java:/XAConnectionFactory] started
13:19:15,412 WARN  [ConnectionFactoryJNDIMapper] supportsFailover attribute is true on connect
ion factory: jboss.messaging.connectionfactory:service=ClusteredConnectionFactory but
post office is non clustered. So connection factory will *not* support failover
13:19:15,413 WARN  [ConnectionFactoryJNDIMapper] supportsLoadBalancing attribute is true on co
nnection factory: jboss.messaging.connectionfactory:service=ClusteredConnectionFactory
but post office is non clustered. So connection factory will *not* support load balanc
ing
13:19:15,449 INFO  [ConnectionFactory] Connector bisocket://127.0.0.1:4457 has leasing enabled
, lease period 10000 milliseconds
13:19:15,449 INFO  [ConnectionFactory] [/ClusteredConnectionFactory, /ClusteredXAConnectionFac
tory, java:/ClusteredConnectionFactory, java:/ClusteredXAConnectionFactory] started
13:19:15,468 INFO  [QueueService] Queue[/queue/DLQ] started, fullSize=200000, pageSize=2000, d
ownCacheSize=2000
13:19:15,474 INFO  [QueueService] Queue[/queue/ExpiryQueue] started, fullSize=200000, pageSize
=2000, downCacheSize=2000
13:19:15,476 INFO  [TopicService] Topic[/topic/testTopic] started, fullSize=200000, pageSize=2
000, downCacheSize=2000
13:19:15,478 INFO  [TopicService] Topic[/topic/securedTopic] started, fullSize=200000, pageSiz
e=2000, downCacheSize=2000
13:19:15,479 INFO  [TopicService] Topic[/topic/testDurableTopic] started, fullSize=200000, pag
eSize=2000, downCacheSize=2000
13:19:15,482 INFO  [QueueService] Queue[/queue/testQueue] started, fullSize=200000, pageSize=2
000, downCacheSize=2000
13:19:15,483 INFO  [QueueService] Queue[/queue/A] started, fullSize=200000, pageSize=2000, dow
nCacheSize=2000
13:19:15,485 INFO  [QueueService] Queue[/queue/B] started, fullSize=200000, pageSize=2000, dow
nCacheSize=2000
13:19:15,487 INFO  [QueueService] Queue[/queue/C] started, fullSize=200000, pageSize=2000, dow
nCacheSize=2000
13:19:15,489 INFO  [QueueService] Queue[/queue/D] started, fullSize=200000, pageSize=2000, dow
nCacheSize=2000
13:19:15,490 INFO  [QueueService] Queue[/queue/ex] started, fullSize=200000, pageSize=2000, do
wnCacheSize=2000
13:19:15,501 INFO  [QueueService] Queue[/queue/PrivateDLQ] started, fullSize=200000, pageSize=
2000, downCacheSize=2000
13:19:15,503 INFO  [QueueService] Queue[/queue/PrivateExpiryQueue] started, fullSize=200000, p
ageSize=2000, downCacheSize=2000
13:19:15,507 INFO  [QueueService] Queue[/queue/QueueWithOwnDLQAndExpiryQueue] started, fullSiz
e=200000, pageSize=2000, downCacheSize=2000
13:19:15,508 INFO  [TopicService] Topic[/topic/TopicWithOwnDLQAndExpiryQueue] started, fullSiz
e=200000, pageSize=2000, downCacheSize=2000
13:19:15,511 INFO  [QueueService] Queue[/queue/QueueWithOwnRedeliveryDelay] started, fullSize=
200000, pageSize=2000, downCacheSize=2000
13:19:15,512 INFO  [TopicService] Topic[/topic/TopicWithOwnRedeliveryDelay] started, fullSize=
200000, pageSize=2000, downCacheSize=2000
13:19:15,514 INFO  [QueueService] Queue[/queue/testDistributedQueue] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
13:19:15,519 INFO  [TopicService] Topic[/topic/testDistributedTopic] started, fullSize=200000,
pageSize=2000, downCacheSize=2000
13:19:15,809 INFO  [ConnectionFactoryBindingService] Bound ConnectionManager 'jboss.jca:servic
e=ConnectionFactoryBinding,name=JmsXA' to JNDI name 'java:JmsXA'
13:19:15,834 INFO  [TomcatDeployer] deploy, ctxPath=/jmx-console, warUrl=.../deploy/jmx-consol
e.war/
13:19:16,322 INFO  [Http11Protocol] Starting Coyote HTTP/1.1 on http-127.0.0.1-8080
13:19:16,342 INFO  [AjpProtocol] Starting Coyote AJP/1.3 on ajp-127.0.0.1-8009
13:19:16,480 INFO  [Server] JBoss (MX MicroKernel) [4.2.0.GA (build: SVNTag=JBoss_4_2_0_GA dat
e=200705111440)] Started in 19s:359ms

   </programlisting>
      <note>
          The warning message 
         <literal>"DataSource connection transaction isolation should be
         READ_COMMITTED, but it is currently NONE"</literal>
          is there to remind you that by default JBossAS ships with Hypersonic, an in-memory Java-based database engine, which is apropriate for demo purposes, but not for heavy load production environments. The 
         <ulink
         url="http://wiki.jboss.org/wiki/Wiki.jsp?page=ConfigJBossMQDB">Critique
         of Hypersonic</ulink>
          wiki page outlines some of the well-known issues occuring when using this database. 
      </note>
      <warning>
          Before using Messaging in production, you 
         <emphasis>must</emphasis>
          configure the Messaging instance to use an enterprise-class database backend such as Oracle, Sybase, PostgreSQL, MS SQL or MySQL, otherwise you risk losing your data. See 
         <xref linkend="conf.changingds" />
          for details about replacing Hypersonic. 
      </warning>
   </section>
   <section id="inst.validation">
      <title>Installation Validation</title>
      <para>The release bundle contains a series of examples that should run
      "out of the box" and could be used to validate a new installation. Such
      an example sends a persistent JMS message to a queue called
      <literal>queue/testQueue</literal>.</para>
      <para>To run the example and validate the installation, open an new
      command line window and set the <literal>JBOSS_HOME</literal>
      environment variable to point to the JBoss AS 4.x installation you've
      just installed Messaging on. Navigate to the folder where you extracted
      the release bundle and drill down to
      <filename>/examples/queue</filename>. Apache Ant must pe present in your
      path in order to be able to run the example.</para>
      <para>Make sure you start the JBoss server before trying to run the
      tests</para>
      <programlisting>

setenv JBOSS_HOME=&lt;your_JBoss_installation&gt;
cd .../examples/queue
$ant

   </programlisting>
      <para>A successfull execution log output looks similar to:</para>
      <programlisting>
[tim@Vigor14 queue]$ ant
Buildfile: build.xml

identify:
     [echo] ###########################################################################
     [echo] #                       Running the QUEUE example                         #
     [echo] ###########################################################################
     [echo] The queue:      testQueue
     [echo] The client jar: ../../../output/lib/jboss-messaging-client.jar

sanity-check:

init:
    [mkdir] Created dir: /home/tim/dev/jboss-messaging/trunk/docs/examples/queue/output/classe
s
    [mkdir] Created dir: /home/tim/dev/jboss-messaging/trunk/docs/examples/common/output/class
es

compile:
    [javac] Compiling 5 source files to /home/tim/dev/jboss-messaging/trunk/docs/examples/comm
on/output/classes
    [javac] Compiling 1 source file to /home/tim/dev/jboss-messaging/trunk/docs/examples/queue
/output/classes

run:
     [java] Queue /queue/testQueue exists
     [java] The message was successfully sent to the testQueue queue
     [java] Received message: Hello!
     [java] The example connected to JBoss Messaging version 1.4.0.GA (1.4)

     [java] #####################
     [java] ###    SUCCESS!   ###
     [java] #####################

BUILD SUCCESSFUL
Total time: 5 seconds
[tim@Vigor14 queue]$

</programlisting>
      <para>It is recommended to run <literal>all</literal> validation
      examples available in the <filename>example</filename> directory
      (<filename>queue</filename>, <filename>topic</filename>,
      <filename>mdb</filename>, <filename>stateless</filename>, etc.). In
      <xref linkend="examples" />, we will have a look at each of those
      examples.</para>
   </section>
   <section id="inst.remoteclient">
      <title>Accessing JBoss Messaging from a remote client</title>
      <para>In order to access JBoss Messaging from a client outside the JBoss
      app server, you will need to ensure the following jar files are on the
      client classpath:</para>
      <itemizedlist>
         <listitem>
            <para><note>
                   JBoss Messaging 1.4.0 requires a patched version of jboss-remoting.jar. This version is not available in the JBoss AS 4.2.0 or JBoss AS 4.2.1 distributions. The patched jar can be found 
                  <ulink
                  url="http://repository.jboss.com/jboss/remoting/2.2.2.SP1-brew/lib/">here</ulink>
                   . Please download it and make sure this jar is on your classpath *before* jbossall-client.jar. 
               </note></para>
         </listitem>
         <listitem>
            <para>jboss-messaging-client.jar - This is available in the
            messaging distribution</para>
         </listitem>
         <listitem>
            <para>jbossall-client.jar - This is available in your
            $JBOSS_HOME/client directory</para>
         </listitem>
         <listitem>
            <para>$JBOSS_HOME/server/&lt;SERVER_NAME&gt;/deploy/jboss-aop.deployer/jboss-aop.jar</para>
            <para>JBoss AOP 1.5.5.GA+</para>
            <para><ulink
            url="http://repository.jboss.com/jboss/aop/1.5.5.GA/lib/">http://repository.jboss.com/jboss/aop/1.5.5.GA/lib/</ulink></para>
            <para>(For AOP, sometimes you have to use a specific JAR according
            to your JVM of choice. Use the most convenient for you)</para>
         </listitem>
         <listitem>
            <para>$JBOSS_HOME/server/&lt;SERVER_NAME&gt;/lib/javassist.jar</para>
            <para>Javassist 3.5.0.GA-brew+</para>
            <para><ulink
            url="http://repository.jboss.com/javassist/3.5.0.GA-brew/lib/">http://repository.jboss.com/javassist/3.5.0.GA-brew/lib/</ulink></para>
         </listitem>
         <listitem>
            <para>$JBOSS_HOME/server/&lt;SERVER_NAME&gt;/lib/trove.jar</para>
            <para>trove 1.0.2-brew</para>
            <para><ulink
            url="http://repository.jboss.com/trove/1.0.2-brew/lib/">http://repository.jboss.com/trove/1.0.2-brew/lib/</ulink></para>
         </listitem>
         <listitem>
            <para>log4j</para>
         </listitem>
      </itemizedlist>
   </section>
</chapter>