<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project [
   <!ENTITY libraries SYSTEM "../../thirdparty/libraries.ent">
   <!ENTITY modules SYSTEM "../../tools/etc/buildmagic/modules.ent">
]>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  JBoss, the OpenSource J2EE webOS                                      -->
<!--                                                                        -->
<!--  Distributable under LGPL license.                                     -->
<!--  See terms of license at http://www.gnu.org.                           -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="run" name="JBoss/Messaging Performance Framework">

   <!-- overridden to resolve thirdparty & module deps -->
   <dirname property="remote.root" file="${basedir}"/>
   <dirname property="project.root" file="${remote.root}"/>

   <import file="../../tools/etc/buildmagic/build-common.xml"/>

   <!-- ========= -->
   <!-- Libraries -->
   <!-- ========= -->
   &libraries;

   <!-- ======= -->
   <!-- Modules -->
   <!-- ======= -->
   &modules;

   <!-- ================================================================== -->
   <!-- Configuration                                                      -->
   <!-- ================================================================== -->

   <property name="build.classes" value="${module.output}/classes"/>
   <property name="source.java" value="${module.source}"/>

   <path id="perf.compilation.classpath">
      <path refid="oswego.concurrent.classpath"/>
      <path refid="junit.junit.classpath"/>
      <path refid="jboss.j2ee.classpath"/>
      <path refid="jboss.j2se.classpath"/>
      <path refid="jboss.common.classpath"/>
      <path location="${module.root}/../src/resources/jboss-remoting.jar"/>
      <path location="${module.root}/../src/resources/jboss-serialization.jar"/>
      <path location="${module.root}/resources/jcommon-1.0.0-rc1.jar"/>
      <path location="${module.root}/resources/jfreechart-1.0.0-rc1.jar"/>
      <pathelement location="../output/classes"/>
   </path>

   <path id="perf.execution.classpath">
      <path refid="perf.compilation.classpath"/>
      <path refid="apache.log4j.classpath"/>
      <path refid="javassist.classpath"/>
      <path refid="trove.trove.classpath"/>
      <path refid="jboss.naming.classpath"/>
      <path refid="jboss.aop.classpath"/>
      <path location="${module.root}/../src/resources/hsqldb.jar"/>
      <pathelement location="${module.root}/etc"/>
      <pathelement location="${build.classes}"/>
      <pathelement location="../output/classes"/> <!-- TODO: I should use the Messaging classes that are deployed with the JBoss server -->

      <!-- required to run the benchmark on JBossMQ -->
      <path refid="jboss.messaging.classpath"/>

   </path>

   <!-- ===== -->
   <!-- Tasks -->
   <!-- ===== -->

   <target name="init">
      <mkdir dir="${build.classes}"/>
      <mkdir dir="${module.output}/logs"/>
      <mkdir dir="${module.output}/db"/>
      <mkdir dir="${module.output}/results"/>
   </target>

   <target name="compile" depends="init">

      <javac destdir="${build.classes}"
         optimize="${javac.optimize}"
         target="${javac.target}"
         source="${javac.source}"
         debug="${javac.debug}"
         depend="${javac.depend}"
         verbose="${javac.verbose}"
         deprecation="${javac.deprecation}"
         includeAntRuntime="${javac.include.ant.runtime}"
         includeJavaRuntime="${javac.include.java.runtime}"
         failonerror="${javac.fail.onerror}">
         <src path="${source.java}"/>
         <src path="${module.root}/tests"/>
         <classpath refid="perf.compilation.classpath"/>
      </javac>
   </target>

   <target name="run" depends="compile">

      <antcall target="start-executors"/>
      <sleep seconds="5"/>
      <antcall target="runner">
         <param name="action" value="measure"/>
      </antcall>
      <antcall target="kill-executors"/>
      <sleep seconds="5"/>
      <antcall target="runner">
         <param name="action" value="chart"/>
      </antcall>
   </target>

   <target name="chart" depends="compile">
      <antcall target="runner">
         <param name="action" value="chart"/>
      </antcall>
   </target>

   <target name="runner">
      <java classname="org.jboss.jms.perf.framework.Runner" fork="true">
         <!--
         <jvmarg value="-Xdebug"/>
         <jvmarg value="-Xnoagent"/>
         <jvmarg value="-Djava.compiler=NONE"/>
         <jvmarg value="-Xrunjdwp:transport=dt_shmem,server=y,suspend=y,address=executor"/>
         -->
         <arg line="-config ${module.root}/perf.xml -action ${action}"/>
         <sysproperty key="module.output" value="${module.output}"/>
         <sysproperty key="log.suffix" value="runner"/>
         <classpath refid="perf.execution.classpath"/>
      </java>
   </target>

   <target name="start-executors">
      <antcall target="start-executor">
         <param name="executor.host" value="localhost"/>
         <param name="executor.port" value="1234"/>
      </antcall>
      <antcall target="start-executor">
         <param name="executor.host" value="localhost"/>
         <param name="executor.port" value="1235"/>
      </antcall>
   </target>

   <target name="kill-executors">
      <antcall target="kill-executor">
         <param name="executor.host" value="localhost"/>
         <param name="executor.port" value="1234"/>
      </antcall>
      <antcall target="kill-executor">
         <param name="executor.host" value="localhost"/>
         <param name="executor.port" value="1235"/>
      </antcall>
   </target>

   <target name="start-executor" description="Start a perf executor">
      <echo message="Starting executor ${executor.host}:${executor.port}"/>
      <java classname="org.jboss.jms.perf.framework.Slave" fork="true" spawn="true">
         <arg value="${executor.port}"/>
         <arg value="${executor.host}"/>
         <sysproperty key="module.output" value="${module.output}"/>
         <sysproperty key="log.suffix" value="executor-${executor.host}-${executor.port}"/>
         <!--
         <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_shmem,server=y,suspend=y,address=executor"/>
         -->
         <classpath refid="perf.execution.classpath"/>
      </java>
   </target>

   <target name="kill-executor" description="Kill a perf executor">
      <echo message="Killing executor ${executor.host}:${executor.port}"/>
      <java classname="org.jboss.jms.perf.framework.SlaveKiller" fork="true">
         <arg value="${executor.port}"/>
         <arg value="${executor.host}"/>
         <sysproperty key="module.output" value="${module.output}"/>
         <sysproperty key="log.suffix" value="executor-${executor.host}-${executor.port}.death"/>
         <!--
         <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_shmem,server=y,suspend=y,address=executor"/>
         -->
         <classpath refid="perf.execution.classpath"/>
      </java>
   </target>

   <target name="clean">
      <delete dir="${module.output}"/>
   </target>

   <target name="report" depends="tests, copy-stylesheets, compile-report"/>

   <target name="prepare-testdirs">
      <mkdir dir="${module.output}/reports"/>
   </target>

   <target name="tests" depends="compile, prepare-testdirs">

      <junit printsummary="${junit.printsummary}"
         fork="no"
         includeantruntime="yes"
         haltonerror="${junit.haltonerror}"
         haltonfailure="${junit.haltonfailure}"
         showoutput="${junit.showoutput}"
         timeout="30000">

         <sysproperty key="module.output" value="${module.output}"/>
         <jvmarg value="-Xmx512M"/>
         <!--
         <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_shmem,server=y,suspend=y,address=antjunit"/>
         -->
         <classpath>
            <path refid="perf.execution.classpath"/>
         </classpath>
         <formatter type="xml" usefile="yes"/>
         <batchtest fork="${junit.batchtest.fork}"
            todir="${module.output}/reports"
            haltonfailure="no"
            haltonerror="no">
            <formatter type="plain" usefile="yes"/>
            <fileset dir="${module.output}/classes">
               <include name="**/test/**/*Test.class"/>
            </fileset>
         </batchtest>
      </junit>
   </target>

   <target name="copy-stylesheets">
      <mkdir dir="${module.output}/stylesheets"/>
      <copy todir="${module.output}/stylesheets" filtering="yes">
         <fileset dir="../tests/src/stylesheets">
            <include name="**/*"/>
         </fileset>
      </copy>
   </target>

   <target name="compile-report" depends="copy-stylesheets">
      <mkdir dir="${module.output}/reports/html"/>
      <junitreport todir="${module.output}/reports">
         <fileset dir="${module.output}/reports">
            <include name="TEST-*.xml"/>
         </fileset>
         <report format="frames"
            todir="${module.output}/reports/html"
            styledir="${module.output}/stylesheets"/>
      </junitreport>
   </target>

   <target name="something">
      <java classname="org.jboss.jms.perf.framework.Runner" fork="true">
         <!--
         <jvmarg value="-Xdebug"/>
         <jvmarg value="-Xnoagent"/>
         <jvmarg value="-Djava.compiler=NONE"/>
         <jvmarg value="-Xrunjdwp:transport=dt_shmem,server=y,suspend=y,address=executor"/>
         -->
         <arg line="-config ${module.root}/perf.xml"/>
         <sysproperty key="module.output" value="${module.output}"/>
         <sysproperty key="log.suffix" value="runner"/>
         <classpath refid="perf.execution.classpath"/>
      </java>
      <java classname="org.jboss.jms.perf.framework.Runner" fork="true">
         <!--
         <jvmarg value="-Xdebug"/>
         <jvmarg value="-Xnoagent"/>
         <jvmarg value="-Djava.compiler=NONE"/>
         <jvmarg value="-Xrunjdwp:transport=dt_shmem,server=y,suspend=y,address=executor"/>
         -->
         <arg line="-config ${module.root}/perf.xml -dump-database"/>
         <sysproperty key="module.output" value="${module.output}"/>
         <sysproperty key="log.suffix" value="runner"/>
         <classpath refid="perf.execution.classpath"/>
      </java>

   </target>


</project>

