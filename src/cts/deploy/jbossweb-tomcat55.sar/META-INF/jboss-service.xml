<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id$ -->

<server>

  <mbean code="org.jboss.web.tomcat.tc5.Tomcat5"
     name="jboss.web:service=WebServer" xmbean-dd="">
     
    <!-- Inline XMBean Descriptor BEGIN -->
    <xmbean>
      <description>The Tomcat Deployer responsible for war deployment</description>
      <descriptors>
        <interceptors>
          <!-- comment out DynamicInterceptor to disable dynamic addition of interceptors -->
          <interceptor code="org.jboss.mx.interceptor.DynamicInterceptor"/>
        </interceptors>
      </descriptors>
      <class>org.jboss.web.tomcat.tc5.Tomcat5</class>

      <!-- ServiceMBean attributes -->
      <attribute access="read-only" getMethod="getName">
        <description>The class name of the MBean</description>
        <name>Name</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-only" getMethod="getState">
        <description>The status of the MBean</description>
        <name>State</name>
        <type>int</type>
      </attribute>

      <attribute access="read-only" getMethod="getStateString">
        <description>The status of the MBean in text form</description>
        <name>StateString</name>
        <type>java.lang.String</type>
      </attribute>

      <!-- SubDeployerMBean attributes -->
      <attribute access="read-only" getMethod="getServiceName">
        <description>The ObjectName of the Subdeployer</description>
        <name>ServiceName</name>
        <type>javax.management.ObjectName</type>
      </attribute>

      <attribute access="read-write" getMethod="getSuffixes" setMethod="setSuffixes">
        <description>The suffixes of interest to this deployer</description>
        <name>Suffixes</name>
        <type>[Ljava.lang.String;</type>
      </attribute>

      <attribute access="read-write" getMethod="getRelativeOrder" setMethod="setRelativeOrder">
        <description>The relative order of the suffixes in the global suffixes list</description>
        <name>RelativeOrder</name>
        <type>int</type>
      </attribute>

      <!-- Tomcat5MBean attributes -->
      <attribute access="read-write" getMethod="getUseJBossWebLoader" setMethod="setUseJBossWebLoader">
        <name>UseJBossWebLoader</name>
        <type>boolean</type>
      </attribute>

      <attribute access="read-write" getMethod="getAllowSelfPrivilegedWebApps" setMethod="setAllowSelfPrivilegedWebApps">
        <name>AllowSelfPrivilegedWebApps</name>
        <type>boolean</type>
      </attribute>

      <attribute access="read-write" getMethod="getSubjectAttributeName" setMethod="setSubjectAttributeName">
        <name>SubjectAttributeName</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getCacheName" setMethod="setCacheName">
        <name>CacheName</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getUnpackWars" setMethod="setUnpackWars">
        <name>UnpackWars</name>
        <type>boolean</type>
      </attribute>

      <attribute access="read-write" getMethod="getConfig" setMethod="setConfig">
        <name>Config</name>
        <type>org.w3c.dom.Element</type>
      </attribute>

      <attribute access="read-write" getMethod="getLenientEjbLink" setMethod="setLenientEjbLink">
        <name>LenientEjbLink</name>
        <type>boolean</type>
      </attribute>

      <attribute access="read-write" getMethod="getUseJK" setMethod="setUseJK">
        <name>UseJK</name>
        <type>boolean</type>
      </attribute>

      <attribute access="read-write" getMethod="getDomain" setMethod="setDomain">
        <name>Domain</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getFilteredPackages" setMethod="setFilteredPackages">
        <name>FilteredPackages</name>
        <type>[Ljava.lang.String;</type>
      </attribute>

      <attribute access="read-write" getMethod="getJava2ClassLoadingCompliance" setMethod="setJava2ClassLoadingCompliance">
        <name>Java2ClassLoadingCompliance</name>
        <type>boolean</type>
      </attribute>

      <attribute access="read-write" getMethod="getDefaultSecurityDomain" setMethod="setDefaultSecurityDomain">
        <name>DefaultSecurityDomain</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getSnapshotMode" setMethod="setSnapshotMode">
        <name>SnapshotMode</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getSnapshotInterval" setMethod="setSnapshotInterval">
        <name>SnapshotInterval</name>
        <type>int</type>
      </attribute>

      <attribute access="read-write" getMethod="getConfigFile" setMethod="setConfigFile">
        <name>ConfigFile</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getUseLocalCache" setMethod="setUseLocalCache">
        <name>UseLocalCache</name>
        <type>boolean</type>
      </attribute>

      <attribute access="read-write" getMethod="getSessionIdAlphabet" setMethod="setSessionIdAlphabet">
        <name>SessionIdAlphabet</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getContextMBeanCode" setMethod="setContextMBeanCode">
        <name>ContextMBeanCode</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read-write" getMethod="getManagerClass" setMethod="setManagerClass">
        <name>ManagerClass</name>
        <type>java.lang.String</type>
      </attribute>

      <attribute access="read" getMethod="getDeployedApplications">
        <name>DeployedApplications</name>
        <type>java.util.Iterator</type>
      </attribute>

      <attribute access="write" setMethod="setSecurityManagerService">
        <name>SecurityManagerService</name>
        <type>org.jboss.security.plugins.JaasSecurityManagerServiceMBean</type>
      </attribute>

      <!-- ServiceMBean operations -->
      <operation>
        <description>Standard MBean lifecycle method</description>
        <name>create</name>
      </operation>

      <operation>
        <description>The start lifecycle operation</description>
        <name>start</name>
      </operation>

      <operation>
        <description>The stop lifecycle operation</description>
        <name>stop</name>
      </operation>

      <operation>
        <description>The destroy lifecycle operation</description>
        <name>destroy</name>
      </operation>

      <operation>
        <description>The detyped lifecycle operation (for internal use only)</description>
        <name>jbossInternalLifecycle</name>
        <parameter>
          <description>The lifecycle operation</description>
          <name>method</name>
          <type>java.lang.String</type>
        </parameter>
        <return-type>void</return-type>
      </operation>

      <!-- SubDeployerMBean operations -->
      <operation>
        <description>Accept a module for deployment</description>
        <name>accepts</name>
        <parameter>
          <name>info</name>
          <type>org.jboss.deployment.DeploymentInfo</type>
        </parameter>
        <return-type>boolean</return-type>
      </operation>

      <operation>
        <description>Initialize deployment step</description>
        <name>init</name>
        <parameter>
          <name>info</name>
          <type>org.jboss.deployment.DeploymentInfo</type>
        </parameter>
      </operation>

      <operation>
        <description>Create deployment step</description>
        <name>create</name>
        <parameter>
          <name>info</name>
          <type>org.jboss.deployment.DeploymentInfo</type>
        </parameter>
      </operation>

      <operation>
        <description>Start deployment step</description>
        <name>start</name>
        <parameter>
          <name>info</name>
          <type>org.jboss.deployment.DeploymentInfo</type>
        </parameter>
      </operation>

      <operation>
        <description>Stop deployment step</description>
        <name>stop</name>
        <parameter>
          <name>info</name>
          <type>org.jboss.deployment.DeploymentInfo</type>
        </parameter>
      </operation>

      <operation>
        <description>Destroy deployment step</description>
        <name>destroy</name>
        <parameter>
          <name>info</name>
          <type>org.jboss.deployment.DeploymentInfo</type>
        </parameter>
      </operation>

      <!-- Tomcat5MBean operations -->
      <operation>
        <description>See if a war is deployed</description>
        <name>isDeployed</name>
        <parameter>
          <name>warUrl</name>
          <type>java.lang.String</type>
        </parameter>
        <return-type>boolean</return-type>
      </operation>

      <operation>
        <description>Start all connectors of the Domain</description>
        <name>startConnectors</name>
      </operation>

      <operation>
        <description>Stop all connectors of the Domain</description>
        <name>stopConnectors</name>
      </operation>

      <!-- Interceptable operations -->
      <operation>
        <description>Add dynamically an operation interceptor</description>
        <name>addOperationInterceptor</name>
        <parameter>
          <description>The Interceptor</description>
          <name>interceptor</name>
          <type>org.jboss.mx.interceptor.Interceptor</type>
        </parameter>
      </operation>

      <operation>
        <description>Remove dynamically an operation interceptor</description>
        <name>removeOperationInterceptor</name>
        <parameter>
          <description>The Interceptor</description>
          <name>interceptor</name>
          <type>org.jboss.mx.interceptor.Interceptor</type>
        </parameter>
      </operation>      
    </xmbean>
    <!-- Inline XMBean Descriptor END -->

    <!-- The JAAS security domain to use in the absense of an explicit
    security-domain specification in the war WEB-INF/jboss-web.xml
    -->
    <attribute name="DefaultSecurityDomain">java:/jaas/other</attribute>

    <!-- Get the flag indicating if the normal Java2 parent first class
         loading model should be used over the servlet 2.3 web container first
         model.
    -->
    <attribute name="Java2ClassLoadingCompliance">false</attribute>
    <!-- A flag indicating if the JBoss Loader should be used. This loader
         uses a unified class loader as the class loader rather than the tomcat
         specific class loader.
         The default is false to ensure that wars have isolated class loading
         for duplicate jars and jsp files.
    -->
    <attribute name="UseJBossWebLoader">false</attribute>
      <!-- The list of package prefixes that should not be loaded without
       delegating to the parent class loader before trying the web app
       class loader. The packages listed here are those tha are used by
       the web container implementation and cannot be overriden. The format
       is a comma separated list of the package names. There cannot be any
       whitespace between the package prefixes.
       This setting only applies when UseJBossWebLoader=false.
    -->
    <attribute name="FilteredPackages">javax.servlet,org.apache.commons.logging</attribute>

    <attribute name="LenientEjbLink">true</attribute>

    <!--
        Class of the session manager (used if context is marked as 'distributable'. Currently allowed values:
        - org.jboss.web.tomcat.tc5.session.JBossCacheManager
    -->
    <attribute name="ManagerClass">org.jboss.web.tomcat.tc5.session.JBossCacheManager</attribute>

    <!-- The name of the request attribute under with the authenticated JAAS
    Subject is stored on successful authentication. If null or empty then
    the Subject will not be stored.
    -->
    <!--
    <attribute name="SubjectAttributeName">j_subject</attribute>
    -->

    <!-- The SessionIdAlphabet is the set of characters used to create a session Id
         It must be made up of exactly 65 unique characters
    <attribute name="SessionIdAlphabet">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-*</attribute>
    -->

    <!--
      *******************************************************
      ****************** CLUSTERING *************************
      *******************************************************
      In order to activate HTTP Session clustering for Tomcat
      make sure you run JBoss's "all" configuration i.e.
      "run -c all"
      (the default configuration doesn't contain clustering)

      Furthermore, you may change SnapshotMode and
      SnapshotInterval attributes below to indicate when to
      synchronize changes with the other node(s).

      If you use Apache+mod_jk(2) you will most probably use
      the AJP1.3 connector below. Thus, if you so wish,
      you may comment (i.e. deactivate) the HTTP connector
      as it won't be used anymore.

      *******************************************************
      *******************************************************
      *******************************************************
     -->

    <!--
      If you are using clustering, the following two attributes
      define when the sessions are replicated to the other nodes.
      The default value, "instant", synchronously replicates changes
      to the other nodes. In this case, the "SnapshotInterval" attribute
      is not used. The "interval" mode, in association with the "SnapshotInterval"
      attribute, indicates that Tomcat will only replicates modified
      sessions every "SnapshotInterval" miliseconds at most.

      Note that this filed is not in effect if the replication-granularity is set
      to FIELD. If it is FIELD, either it will be per http request (that is, instant
      in the current setting)
    -->
    <attribute name="SnapshotMode">instant</attribute> <!-- you may switch to "interval" -->
    <attribute name="SnapshotInterval">2000</attribute>

    <!--
    This has been deprecated since 3.2.6.

    A flag indicating if the local vm session value should be used if
    it exists. When true, the existing vm local session values are used and
    updates are replicated, but updates to the same session on other nodes
    do not update the local session value. This mode is only useful for
    failover. When false, the session value is obtained from the distributed
    cache. This mode can be used with load balancing.
    -->
    <attribute name="UseLocalCache">true</attribute>

    <!--
    Whether to use MOD_JK(2) for load balancing with sticky session
    combined with JvmRoute. If set to true, it will insert a JvmRouteFilter
    to intercept every request and replace the JvmRoute if it detects a
    failover. In addition, you will need to set the JvmRoute inside
    Tomcat, e.g.,
      Engine name="jboss.web" jmvRoute="Node1" defaultHost="localhost"
    in server.xml.

    For clustering purpose only.
    -->
    <attribute name="UseJK">false</attribute>

    <attribute name="Domain">jboss.web</attribute>

    <!-- A mapping to the server security manager service which must be
    operation compatible with type
    org.jboss.security.plugins.JaasSecurityManagerServiceMBean. This is only
    needed if web applications are allowed to flush the security manager
    authentication cache when the web sessions invalidate.
    -->
    <depends optional-attribute-name="SecurityManagerService"
      proxy-type="attribute">jboss.security:service=JaasSecurityManager
    </depends>

    <!--
       Configuration for HTTP Session Clustering using JBossCache
    -->
    <!--
    <depends>jboss.cache:service=TomcatClusteringCache</depends>
    -->
    <depends>jboss:service=TransactionManager</depends>
    <!-- Only needed if the org.jboss.web.tomcat.tc5.jca.CachedConnectionValve 
    is enabled in the tomcat server.xml file -->
    <depends>jboss.jca:service=CachedConnectionManager</depends>
    
  </mbean>

</server>
