<?xml version="1.0" encoding="UTF-8"?>
   <!DOCTYPE mbean PUBLIC
      "-//JBoss//DTD JBOSS XMBEAN 1.2//EN"
      "http://www.jboss.org/j2ee/dtd/jboss_xmbean_1_2.dtd">

<mbean>
   <description>A deployable JBoss Messaging Topic</description>
   <class>org.jboss.jms.server.destination.Topic</class>

   <!-- Managed constructors -->

   <constructor>
      <name>Topic</name>
   </constructor>

   <constructor>
      <name>Topic</name>
      <parameter>
         <name>IsCreatedProgrammatically</name>
         <type>boolean</type>
      </parameter>
   </constructor>

   <!-- Managed attributes -->

   <attribute access="read-only" getMethod="getName">
      <description>The destination name</description>
      <name>Name</name>
      <type>java.lang.String</type>
   </attribute>

   <!-- This managed attribute is exposed here for backward compatibility with JBossMQ topics
        management interface only. It will probably dissapear in the future.
   -->
   <attribute access="read-only" getMethod="getName">
      <description>The topic name (deprecated management attribute)</description>
      <name>TopicName</name>
      <type>java.lang.String</type>
   </attribute>

   <!-- This attribute is writable to allow configuring an arbitrary JNDI name in the topic's
        service deployment descriptor. Any attempt to change the attribute after initialization
        will be ignored.
   -->
   <attribute access="read-write" getMethod="getJNDIName" setMethod="setJNDIName">
      <description>The destination's JNDI name</description>
      <name>JNDIName</name>
      <type>java.lang.String</type>
   </attribute>

   <!-- ServerPeer ObjectName is configured as a dependency optional-attribute-name, this is the
        only reason for this attribute to be writable. Any write attempt on this attribute after
        initialization will be ignored.
   -->
   <attribute access="read-write" getMethod="getServerPeer" setMethod="setServerPeer">
      <description>The ObjectName of the server peer this destination was deployed on</description>
      <name>ServerPeer</name>
      <type>javax.management.ObjectName</type>
   </attribute>

   <attribute access="read-write" getMethod="getSecurityConfig" setMethod="setSecurityConfig">
      <description>The destination's security configuration</description>
      <name>SecurityConfig</name>
      <type>org.w3c.dom.Element</type>
   </attribute>

   <attribute access="read-only" getMethod="isCreatedProgrammatically">
      <description>True if this destination was created programmatically</description>
      <name>CreatedProgrammatically</name>
      <type>boolean</type>
   </attribute>

   <attribute access="read-write" getMethod="getFullSize" setMethod="setFullSize">
      <description>The in-memory message limit, can only be set when topic is stopped</description>
      <name>FullSize</name>
      <type>int</type>
   </attribute>

   <attribute access="read-write" getMethod="getPageSize" setMethod="setPageSize">
      <description>The paging size, can only be set when topic is stopped</description>
      <name>PageSize</name>
      <type>int</type>
   </attribute>

   <attribute access="read-write" getMethod="getDownCacheSize" setMethod="setDownCacheSize">
      <description>The write-cache size, can only be set when topic is stopped</description>
      <name>DownCacheSize</name>
      <type>int</type>
   </attribute>

   <!-- Managed operations -->

   <operation>
      <description>JBoss Service lifecycle operation</description>
      <name>create</name>
   </operation>

   <operation>
      <description>JBoss Service lifecycle operation</description>
      <name>start</name>
   </operation>

   <operation>
      <description>JBoss Service lifecycle operation</description>
      <name>stop</name>
   </operation>

   <operation>
      <description>JBoss Service lifecycle operation</description>
      <name>destroy</name>
   </operation>

   <operation>
      <description>Remove all messages</description>
      <name>removeAllMessages</name>
   </operation>

   <operation>
      <description>Get all subscription count</description>
      <name>subscriptionCount</name>
      <return-type>int</return-type>
   </operation>

   <operation>
      <description>Get durable/nondurable subscription count</description>
      <name>subscriptionCount</name>
      <parameter>
         <description>Set the value to true to get durable subscription count; false to get nondurable count</description>
         <name>durable</name>
         <type>boolean</type>
      </parameter>
      <return-type>int</return-type>
   </operation>

   <operation>
      <description>Returns a readable list containing the names of current subscriptions.</description>
      <name>listSubscriptionsAsText</name>
      <return-type>java.lang.String</return-type>
   </operation>

   <operation>
      <description>Returns a readable list containing the names of current subscriptions.</description>
      <name>listSubscriptionsAsText</name>
      <parameter>
         <description>Set the value to true to get durable subscription list; false to get nondurable list</description>
         <name>durable</name>
         <type>boolean</type>
      </parameter>
      <return-type>java.lang.String</return-type>
   </operation>

   <operation>
      <description>Get a list of messages for a durable subscription that filtered by selector</description>
      <name>listMessagesDurableSub</name>
      <parameter>
         <description>The durable subscription name (must specify)</description>
         <name>name</name>
         <type>java.lang.String</type>
      </parameter>
      <parameter>
         <description>The durable subscription client ID (if empty, the first matched subscription name will be chosen)</description>
         <name>clientID</name>
         <type>java.lang.String</type>
      </parameter>
      <parameter>
          <description>Expression to define the selector</description>
         <name>selector</name>
         <type>java.lang.String</type>
      </parameter>
      <return-type>java.util.List</return-type>
   </operation>

   <operation>
      <description>Get a list of messages for a non-durable subscription that filtered by selector</description>
      <name>listMessagesNonDurableSub</name>
      <parameter>
         <description>The non-durable subscription ID (must specify)</description>
         <name>subscriptionID</name>
         <type>long</type>
      </parameter>
      <parameter>
         <description>Expression to define the selector</description>
         <name>selector</name>
         <type>java.lang.String</type>
      </parameter>
      <return-type>java.util.List</return-type>
  </operation>
</mbean>
