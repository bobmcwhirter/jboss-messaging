#!/bin/sh
#
# bash script to start the rmi server in background. Will exit immediately.
# Look at tests/output/logs/messaging-tests-remote.trace.log to diagnose the start up process in
# case something goes wrong.
#

reldir=`dirname $0`

cygwin=false;
case "`uname`" in
    CYGWIN*)
        cygwin=true
        ;;
esac

if [ $cygwin = true ]; then
    SEP=";"
else
    SEP=":"
fi

while [ "$1" != "" ]; do
    if [ "$1" = "-debug" ]; then
        if [ $cygwin = false ]; then
            JAVA_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=12348"
        else
            JAVA_OPTS="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_shmem,server=n,suspend=y,address=rmiserver"
        fi
    elif [ "$1" = "-use-existent-test-classpath-file" ]; then
        USE_EXISTENT_TEST_CLASSPATH_FILE=true;
    fi
    shift
done

mkdir -p $reldir/../output/logs

JAVA_OPTS="$JAVA_OPTS -Xmx768M -Dmodule.output=$reldir/../output -Dremote.test.suffix=-remote"

if [ "$TEST_DATABASE" != "" ]; then
   JAVA_OPTS="$JAVA_OPTS -Dtest.database=$TEST_DATABASE"
fi

if [ "$TEST_SERIALIZATION" != "" ]; then
   JAVA_OPTS="$JAVA_OPTS -Dtest.serialization=$TEST_SERIALIZATION"
fi

if [ "$TEST_REMOTING" != "" ]; then
   JAVA_OPTS="$JAVA_OPTS -Dtest.remoting=$TEST_REMOTING"
fi


if [ "$USE_EXISTENT_TEST_CLASSPATH_FILE" = "true" ]; then
   CLASSPATH_FILE="$reldir/.test.execution.classpath"
else
   ant -Dtest.execution.classpath.file=bin/.startrmi.execution.classpath -f $reldir/../build.xml get-test-execution-classpath
   CLASSPATH_FILE="$reldir/.startrmi.execution.classpath"
fi

if [ ! -f $CLASSPATH_FILE ]; then
   echo "No such classpath file: $CLASSPATH_FILE"
   exit 1
fi

CLASSPATH=`cat $CLASSPATH_FILE`

# for stress testing
JAVA_OPTS="$JAVA_OPTS -Xmx768M"

java $JAVA_OPTS -cp $CLASSPATH -Dtest.bind.address=localhost \
org.jboss.test.messaging.tools.jmx.rmi.RMITestServer &
