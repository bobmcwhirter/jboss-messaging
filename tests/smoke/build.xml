<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<project default="smoke-all" name="Messaging Smoke Test">

   <property environment="ENV"/>
   <property file="./output/last-run.properties"/>
   <property file="./smoke.properties"/>
   <property name="sleep.interval" value="60"/>
   <property name="messaging.artifact.name" value="jboss-messaging-scoped.sar"/>
   <property name="relative.client.jar.location" value="../../util"/>
   <property name="messaging.client.jar.name" value="jboss-messaging-client.jar"/>
   <property name="release.admin.target" value="install"/>

   <!--
        By default, each smoke tests runs all examples. If you want to prevent a specific example
        from during a smoke test, set run.<examplename>.example=false in the corresponding "smoke"
        antcall.
   -->
   <property name="run.queue.example" value="true"/>
   <property name="run.topic.example" value="true"/>
   <property name="run.mdb.example" value="true"/>
   <property name="run.stateless.example" value="true"/>
   <property name="run.ejb3mdb.example" value="false"/>
   <property name="run.secure-socket.example" value="true"/>

   <path id="twiddle.classpath">
      <pathelement location="${jboss.home}/bin/twiddle.jar"/>
      <pathelement location="${jboss.home}/client/jbossall-client.jar"/>
      <pathelement location="${jboss.home}/client/getopt.jar"/>
      <pathelement location="${jboss.home}/client/log4j.jar"/>
      <pathelement location="${jboss.home}/lib/jboss-jmx.jar"/>
      <pathelement location="${jboss.home}/lib/dom4j.jar"/>
   </path>

   <!-- ======================================================================== -->
   <!--      Targets                                                             -->
   <!-- ======================================================================== -->

   <target name="check-jboss-availability">
      <fail unless="jboss.home">jboss.home property not set!</fail>
   </target>

   <target name="sleep">
      <echo message="Sleeping for ${sleep.interval} seconds ..."/>
      <sleep seconds="${sleep.interval}"/>
   </target>

   <target name="build-deployment-archives-from-scratch">
      <ant dir="../.." antfile="build.xml" target="clean" inheritAll="false"/>
      <ant dir="../.." antfile="build.xml" target="artifacts" inheritAll="false"/>
      <!-- I need this because the smoke test itself uses org.jboss.test.messaging.tools classes -->
      <ant dir="../../tests" antfile="build.xml" target="compile" inheritAll="false"/>
   </target>

   <target name="create-messaging-config">
      <available file="../../output/lib/${messaging.artifact.name}" property="archive.present"/>
      <fail unless="archive.present">Cannot find deployment archive ../../output/lib/${messaging.artifact.name}</fail>
      <ant antfile="../../util/release-admin.xml" target="${release.admin.target}">
         <property name="jboss.home" value="${jboss.home}"/>
         <property name="messaging.config.name" value="messaging-smoke-test"/>
         <property name="standalone.messaging.config.name" value="messaging-smoke-test"/>
         <property name="relative.artifact.location" value="../../output/lib"/>
         <property name="messaging.artifact.name" value="${messaging.artifact.name}"/>
      </ant>
      <available file="../../output/lib/jboss-messaging-client.jar" property="client.jar.present"/>
      <fail unless="client.jar.present">Cannot find the client jar ../../output/lib/jboss-messaging-client.jar</fail>
      <antcall target="replace-remoting"/>
   </target>

   <target name="replace-remoting" if="replace.remoting">
      <echo message="###"/>
      <echo message="###"/>
      <echo message="### WARNING! Substituting jboss-remoting.jar, jboss-serialization.jar"/>
      <echo message="###"/>
      <echo message="###"/>
      <copy file="../../src/resources/jboss-remoting.jar" todir="${jboss.home}/server/messaging-smoke-test/lib" overwrite="true"/>
      <copy file="../../src/resources/jboss-serialization.jar" todir="${jboss.home}/server/messaging-smoke-test/lib"  overwrite="true"/>
   </target>

   <target name="start" description="Starts the jboss instance">
      <fail unless="jboss.home" message="jboss.home property not set!"/>
      <echo message="Starting 'messaging-smoke-test' config on ${jboss.home}"/>
      <java classname="org.jboss.Main" fork="yes" spawn="yes" dir="${jboss.home}/bin">
         <jvmarg value="-server"/>
         <jvmarg value="-Xms128m"/>
         <jvmarg value="-Xmx128m"/>
         <arg value="-c"/>
         <arg value="messaging-smoke-test"/>
         <sysproperty key="java.endorsed.dirs" value="${jboss.home}/lib/endorsed"/>
         <classpath>
            <pathelement location="${jboss.home}/bin/run.jar"/>
            <pathelement location="${java.home}/lib/tools.jar"/>
         </classpath>
      </java>
   </target>

   <target name="write-current-jboss-home">
      <path id="crt.jboss.home"><pathelement location="${jboss.home}"/></path>
      <pathconvert targetos="unix" property="crt.jboss.home.tostring" refid="crt.jboss.home"/>
      <echo message="jboss.home=${crt.jboss.home.tostring}" file="./output/last-run.properties"/>
   </target>

   <target name="ping-jms-server">
      <java classname="org.jboss.console.twiddle.Twiddle" fork="yes" failonerror="yes"
            dir="${jboss.home}/bin">
         <arg line="get jboss.messaging:service=ServerPeer serverPeerID"/>
         <classpath>
            <path refid="twiddle.classpath"/>
         </classpath>
      </java>
   </target>

   <target name="deploy-queue">
      <copy file="artifacts/smoketest-queue-service.xml"
            todir="${jboss.home}/server/messaging-smoke-test/deploy"/>
   </target>

   <target name="deploy-scoped-queue">
      <copy file="artifacts/smoketest-queue-service.xml" tofile="./smoketest-queue-service.xml"/>
      <!-- enable scoping -->
      <replaceregexp file="./smoketest-queue-service.xml" flags="s">
         <regexp pattern="\x3c!\x2d-([ \t\n\r]*)(\x3cloader-repository\x3e.*\x3c/loader-repository\x3e)([ \t\n\r]*)\x2d-\x3e"/>
         <substitution expression="\2"/>
      </replaceregexp>
      <move file="./smoketest-queue-service.xml" todir="${jboss.home}/server/messaging-smoke-test/deploy"/>
   </target>

   <target name="ping-queue">
      <java classname="org.jboss.console.twiddle.Twiddle" fork="yes" failonerror="yes"
          dir="${jboss.home}/bin">
         <arg line="get jboss.messaging.destination:name=SmokeTestQueue,service=Queue Name"/>
         <classpath>
            <path refid="twiddle.classpath"/>
         </classpath>
      </java>
   </target>

   <target name="deploy-topic">
       <copy file="artifacts/smoketest-topic-service.xml"
         todir="${jboss.home}/server/messaging-smoke-test/deploy"/>
   </target>

   <target name="deploy-scoped-topic">
      <copy file="artifacts/smoketest-topic-service.xml" tofile="./smoketest-topic-service.xml"/>
      <!-- enable scoping -->
      <replaceregexp file="./smoketest-topic-service.xml" flags="s">
         <regexp pattern="\x3c!\x2d-([ \t\n\r]*)(\x3cloader-repository\x3e.*\x3c/loader-repository\x3e)([ \t\n\r]*)\x2d-\x3e"/>
         <substitution expression="\2"/>
      </replaceregexp>
      <move file="./smoketest-topic-service.xml" todir="${jboss.home}/server/messaging-smoke-test/deploy"/>
   </target>

   <target name="ping-topic">
      <java classname="org.jboss.console.twiddle.Twiddle" fork="yes" failonerror="yes"
          dir="${jboss.home}/bin">
         <arg line="get jboss.messaging.destination:name=SmokeTestTopic,service=Topic Name"/>
         <classpath>
            <path refid="twiddle.classpath"/>
         </classpath>
      </java>
   </target>

   <target name="run-example">
      <!--
           determine if a specific example should run with a specific smoke test; to prevent a
           smoke test from running an example, set "run.<examplename>.example to false.
       -->
      <condition property="do.run" value="true">
         <or>
            <and>
               <equals arg1="${example.name}" arg2="queue"/>
               <istrue value="${run.queue.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="topic"/>
               <istrue value="${run.topic.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="mdb"/>
               <istrue value="${run.mdb.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="stateless"/>
               <istrue value="${run.stateless.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="ejb3mdb"/>
               <istrue value="${run.ejb3mdb.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="secure-socket"/>
               <istrue value="${run.secure-socket.example}"/>
            </and>
         </or>
      </condition>
      <antcall target="run-example-internal"/>
   </target>

   <!-- don't call this target directly, call it via "run-example" -->
   <target name="run-example-internal" if="do.run">
      <ant dir="../../docs/examples/${example.name}" antfile="build.xml" inheritAll="false" target="clean">
         <property name="jboss.home" value="${jboss.home}"/>
         <property name="jboss.configuration.name" value="${jboss.configuration.name}"/>
      </ant>
      <ant dir="../../docs/examples/${example.name}" antfile="build.xml" inheritAll="false">
         <property name="example.queue.name" value="${example.queue.name}"/>
         <property name="example.topic.name" value="${example.topic.name}"/>
         <property name="messaging.client.jar.path" value="${basedir}/../../output/lib"/>
         <property name="messaging.client.jar.name" value="${messaging.client.jar.name}"/>
         <property name="jboss.home" value="${jboss.home}"/>
         <property name="jboss.configuration.name" value="${jboss.configuration.name}"/>
      </ant>
      <echo message="Example ${example.name} executed successfully, cleaning ..."/>
      <ant dir="../../docs/examples/${example.name}" antfile="build.xml" inheritAll="false" target="clean">
         <property name="jboss.home" value="${jboss.home}"/>
         <property name="jboss.configuration.name" value="${jboss.configuration.name}"/>
      </ant>
      <antcall target="display-warnings-and-errors"/>
      <!-- record successful run -->
      <echo message="JBOSS_HOME=${jboss.home} INSTALLATION_TYPE=${release.admin.target} SAR_NAME=${messaging.artifact.name} EXAMPLE_NAME=${example.name}${line.separator}"
            file="./output/smoke.log" append="yes"/>
   </target>

   <target name="stop" description="Stops the jboss instance">
      <fail unless="jboss.home" message="jboss.home property not set!"/>
      <java classname="org.jboss.Shutdown" fork="yes" dir="${jboss.home}/bin">
         <jvmarg value="-server"/>
         <jvmarg value="-Xms128m"/>
         <jvmarg value="-Xmx128m"/>
         <arg value="-S"/>
         <classpath>
            <pathelement location="${jboss.home}/bin/shutdown.jar"/>
            <pathelement location="${jboss.home}/client/jbossall-client.jar"/>
         </classpath>
      </java>
   </target>

   <target name="display-warnings-and-errors">
      <java classname="org.jboss.test.messaging.tools.ant.DisplayWarningsAndErrors">
         <arg value="${jboss.home}/server/messaging-smoke-test/log/server.log"/>
         <arg value="WARN  [org.jboss.messaging.core.plugin.JDBCPersistenceManager] "/>
         <arg value="ejb3.deployer/"/> <!-- EJB3 doesn't deploy with java 1.4 -->
         <arg value="ejb3-interceptors-aop.xml"/> <!-- EJB3 doesn't deploy with java 1.4 -->
         <arg value="WARN  [org.jboss.system.ServiceController] Problem creating service jboss.aop:service=AspectManager"/>
         <arg value="ERROR [org.jboss.deployment.scanner.URLDeploymentScanner] Incomplete Deployment listing:"/>
         <arg value="ERROR [org.jboss.aop.deployment.AspectDeployer] failed to stop"/>
         <arg value="restart will delete it"/>

         <arg value="web-console.war/"/> <!-- Only on JBoss 5 -->
         <arg value="jmx-console.war/"/> <!-- Only on JBoss 5 -->

         <classpath>
            <pathelement location="../output/classes"/>
         </classpath>
      </java>
   </target>

   <target name="report">
      <java classname="org.jboss.test.messaging.tools.ant.GenerateSmokeReport">
         <arg value="-inputfile"/>
         <arg value="./output/smoke.log"/>
         <arg value="-outputdir"/>
         <arg value="./output"/>
         <arg value="-basename"/>
         <arg value="smoke-test-report"/>
         <arg value="-installerdir"/>
         <arg value="C:\work\jnlp"/>
         <classpath>
            <pathelement location="../output/classes"/>
         </classpath>
      </java>
   </target>

   <target name="clean-jboss-config">
      <fail unless="jboss.home" message="jboss.home property not set!"/>
      <delete dir="${jboss.home}/server/messaging-smoke-test" quiet="false" failonerror="true"/>
      <delete dir="../../output/lib/jboss-messaging-client.jar" quiet="false" failonerror="true"/>
      <delete file="./output/last-run.properties" quiet="true"/>
   </target>

   <target name="clean">
      <delete dir="./output"/>
      <antcall target="clean-jboss-config"/>
   </target>

   <target name="print-classpath">
      <pathconvert targetos="unix" property="classpath.tostring.property" refid="twiddle.classpath"/>
      <echo message="${classpath.tostring.property}"/>
   </target>

   <target name="smoke" depends="check-jboss-availability">

      <echo message="Smoking on JBOSS_HOME ${jboss.home}"/>

      <antcall target="create-messaging-config">
         <param name="release.admin.target" value="${release.admin.target}"/>
      </antcall>

      <antcall target="start"/>

      <antcall target="write-current-jboss-home"/>

      <antcall target="sleep"><param name="sleep.interval" value="35"/></antcall>

      <antcall target="ping-jms-server"/>

      <antcall target="deploy-scoped-queue"/>
      <antcall target="sleep"><param name="sleep.interval" value="5"/></antcall>
      <antcall target="ping-queue"/>

      <antcall target="deploy-scoped-topic"/>
      <antcall target="sleep"><param name="sleep.interval" value="5"/></antcall>
      <antcall target="ping-topic"/>

      <!-- ====================================================  -->
      <!--                                                       -->
      <!--  List your example here:                              -->
      <!--                                                       -->
      <!-- ====================================================  -->

      <antcall target="run-example">
         <param name="example.name" value="queue"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="topic"/>
         <param name="example.topic.name" value="SmokeTestTopic"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="mdb"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
         <param name="jboss.configuration.name" value="messaging-smoke-test"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="stateless"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
         <param name="jboss.configuration.name" value="messaging-smoke-test"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="ejb3mdb"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
         <param name="jboss.configuration.name" value="messaging-smoke-test"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="secure-socket"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
         <param name="jboss.configuration.name" value="messaging-smoke-test"/>
      </antcall>

      <!-- ====================================================  -->
      <!--                                                       -->
      <!--  End of example list                                  -->
      <!--                                                       -->
      <!-- ====================================================  -->

      <antcall target="stop"/>
      <antcall target="sleep"><param name="sleep.interval" value="10"/></antcall>
      <antcall target="display-warnings-and-errors"/>
      <antcall target="clean-jboss-config"/>

   </target>

   <target name="smoke-all">

      <mkdir dir="./output"/>
      <delete file="./output/smoke.log" quiet="true"/>

      <antcall target="build-deployment-archives-from-scratch"/>

      <!--
           4.0.0, 4.0.1 NOT SUPPORTED
      -->

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss401sp1.home}"/>
         <param name="run.secure-socket.example" value="false"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss402.home}"/>
         <param name="run.secure-socket.example" value="false"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss403.home}"/>
         <param name="run.secure-socket.example" value="false"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss403-installer.home}"/>
         <param name="run.secure-socket.example" value="false"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss403SP1.home}"/>
         <param name="run.secure-socket.example" value="false"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss403SP1-installer.home}"/>
         <param name="run.secure-socket.example" value="false"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss403SP1.home}"/>
         <param name="release.admin.target" value="standalone"/>
         <param name="run.mdb.example" value="false"/>
         <param name="run.stateless.example" value="false"/>
         <param name="run.secure-socket.example" value="false"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss404GA.home}"/>
      </antcall>

      <antcall target="smoke">
         <param name="jboss.home" value="${jboss404GA-installer.home}"/>
      </antcall>

      <!--
         Stateless Session Bean smoke test will fail on this because the client talks to
         Messaging's remoting and to Unified Invoker's remoting and runs into compatibility
         problems.
      -->
      <antcall target="smoke">
         <param name="jboss.home" value="${jboss500Alpha.home}"/>
         <param name="run.stateless.example" value="false"/>
      </antcall>

      <!--
           Unscoped deployment in JBoss 5. Special precautions need to be taken to replace the
           jboss-remoting.jar and jboss-serialization.jar with Messaging's versions.
           TODO the 'replace.remoting' flag and task should go away when http://jira.jboss.org/jira/browse/JBMESSAGING-319 is done.
      -->
      <antcall target="smoke">
         <param name="jboss.home" value="${jboss500Alpha.home}"/>
         <param name="messaging.artifact.name" value="jboss-messaging.jar"/>
         <param name="replace.remoting" value="true"/>
      </antcall>
                                                                                             
      <antcall target="report"/>

   </target>


</project>

