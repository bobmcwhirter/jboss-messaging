<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id$ -->

<!--

   Run the messaging smoke tests
   =============================

   We only run smoke tests against JBAS 4.2.0.GA and later since this is what we support.

   Any earlier versions are best effort.

   The smoke tests require 3 servers configuration to be set up before running:

   1) ${JBOSS_HOME}/server/<jboss-configuration> non clustered config based on default

   2) ${JBOSS_HOME}/server/<jboss-configuration>0 clustered config based on all

   3) ${JBOSS_HOME}/server/<jboss-configuration>1 clustered config based on all

   The configs should be running when the script is started


-->

<project default="all" name="Messaging Smoke Test Suite">

   <property environment="ENV"/>
   <property file="./output/last-run.properties"/>
   <property file="./smoke.properties"/>
   <property name="sleep.interval" value="60"/>
   <property name="jnpPort" value="1099"/>
   <property name="messaging.server.artifact.name" value="jboss-messaging.sar"/>
   <property name="messaging.server.artifact.path" value="../../output/lib"/>
   <property name="relative.client.jar.location" value="../../util"/>
   <property name="messaging.client.jar.name" value="jboss-messaging-client.jar"/>
   <property name="release.admin.target" value="default"/>
   <property name="jboss.configuration" value="messaging"/>
   <property name="messaging.client.jar.path" value="${basedir}/../../output/lib"/>
   <property name="smoke.test.type" value="installation"/>
   <property name="clustered" value="false"/>

   <property name="password" value="admin"/>
   <property name="user" value="admin"/>

   <!--
        By default, each test (installation or compatiblity) runs all examples. If you want to
        prevent a specific example from running during a test, set run.<examplename>.example=false
        in the corresponding "installation-test" or "compatibility-test" antcall.
   -->
   <property name="run.queue.example" value="true"/>
   <property name="run.topic.example" value="true"/>
   <property name="run.mdb.example" value="true"/>
   <property name="run.mdb-failure.example" value="true"/>
   <property name="run.http.example" value="true"/>
   <property name="run.stateless.example" value="true"/>
   <property name="run.ejb3mdb.example" value="true"/>
   <property name="run.secure-socket.example" value="true"/>
   <property name="run.distributed-queue.example" value="true"/>
   <property name="run.distributed-topic.example" value="true"/>
   <property name="run.queue-failover.example" value="true"/>

   <property name="jboss.home" value="${jboss.compatibility.home}"/>

   <path id="twiddle.classpath">
      <pathelement location="${jboss.home}/bin/twiddle.jar"/>
      <pathelement location="${jboss.home}/client/jbossall-client.jar"/>
      <pathelement location="${jboss.home}/client/getopt.jar"/>
      <pathelement location="${jboss.home}/client/log4j.jar"/>
      <pathelement location="${jboss.home}/lib/jboss-jmx.jar"/>
      <pathelement location="${jboss.home}/lib/dom4j.jar"/>
   </path>

   <!-- ======================================================================== -->
   <!--      Configurable Targets                                                -->
   <!-- ======================================================================== -->

   <target name="insure-smoke-properties">
      <available file="./smoke.properties" property="smoke.properties.present"/>
      <fail message="The ./smoke.properties file NOT available. Create one based on 'smoke.properties.example' and try again."
            unless="smoke.properties.present"/>
   </target>

   <target name="all" depends="insure-smoke-properties">
      <mkdir dir="./output"/>
      <delete file="./output/smoke.log" quiet="true"/>

      <antcall target="installation-tests"/>

<!--
      <antcall target="old-server-compatibility-tests">
         <param name="smoke.test.type" value="client.compatibility"/>
      </antcall>

      <antcall target="old-client-compatibility-tests">
         <param name="smoke.test.type" value="server.compatibility"/>
      </antcall>
-->

      <antcall target="report"/>
   </target>

   <target name="installation-tests">

      <!-- We only support 4.2.0.GA and later - so we only smoke against that -->


      <!--
           4.2.0.GA
      -->

      
      <antcall target="installation-test">
         <param name="jboss.home" value="${jboss420GA.home}"/>
      </antcall>      

   </target>

   <target name="old-client-compatibility-tests">
      
      <!-- ====================================================  -->
      <!--                                                       -->
      <!--  Add here other old client versions to test:          -->
      <!--                                                       -->
      <!-- ====================================================  -->

      <antcall target="old-client-compatibility-test">
         <param name="jboss.home" value="${jboss.compatibility.home}"/>
         <param name="jboss.configuration" value="current-version-server"/>
         <param name="jboss.messaging.version" value="1.0.1.CR1"/>
      </antcall>

      <antcall target="old-client-compatibility-test">
         <param name="jboss.home" value="${jboss.compatibility.home}"/>
         <param name="jboss.configuration" value="current-version-server"/>
         <param name="jboss.messaging.version" value="1.0.1.CR2"/>
      </antcall>

   </target>

   <target name="run-all-examples">

      <antcall target="ping-jms-server"/>

      <antcall target="deploy-queue"/>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-queue">
         <param name="example.queue.name" value="SmokeTestQueue"/>
      </antcall>

      <antcall target="deploy-topic"/>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-topic">
         <param name="example.topic.name" value="SmokeTestTopic"/>
      </antcall>

      <!-- ====================================================  -->
      <!--                                                       -->
      <!--  LIST YOUR NON-CLUSTERED EXAMPLES HERE:               -->
      <!--                                                       -->
      <!-- ====================================================  -->

      <antcall target="run-example">
         <param name="example.name" value="queue"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="topic"/>
         <param name="example.topic.name" value="SmokeTestTopic"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="mdb"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="mdb-failure"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="stateless"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="ejb3mdb"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="secure-socket"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="http"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.home" value="${jboss.home}"/>
      </antcall>

      <!-- ====================================================  -->
      <!--                                                       -->
      <!--  END OF NON-CLUSTERED EXAMPLE LIST                    -->
      <!--                                                       -->
      <!-- ====================================================  -->

      <antcall target="display-warnings-and-errors"/>

   </target>

   <target name="run-all-clustered-examples">

      <!--
          Deploy the non-clustered queue, we'll also run non-clustered examples in a clustered
          configuration.
      -->

      <antcall target="deploy-queue">
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
      </antcall>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-queue">
         <param name="example.queue.name" value="SmokeTestQueue"/>
      </antcall>

      <!--
          Deploy the clustered queue.
      -->

      <antcall target="deploy-clustered-queue">
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
      </antcall>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-queue">
         <param name="example.queue.name" value="DistributedSmokeTestQueue"/>
      </antcall>

      <!--
          Deploy the non-clustered topic, we'll also run non-clustered examples in a clustered
          configuration.
      -->

      <antcall target="deploy-topic">
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
      </antcall>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-topic">
         <param name="example.topic.name" value="SmokeTestTopic"/>
      </antcall>

      <!--
          Deploy the clustered topic.
      -->

      <antcall target="deploy-clustered-topic">
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
      </antcall>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-topic">
         <param name="example.topic.name" value="DistributedSmokeTestTopic"/>
      </antcall>

      <!--
          Deploy the clustered queue.
      -->

      <antcall target="deploy-clustered-queue">
         <param name="jboss.configuration" value="${jboss.configuration}-node1"/>
      </antcall>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-queue">
         <param name="example.queue.name" value="DistributedSmokeTestQueue"/>
         <param name="jnpPort" value="1199"/>
      </antcall>


      <!--
          Deploy the clustered topic.
      -->

      <antcall target="deploy-clustered-topic">
         <param name="jboss.configuration" value="${jboss.configuration}-node1"/>
      </antcall>
      <antcall target="sleep"><param name="sleep.interval" value="8"/></antcall>
      <antcall target="ping-topic">
         <param name="example.topic.name" value="DistributedSmokeTestTopic"/>
         <param name="jnpPort" value="1199"/>
      </antcall>

      <!-- ====================================================  -->
      <!--                                                       -->
      <!--  LIST YOUR CLUSTERED EXAMPLES HERE:                   -->
      <!--                                                       -->
      <!-- ====================================================  -->

      <!--
           Single-node examples that runs in a clustered configuration. The list should be
           identical with the one used for non-clustered tests
      -->
      <antcall target="run-example">
         <param name="example.name" value="queue"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="topic"/>
         <param name="example.topic.name" value="SmokeTestTopic"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="mdb"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="mdb-failure"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="stateless"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="ejb3mdb"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="secure-socket"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <antcall target="run-example">
         <param name="example.name" value="http"/>
         <param name="example.queue.name" value="SmokeTestQueue"/>
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
         <param name="clustered" value="true"/>
      </antcall>

      <!--
           Genuine clustered examples.
      -->

      <antcall target="run-clustered-example">
         <param name="example.name" value="distributed-queue"/>
         <param name="example.queue.name" value="DistributedSmokeTestQueue"/>
      </antcall>

      <antcall target="run-clustered-example">
         <param name="example.name" value="distributed-topic"/>
         <param name="example.topic.name" value="DistributedSmokeTestTopic"/>
      </antcall>

      <!-- This one must be last since it kills the server -->
      <antcall target="run-clustered-example">
         <param name="example.name" value="queue-failover"/>
         <param name="example.queue.name" value="DistributedSmokeTestQueue"/>
      </antcall>

      <!-- ====================================================  -->
      <!--                                                       -->
      <!--  END OF CLUSTERED EXAMPLE LIST                        -->
      <!--                                                       -->
      <!-- ====================================================  -->

      <antcall target="display-warnings-and-errors">
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
      </antcall>

      <antcall target="display-warnings-and-errors">
         <param name="jboss.configuration" value="${jboss.configuration}-node1"/>
      </antcall>

   </target>

   <target name="run-example">

      <!--
           Determine if a specific example should run with a specific test; to prevent a test from
           running an example, set "run.<examplename>.example to false.
       -->
      <condition property="do.run" value="true">
         <or>
            <and>
               <equals arg1="${example.name}" arg2="queue"/>
               <istrue value="${run.queue.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="topic"/>
               <istrue value="${run.topic.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="mdb"/>
               <istrue value="${run.mdb.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="mdb-failure"/>
               <istrue value="${run.mdb-failure.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="stateless"/>
               <istrue value="${run.stateless.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="ejb3mdb"/>
               <istrue value="${run.ejb3mdb.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="secure-socket"/>
               <istrue value="${run.secure-socket.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="http"/>
               <istrue value="${run.http.example}"/>
            </and>
         </or>
      </condition>
      <antcall target="run-example-internal"/>

   </target>

   <target name="run-clustered-example">

      <!--
           Determine if a specific example should run with a specific test; to prevent a test from
           running an example, set "run.<examplename>.example to false.
       -->
      <condition property="do.run" value="true">
         <or>
            <and>
               <equals arg1="${example.name}" arg2="distributed-queue"/>
               <istrue value="${run.distributed-queue.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="distributed-topic"/>
               <istrue value="${run.distributed-topic.example}"/>
            </and>
            <and>
               <equals arg1="${example.name}" arg2="queue-failover"/>
               <istrue value="${run.queue-failover.example}"/>
            </and>
         </or>
      </condition>
      <antcall target="run-clustered-example-internal"/>

   </target>

   <!-- ======================================================================== -->
   <!--      Internal Targets                                                    -->
   <!-- ======================================================================== -->

   <target name="installation-test"
           depends="check-java-version, check-jboss-availability" unless="skip.current.java">

      <echo message="Testing installation on ${jboss.home}"/>
      <!--
          Run single-node tests
      -->

      <antcall target="run-all-examples"/>

      <!--
          Run clustered tests
      -->

      <antcall target="run-all-clustered-examples"/>
                                                                                  
   </target>

   <target name="check-java-version">
      <condition property="skip.current.java" value="true">
         <or>
            <and>
               <istrue value="${no.java4}"/>
               <equals arg1="1.4" arg2="${ant.java.version}"/>
            </and>
            <and>
               <istrue value="${no.java5}"/>
               <equals arg1="1.5" arg2="${ant.java.version}"/>
            </and>
         </or>
      </condition>
   </target>

   <target name="old-server-compatibility-test" depends="check-jboss-availability">

      <echo message="Checking current client's compatibility with a ${jboss.messaging.version} server"/>
      <unzip src="${jboss.compatibility.home}/../jboss-messaging-${jboss.messaging.version}.zip" dest="./output">
         <patternset>
            <include name="jboss-messaging-${jboss.messaging.version}/jboss-messaging.sar"/>
         </patternset>
      </unzip>

      <antcall target="run-all-examples">
         <param name="jboss.configuration" value="messaging-${jboss.messaging.version}"/>
      </antcall>
      <delete dir="./output/jboss-messaging-${jboss.messaging.version}"/>

   </target>

   <target name="old-client-compatibility-test" depends="check-jboss-availability">

      <echo message="Checking current server's compatibility with a ${jboss.messaging.version} client"/>
      <unzip src="${jboss.compatibility.home}/../jboss-messaging-${jboss.messaging.version}.zip" dest="./output">
         <patternset>
            <include name="jboss-messaging-${jboss.messaging.version}/jboss-messaging-client.jar"/>
         </patternset>
      </unzip>
      <antcall target="run-all-examples">
         <param name="messaging.client.jar.path" value="${basedir}/output/jboss-messaging-${jboss.messaging.version}"/>
      </antcall>
      <delete dir="./output/jboss-messaging-${jboss.messaging.version}"/>

   </target>

   <!-- don't call this target directly, call it via "run-example" -->
   <target name="run-example-internal" if="do.run">

      <antcall target="run-example-internal-common"/>

      <antcall target="display-warnings-and-errors"/>
      <antcall target="fail-on-serialization-debug-output"/>

      <!-- record successful run -->
      <echo message="TEST_TYPE=${smoke.test.type} JBOSS_HOME=${jboss.home} JBOSS_CONFIGURATION=${jboss.configuration} CLIENT_VERSION=${jboss.messaging.version} INSTALLATION_TYPE=${release.admin.target} SERVER_ARTIFACT_NAME=${messaging.server.artifact.name} EXAMPLE_NAME=${example.name}  CLUSTERED=${clustered}${line.separator}"
            file="./output/smoke.log" append="yes"/>

   </target>

   <!-- don't call this target directly, call it via "run-example" -->
   <target name="run-clustered-example-internal" if="do.run">

      <antcall target="run-example-internal-common"/>

      <antcall target="display-warnings-and-errors">
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
      </antcall>

      <antcall target="display-warnings-and-errors">
         <param name="jboss.configuration" value="${jboss.configuration}-node1"/>
      </antcall>

      <antcall target="fail-on-serialization-debug-output">
         <param name="jboss.configuration" value="${jboss.configuration}-node0"/>
      </antcall>

      <antcall target="fail-on-serialization-debug-output">
         <param name="jboss.configuration" value="${jboss.configuration}-node1"/>
      </antcall>

      <!-- record successful run -->
      <echo message="TEST_TYPE=${smoke.test.type} JBOSS_HOME=${jboss.home} JBOSS_CONFIGURATION=${jboss.configuration}-node0 CLIENT_VERSION=${jboss.messaging.version} INSTALLATION_TYPE=${release.admin.target} SERVER_ARTIFACT_NAME=${messaging.server.artifact.name} EXAMPLE_NAME=${example.name} CLUSTERED=true${line.separator}"
            file="./output/smoke.log" append="yes"/>

   </target>

   <target name="run-example-internal-common">

      <ant dir="../../docs/examples/${example.name}" antfile="build.xml" target="clean"/>

      <ant dir="../../docs/examples/${example.name}" antfile="build.xml"/>

      <echo message="Example ${example.name} executed successfully, cleaning ..."/>

      <ant dir="../../docs/examples/${example.name}" antfile="build.xml" target="clean"/>

   </target>

   <target name="check-jboss-availability">

      <fail unless="jboss.home">jboss.home property not set!</fail>

   </target>

   <target name="sleep">

      <echo message="Sleeping for ${sleep.interval} seconds ..."/>
      <sleep seconds="${sleep.interval}"/>

   </target>

   <target name="twiddle">

      <java classname="org.jboss.console.twiddle.Twiddle" fork="yes" failonerror="yes"
            dir="${jboss.home}/bin">
         <arg line="-help"/>
         <classpath>
            <path refid="twiddle.classpath"/>
         </classpath>
      </java>

   </target>

   <target name="ping-jms-server">

      <java classname="org.jboss.console.twiddle.Twiddle" fork="yes" failonerror="yes"
            dir="${jboss.home}/bin">
         <arg line="-s jnp://localhost:${jnpPort} get jboss.messaging:service=ServerPeer serverPeerID"/>
         <classpath>
            <path refid="twiddle.classpath"/>
         </classpath>
      </java>

   </target>

   <target name="deploy-queue">
      <copy file="artifacts/smoketest-queue-service.xml"
            todir="${jboss.home}/server/${jboss.configuration}/deploy"/>
   </target>

   <target name="deploy-clustered-queue">
      <copy file="artifacts/smoketest-clustered-queue-service.xml"
      	    todir="${jboss.home}/server/${jboss.configuration}/deploy"/>
   </target>

   <target name="ping-queue">
      <java classname="org.jboss.console.twiddle.Twiddle" fork="yes" failonerror="yes"
          dir="${jboss.home}/bin">
         <arg line="-s jnp://localhost:${jnpPort} get jboss.messaging.destination:name=${example.queue.name},service=Queue Name"/>
         <classpath>
            <path refid="twiddle.classpath"/>
         </classpath>
      </java>
   </target>

   <target name="deploy-topic">
       <copy file="artifacts/smoketest-topic-service.xml"
             todir="${jboss.home}/server/${jboss.configuration}/deploy"/>
   </target>

   <target name="deploy-clustered-topic">
      <copy file="artifacts/smoketest-clustered-topic-service.xml"
      	    todir="${jboss.home}/server/${jboss.configuration}/deploy"/>
   </target>

   <target name="ping-topic">
      <java classname="org.jboss.console.twiddle.Twiddle" fork="yes" failonerror="yes"
          dir="${jboss.home}/bin">
         <arg line="-s jnp://localhost:${jnpPort} get jboss.messaging.destination:name=${example.topic.name},service=Topic Name"/>
         <classpath>
            <path refid="twiddle.classpath"/>
         </classpath>
      </java>
   </target>

   <target name="display-warnings-and-errors">

      <java classname="org.jboss.test.messaging.tools.ant.DisplayWarningsAndErrors">
         <arg value="${jboss.home}/server/${jboss.configuration}/log/server.log"/>
         <arg value="WARN  [org.jboss.messaging.core.plugin.JDBCPersistenceManager] "/>
         <arg value="ejb3.deployer/"/> <!-- EJB3 doesn't deploy with java 1.4 -->
         <arg value="ejb3-interceptors-aop.xml"/> <!-- EJB3 doesn't deploy with java 1.4 -->
         <arg value="WARN  [org.jboss.system.ServiceController] Problem creating service jboss.aop:service=AspectManager"/>
         <arg value="ERROR [org.jboss.deployment.scanner.URLDeploymentScanner] Incomplete Deployment listing:"/>
         <arg value="ERROR [org.jboss.aop.deployment.AspectDeployer] failed to stop"/>
         <arg value="ERROR [org.jboss.ejb.plugins.LogInterceptor] TransactionRolledbackLocalException in method: public abstract void javax.jms.MessageListener.onMessage(javax.jms.Message), causedBy:"/>
         <arg value="ERROR [org.jboss.ejb.plugins.jms.JMSContainerInvoker] Exception in JMSCI message listener"/>
         <arg value="restart will delete it"/>
         <arg value="web-console.war/"/> <!-- Only on JBoss 5 -->
         <arg value="jmx-console.war/"/> <!-- Only on JBoss 5 -->
         <classpath>
            <pathelement location="../output/classes"/>
         </classpath>
      </java>

   </target>

   <target name="fail-on-serialization-debug-output">

      <java classname="org.jboss.test.messaging.tools.ant.FailOnSerializationDebugOutput">
         <arg value="${jboss.home}/server/${jboss.configuration}/log/server.log"/>
         <classpath>
            <pathelement location="../output/classes"/>
         </classpath>
      </java>

   </target>

   <target name="report">

      <java classname="org.jboss.test.messaging.tools.ant.GenerateSmokeReport">
         <arg value="-inputfile"/>
         <arg value="./output/smoke.log"/>
         <arg value="-outputdir"/>
         <arg value="./output"/>
         <arg value="-basename"/>
         <arg value="smoke-test-report"/>
         <arg value="-installerdir"/>
         <arg value="C:\work\jnlp"/>
         <arg value="-order"/>
         <arg value="queue,topic,http,secure-socket,mdb,mdb-failure,stateless,distributed-queue,distributed-topic,queue-failover"/>
         <classpath>
            <pathelement location="../output/classes"/>
         </classpath>
      </java>

   </target>

   <target name="clean">
      <delete dir="./output"/>
   </target>

   <target name="print-classpath">

      <pathconvert targetos="unix" property="classpath.tostring.property" refid="twiddle.classpath"/>
      <echo message="${classpath.tostring.property}"/>

   </target>

</project>

