<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  Ant file to create a JBoss 4.x messaging configuration based on a     -->
<!--  default configuration.                                                -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="install" name="Create JBoss 4.x Messaging Configuration">

   <property environment="ENV"/>

   <property file="./do-not-distribute.properties"/>

   <property name="jboss.home" value="${ENV.JBOSS_HOME}"/>
   <property name="messaging.config.name" value="messaging"/>
   <!-- DO NOT change this value here, otherwise the installation script won't work. Change it in
        do-not-distribute.properties.
   -->
   <property name="relative.sar.location" value=".."/>
   <property name="messaging.sar.name" value="jboss-messaging-scoped.sar"/>

   <target name="validate-jboss">
      <fail unless="jboss.home" message="JBOSS_HOME environment variable not set! Set it and try again."/>
      <available property="default-config" type="dir" file="${jboss.home}/server/default"/>
      <fail unless="default-config" message="${jboss.home}/server/default not found!"/>
   </target>

   <target name="prevent-messaging-overwrite">
      <available property="messaging-config" type="dir" file="${jboss.home}/server/${messaging.config.name}"/>
      <fail if="messaging-config" message="'${messaging.config.name}' configuration already exists! Delete it manually and try again."/>
   </target>

   <target name="validate-messaging-sar">
      <available property="messaging-sar-exists" type="file" file="${relative.sar.location}/${messaging.sar.name}"/>
      <fail unless="messaging-sar-exists" message="${relative.sar.location}/${messaging.sar.name} does not exist! Build it and try again."/>
   </target>

   <target name="install" depends="create-server-config"/>

   <target name="create-server-config" depends="validate-jboss, prevent-messaging-overwrite, validate-messaging-sar">

      <echo message="Creating JBoss Messaging configuration '${messaging.config.name}' for ${jboss.home}"/>

      <mkdir dir="${jboss.home}/server/${messaging.config.name}"/>
      <copy todir="${jboss.home}/server/${messaging.config.name}">
         <fileset dir="${jboss.home}/server/default">
            <exclude name="data/**"/>
            <exclude name="work/**"/>
            <exclude name="log/**"/>
            <exclude name="tmp/**"/>
            <exclude name="deploy/jms/**"/>
            <exclude name="lib/jboss-messaging.jar"/>
         </fileset>
      </copy>
      <copy file="${jboss.home}/server/default/deploy/jms/jms-ra.rar"
            todir="${jboss.home}/server/${messaging.config.name}/deploy"/>

      <!-- add a "messaging" security domain -->
      <replaceregexp file="${jboss.home}/server/${messaging.config.name}/conf/login-config.xml" flags="s">
         <regexp pattern="(\x3cpolicy\x3e)"/>
         <substitution expression="\1 &lt;application-policy name = &quot;messaging&quot;&gt;
         &lt;authentication&gt;&lt;login-module code = &quot;org.jboss.security.auth.spi.UsersRolesLoginModule&quot;
            flag = &quot;required&quot; &gt;
         &lt;module-option name = &quot;unauthenticatedIdentity&quot;&gt;guest&lt;/module-option&gt;
         &lt;module-option name = &quot;usersProperties&quot;&gt;messaging-users.properties&lt;/module-option&gt;
         &lt;module-option name = &quot;rolesProperties&quot;&gt;messaging-roles.properties&lt;/module-option&gt;
         &lt;/login-module&gt;&lt;/authentication&gt;&lt;/application-policy&gt;"/>
      </replaceregexp>

      <!-- Make sure JNDI CallByValue is disabled, otherwise MDB deployments will fail -->
      <property name="naming.config.file" value="${jboss.home}/server/${messaging.config.name}/deploy/naming-service.xml"/>
      <available property="naming.service.config.present" file="${naming.config.file}"/>
      <antcall target="enable-jndi-call-by-reference"/>

      <!-- copy the scoped sar
      <copy todir="${jboss.home}/server/${messaging.config.name}/deploy"
            file="${relative.sar.location}/${messaging.sar.name}"/>
      -->
      
      <!-- we deploy the archive exploded so that users can easily access the configuration files -->
      <unjar src="${relative.sar.location}/${messaging.sar.name}"
             dest="${jboss.home}/server/${messaging.config.name}/deploy/jboss-messaging.sar">
      </unjar>
   </target>

   <target name="enable-jndi-call-by-reference" if="naming.service.config.present">
      <replaceregexp file="${naming.config.file}" flags="s">
         <regexp pattern="\x3cattribute name=\x22CallByValue\x22\x3etrue\x3c/attribute\x3e"/>
         <substitution expression="&lt;attribute name=&quot;CallByValue&quot;&gt;false&lt;/attribute&gt;"/>
      </replaceregexp>
   </target>

   <target name="dump">
      <echo message="jboss.home=${jboss.home}"/>
      <echo message="messaging.config.name=${messaging.config.name}"/>
      <echo message="relative.sar.location=${relative.sar.location}"/>
   </target>


</project>

