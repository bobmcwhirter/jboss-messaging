<?xml version="1.0" encoding="UTF-8"?>

<!-- ====================================================================== -->
<!--                                                                        -->
<!--  Ant file to create a JBoss 4.20 or later messaging configurations     -->
<!--  based on a default configuration.                                     -->
<!--  Please note that this script will only work with JBoss AS 4.2.0 or    -->
<!--  later JBoss 4 series.                                                 -->
<!--  For installing in JBoss 4.0.x (not recommended due to various         -->
<!--  jar incompatibilities you must do a manual install - see              -->
<!--  user guide for more information                                       -->
<!--                                                                        -->
<!-- ====================================================================== -->

<!-- $Id$ -->

<project default="default" name="Create JBoss 4.x Messaging Configuration">

   <property environment="ENV"/>

   <property file="./release-admin.properties"/>

   <property name="jboss.home" value="${ENV.JBOSS_HOME}"/>
   <property name="messaging.config.name" value="messaging"/>
   <property name="messaging.config.source" value="default"/>

   <!--
        DO NOT change these values here, otherwise the installation script might break. If you need
        to change them, do it in release-admin.properties.
   -->

   <!-- The location of the sar and jar files -->
   <property name="artifacts.location" value="../"/>

   <!-- The name of the sar -->
   <property name="sar.name" value="jboss-messaging.sar"/>
   <property name="jar.name" value="jboss-messaging.jar"/>

   <!-- ======================================================================================== -->
   <!-- Top level targets. These are the "modes" this script is supposed to work in.             -->
   <!-- ======================================================================================== -->

   <target name="default">
      <antcall target="create-server-config"/>
   </target>

   <!-- ======================================================================================== -->
   <!-- Internal targets                                                                         -->
   <!-- ======================================================================================== -->

   <!-- The JBOSS_HOME environment variable and the directory must exist, we also check we are running 
        in JBoss 4.2.0 or later JBoss 4 series -->
   <target name="validate-jboss">
      <fail unless="jboss.home" message="JBOSS_HOME environment variable not set! Set it and try again."/>
      <available property="default-config" type="dir" file="${jboss.home}/server/${messaging.config.source}"/>
      <fail unless="default-config" message="${jboss.home}/server/${messaging.config.source} not found!"/>
   </target>

   <!-- If the target configuration already exists, we don't overwrite it, since we don't want to delete
        someone's important stuff -->
   <target name="prevent-messaging-overwrite">
      <available property="messaging-config" type="dir" file="${jboss.home}/server/${messaging.config.name}"/>
      <fail if="messaging-config" message="'${messaging.config.name}' configuration already exists! Delete it manually and try again."/>
   </target>

   <!-- We make sure the sar file exists -->
   <target name="validate-messaging-artifact">
      <available property="messaging-artifact-exists" type="file" file="${artifacts.location}/${sar.name}"/>
      <fail unless="messaging-artifact-exists" message="${artifacts.location}/${sar.name} does not exist! Build it and try again."/>
   </target>

   <!-- Create a server configuration based on a default server configuration -->
   <target name="create-server-config" depends="validate-jboss, prevent-messaging-overwrite, validate-messaging-artifact">

      <echo message="Creating JBoss Messaging configuration '${messaging.config.name}' for ${jboss.home} based on configuration '${messaging.config.source}' with ${sar.name}"/>

      <mkdir dir="${jboss.home}/server/${messaging.config.name}"/>

      <copy todir="${jboss.home}/server/${messaging.config.name}">
         <fileset dir="${jboss.home}/server/${messaging.config.source}">
            <include name="conf/**"/>
            <include name="deploy/**"/>
            <include name="lib/**"/>
	    <include name="farm/**"/>
	    <include name="deploy-hasingleton/**"/>
            <!-- Don't copy jbossmq -->
            <exclude name="deploy/jms/**"/>
	    <exclude name="deploy-hasingleton/jms/**"/>
            <exclude name="lib/jbossmq.jar"/>
         </fileset>
      </copy>

      <!-- add a "messaging" security domain -->
      <replaceregexp file="${jboss.home}/server/${messaging.config.name}/conf/login-config.xml" flags="s">
         <regexp pattern="(\x3cpolicy\x3e)"/>
         <substitution expression="\1&#013;&#010;&#013;&#010;    &lt;application-policy name = &quot;messaging&quot;&gt;&#013;&#010;        &lt;authentication&gt;&#013;&#010;
            &lt;login-module code = &quot;org.jboss.security.auth.spi.UsersRolesLoginModule&quot;&#013;&#010;
            flag = &quot;required&quot; &gt;&#013;&#010;
         &lt;module-option name = &quot;unauthenticatedIdentity&quot;&gt;guest&lt;/module-option&gt;&#013;&#010;
         &lt;module-option name = &quot;usersProperties&quot;&gt;props/messaging-users.properties&lt;/module-option&gt;&#013;&#010;
         &lt;module-option name = &quot;rolesProperties&quot;&gt;props/messaging-roles.properties&lt;/module-option&gt;&#013;&#010;
         &lt;/login-module&gt;&#013;&#010;        &lt;/authentication&gt;&#013;&#010;    &lt;/application-policy&gt;&#013;&#010;"/>
      </replaceregexp>

      <!-- we deploy the archive exploded so that users can easily access the configuration files -->
      <antcall target="expand-sar"/>

      <!-- copy jboss-messaging.jar to the lib directory. It needs to be in lib so it can be seen by the JTA
           recovery manager for example -->
      <copy file="${artifacts.location}/${jar.name}" todir="${jboss.home}/server/${messaging.config.name}/lib"/>

      <!-- Copy the default security properties files to conf/props-->
      <copy todir="${jboss.home}/server/${messaging.config.name}/conf/props">
          <fileset dir="../src/etc/server/default/config">
             <include name="messaging-*.properties"/>
          </fileset>
      </copy>

      <!-- Copy the JMS JCA resource adaptor -->
      <copy file="${jboss.home}/server/${messaging.config.source}/deploy/jms/jms-ra.rar"
            todir="${jboss.home}/server/${messaging.config.name}/deploy"/>

      <!-- Copy the JMS provider loader stuff -->
      <copy todir="${jboss.home}/server/${messaging.config.name}/deploy">
         <fileset dir="${jboss.home}/server/${messaging.config.source}/deploy/jms" includes="jms-ds.xml,hajndi-jms-ds.xml"/>
         <filterset begintoken="&quot;" endtoken="&quot;">
            <filter token="jboss.mq:service=JMSProviderLoader,name=JMSProvider" value="&quot;jboss.messaging:service=JMSProviderLoader,name=JMSProvider&quot;"/>
            <filter token="jboss.mq:service=ServerSessionPoolMBean,name=StdJMSPool" value="&quot;jboss.messaging:service=ServerSessionPoolMBean,name=StdJMSPool&quot;"/>
         </filterset>
      </copy>

   </target>


   <!-- Expand the sar file in the deploy directory -->
   <target name="expand-sar">
      <unjar src="${artifacts.location}/${sar.name}"
             dest="${jboss.home}/server/${messaging.config.name}/deploy/jboss-messaging.sar">
      </unjar>
   </target>

</project>

